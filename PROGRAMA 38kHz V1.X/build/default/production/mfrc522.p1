Version 4.0 HI-TECH Software Intermediate Code
"297 C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 297:     struct {
[s S10 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S10 . RC0 RC1 RC2 RC3 RC4 RC5 RC6 RC7 ]
"296
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 296: typedef union {
[u S9 `S10 1 ]
[n S9 . . ]
"308
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 308: extern volatile PORTCbits_t PORTCbits __attribute__((address(0x007)));
[v _PORTCbits `VS9 ~T0 @X0 0 e@7 ]
"359
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 359:     struct {
[s S12 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S12 . RD0 RD1 RD2 RD3 RD4 RD5 RD6 RD7 ]
"358
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 358: typedef union {
[u S11 `S12 1 ]
[n S11 . . ]
"370
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 370: extern volatile PORTDbits_t PORTDbits __attribute__((address(0x008)));
[v _PORTDbits `VS11 ~T0 @X0 0 e@8 ]
"1547
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 1547:     struct {
[s S57 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S57 . TRISC0 TRISC1 TRISC2 TRISC3 TRISC4 TRISC5 TRISC6 TRISC7 ]
"1546
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 1546: typedef union {
[u S56 `S57 1 ]
[n S56 . . ]
"1558
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 1558: extern volatile TRISCbits_t TRISCbits __attribute__((address(0x087)));
[v _TRISCbits `VS56 ~T0 @X0 0 e@135 ]
"1609
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 1609:     struct {
[s S59 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S59 . TRISD0 TRISD1 TRISD2 TRISD3 TRISD4 TRISD5 TRISD6 TRISD7 ]
"1608
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 1608: typedef union {
[u S58 `S59 1 ]
[n S58 . . ]
"1620
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 1620: extern volatile TRISDbits_t TRISDbits __attribute__((address(0x088)));
[v _TRISDbits `VS58 ~T0 @X0 0 e@136 ]
"116 ./mfrc522.h
[; ;./mfrc522.h: 116: void MFRC522_Reset(void);
[v _MFRC522_Reset `(v ~T0 @X0 0 ef ]
"55 C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 55: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"62
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 62: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"69
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 69: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"76
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 76: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"162
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 162: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"169
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 169: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"231
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 231: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"293
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 293: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"355
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 355: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"417
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 417: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"455
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 455: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"462
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 462: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"540
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 540: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"596
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 596: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"653
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 653: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"660
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 660: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"667
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 667: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"674
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 674: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"768
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 768: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"775
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 775: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"846
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 846: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"853
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 853: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"923
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 923: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"930
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 930: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"937
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 937: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"944
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 944: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"1041
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 1041: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1136
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 1136: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1143
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 1143: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1150
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 1150: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1157
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 1157: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1164
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 1164: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1171
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 1171: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1241
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 1241: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1248
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 1248: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1349
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 1349: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1419
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 1419: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1481
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 1481: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1543
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 1543: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1605
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 1605: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1667
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 1667: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1705
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 1705: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1761
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 1761: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1818
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 1818: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1865
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 1865: __asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
"1930
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 1930: __asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
"1982
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 1982: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"2044
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 2044: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"2051
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 2051: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"2058
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 2058: __asm("SSPMSK equ 093h");
[; <" SSPMSK equ 093h ;# ">
"2063
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 2063: __asm("MSK equ 093h");
[; <" MSK equ 093h ;# ">
"2180
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 2180: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2349
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 2349: __asm("WPUB equ 095h");
[; <" WPUB equ 095h ;# ">
"2419
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 2419: __asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
"2489
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 2489: __asm("VRCON equ 097h");
[; <" VRCON equ 097h ;# ">
"2559
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 2559: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2645
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 2645: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2707
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 2707: __asm("SPBRGH equ 09Ah");
[; <" SPBRGH equ 09Ah ;# ">
"2777
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 2777: __asm("PWM1CON equ 09Bh");
[; <" PWM1CON equ 09Bh ;# ">
"2847
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 2847: __asm("ECCPAS equ 09Ch");
[; <" ECCPAS equ 09Ch ;# ">
"2929
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 2929: __asm("PSTRCON equ 09Dh");
[; <" PSTRCON equ 09Dh ;# ">
"2973
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 2973: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2980
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 2980: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"3014
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 3014: __asm("WDTCON equ 0105h");
[; <" WDTCON equ 0105h ;# ">
"3067
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 3067: __asm("CM1CON0 equ 0107h");
[; <" CM1CON0 equ 0107h ;# ">
"3132
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 3132: __asm("CM2CON0 equ 0108h");
[; <" CM2CON0 equ 0108h ;# ">
"3197
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 3197: __asm("CM2CON1 equ 0109h");
[; <" CM2CON1 equ 0109h ;# ">
"3248
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 3248: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"3253
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 3253: __asm("EEDAT equ 010Ch");
[; <" EEDAT equ 010Ch ;# ">
"3260
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 3260: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"3267
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 3267: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"3274
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 3274: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"3281
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 3281: __asm("SRCON equ 0185h");
[; <" SRCON equ 0185h ;# ">
"3338
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 3338: __asm("BAUDCTL equ 0187h");
[; <" BAUDCTL equ 0187h ;# ">
"3390
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 3390: __asm("ANSEL equ 0188h");
[; <" ANSEL equ 0188h ;# ">
"3452
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 3452: __asm("ANSELH equ 0189h");
[; <" ANSELH equ 0189h ;# ">
"3502
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 3502: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"3547
[; ;C:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f887.h: 3547: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"3 mfrc522.c
[; ;mfrc522.c: 3: unsigned char MFRC522_Rd(unsigned char address)
[v _MFRC522_Rd `(uc ~T0 @X0 1 ef1`uc ]
"4
[; ;mfrc522.c: 4: {
{
[e :U _MFRC522_Rd ]
"3
[; ;mfrc522.c: 3: unsigned char MFRC522_Rd(unsigned char address)
[v _address `uc ~T0 @X0 1 r1 ]
"4
[; ;mfrc522.c: 4: {
[f ]
"5
[; ;mfrc522.c: 5:     unsigned int i, ucAddr;
[v _i `ui ~T0 @X0 1 a ]
[v _ucAddr `ui ~T0 @X0 1 a ]
"6
[; ;mfrc522.c: 6:     unsigned int ucResult = 0;
[v _ucResult `ui ~T0 @X0 1 a ]
[e = _ucResult -> -> 0 `i `ui ]
"7
[; ;mfrc522.c: 7:     PORTCbits.RC3 = 0;
[e = . . _PORTCbits 0 3 -> -> 0 `i `uc ]
"8
[; ;mfrc522.c: 8:     PORTCbits.RC4 = 0;
[e = . . _PORTCbits 0 4 -> -> 0 `i `uc ]
"9
[; ;mfrc522.c: 9:     ucAddr = ((address << 1) & 0x7E) | 0x80;
[e = _ucAddr -> | & << -> _address `i -> 1 `i -> 126 `i -> 128 `i `ui ]
"11
[; ;mfrc522.c: 11:     for(i=8; i>0; i--)
{
[e = _i -> -> 8 `i `ui ]
[e $ > _i -> -> 0 `i `ui 139  ]
[e $U 140  ]
[e :U 139 ]
"12
[; ;mfrc522.c: 12:     {
{
"13
[; ;mfrc522.c: 13:         PORTCbits.RC5 = ((ucAddr & 0x80) == 0x80);
[e = . . _PORTCbits 0 5 -> -> == & _ucAddr -> -> 128 `i `ui -> -> 128 `i `ui `i `uc ]
"14
[; ;mfrc522.c: 14:         PORTCbits.RC3 = 1;
[e = . . _PORTCbits 0 3 -> -> 1 `i `uc ]
"15
[; ;mfrc522.c: 15:         ucAddr <<= 1;
[e =<< _ucAddr -> -> 1 `i `ui ]
"16
[; ;mfrc522.c: 16:         PORTCbits.RC3 = 0;
[e = . . _PORTCbits 0 3 -> -> 0 `i `uc ]
"17
[; ;mfrc522.c: 17:     }
}
[e -- _i -> -> 1 `i `ui ]
[e $ > _i -> -> 0 `i `ui 139  ]
[e :U 140 ]
}
"18
[; ;mfrc522.c: 18:     for(i=8; i>0; i--)
{
[e = _i -> -> 8 `i `ui ]
[e $ > _i -> -> 0 `i `ui 142  ]
[e $U 143  ]
[e :U 142 ]
"19
[; ;mfrc522.c: 19:     {
{
"20
[; ;mfrc522.c: 20:         PORTCbits.RC3 = 1;
[e = . . _PORTCbits 0 3 -> -> 1 `i `uc ]
"21
[; ;mfrc522.c: 21:         ucResult <<= 1;
[e =<< _ucResult -> -> 1 `i `ui ]
"22
[; ;mfrc522.c: 22:         ucResult |= (short)PORTDbits.RD2;
[e =| _ucResult -> -> . . _PORTDbits 0 2 `s `ui ]
"23
[; ;mfrc522.c: 23:         PORTCbits.RC3 = 0;
[e = . . _PORTCbits 0 3 -> -> 0 `i `uc ]
"24
[; ;mfrc522.c: 24:     }
}
[e -- _i -> -> 1 `i `ui ]
[e $ > _i -> -> 0 `i `ui 142  ]
[e :U 143 ]
}
"25
[; ;mfrc522.c: 25:     PORTCbits.RC4 = 1;
[e = . . _PORTCbits 0 4 -> -> 1 `i `uc ]
"26
[; ;mfrc522.c: 26:     PORTCbits.RC3 = 1;
[e = . . _PORTCbits 0 3 -> -> 1 `i `uc ]
"27
[; ;mfrc522.c: 27:     return ucResult;
[e ) -> _ucResult `uc ]
[e $UE 138  ]
"28
[; ;mfrc522.c: 28: }
[e :UE 138 ]
}
"30
[; ;mfrc522.c: 30: void MFRC522_Wr(unsigned char address, unsigned char value)
[v _MFRC522_Wr `(v ~T0 @X0 1 ef2`uc`uc ]
"31
[; ;mfrc522.c: 31: {
{
[e :U _MFRC522_Wr ]
"30
[; ;mfrc522.c: 30: void MFRC522_Wr(unsigned char address, unsigned char value)
[v _address `uc ~T0 @X0 1 r1 ]
[v _value `uc ~T0 @X0 1 r2 ]
"31
[; ;mfrc522.c: 31: {
[f ]
"32
[; ;mfrc522.c: 32:     unsigned char i, ucAddr;
[v _i `uc ~T0 @X0 1 a ]
[v _ucAddr `uc ~T0 @X0 1 a ]
"33
[; ;mfrc522.c: 33:     PORTCbits.RC3 = 0;
[e = . . _PORTCbits 0 3 -> -> 0 `i `uc ]
"34
[; ;mfrc522.c: 34:     PORTCbits.RC4 = 0;
[e = . . _PORTCbits 0 4 -> -> 0 `i `uc ]
"35
[; ;mfrc522.c: 35:     ucAddr = ((address << 1) & 0x7E);
[e = _ucAddr -> & << -> _address `i -> 1 `i -> 126 `i `uc ]
"37
[; ;mfrc522.c: 37:     for(i=8; i>0; i--)
{
[e = _i -> -> 8 `i `uc ]
[e $ > -> _i `i -> 0 `i 146  ]
[e $U 147  ]
[e :U 146 ]
"38
[; ;mfrc522.c: 38:     {
{
"39
[; ;mfrc522.c: 39:         PORTCbits.RC5 = ((ucAddr&0x80) == 0x80);
[e = . . _PORTCbits 0 5 -> -> == & -> _ucAddr `i -> 128 `i -> 128 `i `i `uc ]
"40
[; ;mfrc522.c: 40:         PORTCbits.RC3 = 1;
[e = . . _PORTCbits 0 3 -> -> 1 `i `uc ]
"41
[; ;mfrc522.c: 41:         ucAddr <<= 1;
[e =<< _ucAddr -> -> 1 `i `uc ]
"42
[; ;mfrc522.c: 42:         PORTCbits.RC3 = 0;
[e = . . _PORTCbits 0 3 -> -> 0 `i `uc ]
"43
[; ;mfrc522.c: 43:     }
}
[e -- _i -> -> 1 `i `uc ]
[e $ > -> _i `i -> 0 `i 146  ]
[e :U 147 ]
}
"44
[; ;mfrc522.c: 44:     for(i=8; i>0; i--)
{
[e = _i -> -> 8 `i `uc ]
[e $ > -> _i `i -> 0 `i 149  ]
[e $U 150  ]
[e :U 149 ]
"45
[; ;mfrc522.c: 45:     {
{
"46
[; ;mfrc522.c: 46:         PORTCbits.RC5 = ((value&0x80) == 0x80);
[e = . . _PORTCbits 0 5 -> -> == & -> _value `i -> 128 `i -> 128 `i `i `uc ]
"47
[; ;mfrc522.c: 47:         PORTCbits.RC3 = 1;
[e = . . _PORTCbits 0 3 -> -> 1 `i `uc ]
"48
[; ;mfrc522.c: 48:         value <<= 1;
[e =<< _value -> -> 1 `i `uc ]
"49
[; ;mfrc522.c: 49:         PORTCbits.RC3 = 0;
[e = . . _PORTCbits 0 3 -> -> 0 `i `uc ]
"50
[; ;mfrc522.c: 50:     }
}
[e -- _i -> -> 1 `i `uc ]
[e $ > -> _i `i -> 0 `i 149  ]
[e :U 150 ]
}
"51
[; ;mfrc522.c: 51:     PORTCbits.RC4 = 1;
[e = . . _PORTCbits 0 4 -> -> 1 `i `uc ]
"52
[; ;mfrc522.c: 52:     PORTCbits.RC3 = 1;
[e = . . _PORTCbits 0 3 -> -> 1 `i `uc ]
"53
[; ;mfrc522.c: 53: }
[e :UE 145 ]
}
"55
[; ;mfrc522.c: 55: static void MFRC522_Clear_Bit(char addr, char mask)
[v _MFRC522_Clear_Bit `(v ~T0 @X0 1 sf2`uc`uc ]
"56
[; ;mfrc522.c: 56: {
{
[e :U _MFRC522_Clear_Bit ]
"55
[; ;mfrc522.c: 55: static void MFRC522_Clear_Bit(char addr, char mask)
[v _addr `uc ~T0 @X0 1 r1 ]
[v _mask `uc ~T0 @X0 1 r2 ]
"56
[; ;mfrc522.c: 56: {
[f ]
"57
[; ;mfrc522.c: 57:     unsigned char tmp = 0;
[v _tmp `uc ~T0 @X0 1 a ]
[e = _tmp -> -> 0 `i `uc ]
"58
[; ;mfrc522.c: 58:     tmp = MFRC522_Rd(addr) ;
[e = _tmp ( _MFRC522_Rd (1 -> _addr `uc ]
"59
[; ;mfrc522.c: 59:     MFRC522_Wr(addr, tmp&~mask);
[e ( _MFRC522_Wr (2 , -> _addr `uc -> & -> _tmp `i ~ -> _mask `i `uc ]
"60
[; ;mfrc522.c: 60: }
[e :UE 152 ]
}
"62
[; ;mfrc522.c: 62: static void MFRC522_Set_Bit(char addr, char mask)
[v _MFRC522_Set_Bit `(v ~T0 @X0 1 sf2`uc`uc ]
"63
[; ;mfrc522.c: 63: {
{
[e :U _MFRC522_Set_Bit ]
"62
[; ;mfrc522.c: 62: static void MFRC522_Set_Bit(char addr, char mask)
[v _addr `uc ~T0 @X0 1 r1 ]
[v _mask `uc ~T0 @X0 1 r2 ]
"63
[; ;mfrc522.c: 63: {
[f ]
"64
[; ;mfrc522.c: 64:     unsigned char tmp = 0;
[v _tmp `uc ~T0 @X0 1 a ]
[e = _tmp -> -> 0 `i `uc ]
"65
[; ;mfrc522.c: 65:     tmp = MFRC522_Rd(addr);
[e = _tmp ( _MFRC522_Rd (1 -> _addr `uc ]
"66
[; ;mfrc522.c: 66:     MFRC522_Wr(addr, tmp | mask);
[e ( _MFRC522_Wr (2 , -> _addr `uc -> | -> _tmp `i -> _mask `i `uc ]
"67
[; ;mfrc522.c: 67: }
[e :UE 153 ]
}
"70
[; ;mfrc522.c: 70: void MFRC522_AntennaOn(void)
[v _MFRC522_AntennaOn `(v ~T0 @X0 1 ef ]
"71
[; ;mfrc522.c: 71: {
{
[e :U _MFRC522_AntennaOn ]
[f ]
"72
[; ;mfrc522.c: 72:     unsigned char stt;
[v _stt `uc ~T0 @X0 1 a ]
"73
[; ;mfrc522.c: 73:     stt = MFRC522_Rd(0x14);
[e = _stt ( _MFRC522_Rd (1 -> -> 20 `i `uc ]
"74
[; ;mfrc522.c: 74:     MFRC522_Set_Bit(0x14, 0x03);
[e ( _MFRC522_Set_Bit (2 , -> -> 20 `i `uc -> -> 3 `i `uc ]
"75
[; ;mfrc522.c: 75: }
[e :UE 154 ]
}
"77
[; ;mfrc522.c: 77: void MFRC522_AntennaOff(void)
[v _MFRC522_AntennaOff `(v ~T0 @X0 1 ef ]
"78
[; ;mfrc522.c: 78: {
{
[e :U _MFRC522_AntennaOff ]
[f ]
"79
[; ;mfrc522.c: 79:     MFRC522_Clear_Bit(0x14, 0x03);
[e ( _MFRC522_Clear_Bit (2 , -> -> 20 `i `uc -> -> 3 `i `uc ]
"80
[; ;mfrc522.c: 80: }
[e :UE 155 ]
}
"82
[; ;mfrc522.c: 82: void MFRC522_Init(void)
[v _MFRC522_Init `(v ~T0 @X0 1 ef ]
"83
[; ;mfrc522.c: 83: {
{
[e :U _MFRC522_Init ]
[f ]
"84
[; ;mfrc522.c: 84:     TRISCbits.TRISC5 = 0;
[e = . . _TRISCbits 0 5 -> -> 0 `i `uc ]
"85
[; ;mfrc522.c: 85:     TRISCbits.TRISC3 = 0;
[e = . . _TRISCbits 0 3 -> -> 0 `i `uc ]
"86
[; ;mfrc522.c: 86:     TRISCbits.TRISC4 = 0;
[e = . . _TRISCbits 0 4 -> -> 0 `i `uc ]
"87
[; ;mfrc522.c: 87:     TRISDbits.TRISD2 = 1;
[e = . . _TRISDbits 0 2 -> -> 1 `i `uc ]
"88
[; ;mfrc522.c: 88:     PORTCbits.RC3 = 0;
[e = . . _PORTCbits 0 3 -> -> 0 `i `uc ]
"89
[; ;mfrc522.c: 89:     PORTCbits.RC5 = 0;
[e = . . _PORTCbits 0 5 -> -> 0 `i `uc ]
"90
[; ;mfrc522.c: 90:     PORTCbits.RC4 = 1;
[e = . . _PORTCbits 0 4 -> -> 1 `i `uc ]
"91
[; ;mfrc522.c: 91:     MFRC522_Reset();
[e ( _MFRC522_Reset ..  ]
"92
[; ;mfrc522.c: 92:     MFRC522_Wr(0x2A, 0x8D);
[e ( _MFRC522_Wr (2 , -> -> 42 `i `uc -> -> 141 `i `uc ]
"93
[; ;mfrc522.c: 93:     MFRC522_Wr(0x2B, 0x3E);
[e ( _MFRC522_Wr (2 , -> -> 43 `i `uc -> -> 62 `i `uc ]
"94
[; ;mfrc522.c: 94:     MFRC522_Wr(0x2D, 30);
[e ( _MFRC522_Wr (2 , -> -> 45 `i `uc -> -> 30 `i `uc ]
"95
[; ;mfrc522.c: 95:     MFRC522_Wr(0x2C, 0);
[e ( _MFRC522_Wr (2 , -> -> 44 `i `uc -> -> 0 `i `uc ]
"96
[; ;mfrc522.c: 96:     MFRC522_Wr(0x15, 0x40);
[e ( _MFRC522_Wr (2 , -> -> 21 `i `uc -> -> 64 `i `uc ]
"97
[; ;mfrc522.c: 97:     MFRC522_Wr(0x11, 0x3D);
[e ( _MFRC522_Wr (2 , -> -> 17 `i `uc -> -> 61 `i `uc ]
"98
[; ;mfrc522.c: 98:     MFRC522_AntennaOff();
[e ( _MFRC522_AntennaOff ..  ]
"99
[; ;mfrc522.c: 99:     MFRC522_AntennaOn();
[e ( _MFRC522_AntennaOn ..  ]
"100
[; ;mfrc522.c: 100: }
[e :UE 156 ]
}
"102
[; ;mfrc522.c: 102: char MFRC522_ToCard(char command, char *sendData, char sendLen, char *backData, unsigned *backLen)
[v _MFRC522_ToCard `(uc ~T0 @X0 1 ef5`uc`*uc`uc`*uc`*ui ]
"103
[; ;mfrc522.c: 103: {
{
[e :U _MFRC522_ToCard ]
"102
[; ;mfrc522.c: 102: char MFRC522_ToCard(char command, char *sendData, char sendLen, char *backData, unsigned *backLen)
[v _command `uc ~T0 @X0 1 r1 ]
[v _sendData `*uc ~T0 @X0 1 r2 ]
[v _sendLen `uc ~T0 @X0 1 r3 ]
[v _backData `*uc ~T0 @X0 1 r4 ]
[v _backLen `*ui ~T0 @X0 1 r5 ]
"103
[; ;mfrc522.c: 103: {
[f ]
"104
[; ;mfrc522.c: 104:     char _status = 2;
[v __status `uc ~T0 @X0 1 a ]
[e = __status -> -> 2 `i `uc ]
"105
[; ;mfrc522.c: 105:     char irqEn = 0x00;
[v _irqEn `uc ~T0 @X0 1 a ]
[e = _irqEn -> -> 0 `i `uc ]
"106
[; ;mfrc522.c: 106:     char waitIRq = 0x00;
[v _waitIRq `uc ~T0 @X0 1 a ]
[e = _waitIRq -> -> 0 `i `uc ]
"107
[; ;mfrc522.c: 107:     char lastBits;
[v _lastBits `uc ~T0 @X0 1 a ]
"108
[; ;mfrc522.c: 108:     char n;
[v _n `uc ~T0 @X0 1 a ]
"109
[; ;mfrc522.c: 109:     unsigned i;
[v _i `ui ~T0 @X0 1 a ]
"111
[; ;mfrc522.c: 111:     switch(command)
[e $U 159  ]
"112
[; ;mfrc522.c: 112:     {
{
"113
[; ;mfrc522.c: 113:         case 0x0E:
[e :U 160 ]
"114
[; ;mfrc522.c: 114:             irqEn = 0x12;
[e = _irqEn -> -> 18 `i `uc ]
"115
[; ;mfrc522.c: 115:             waitIRq = 0x10;
[e = _waitIRq -> -> 16 `i `uc ]
"116
[; ;mfrc522.c: 116:             break;
[e $U 158  ]
"118
[; ;mfrc522.c: 118:         case 0x0C:
[e :U 161 ]
"119
[; ;mfrc522.c: 119:             irqEn = 0x77;
[e = _irqEn -> -> 119 `i `uc ]
"120
[; ;mfrc522.c: 120:             waitIRq = 0x30;
[e = _waitIRq -> -> 48 `i `uc ]
"121
[; ;mfrc522.c: 121:             break;
[e $U 158  ]
"123
[; ;mfrc522.c: 123:         default:
[e :U 162 ]
"124
[; ;mfrc522.c: 124:             break;
[e $U 158  ]
"125
[; ;mfrc522.c: 125:     }
}
[e $U 158  ]
[e :U 159 ]
[e [\ -> _command `i , $ -> 14 `i 160
 , $ -> 12 `i 161
 162 ]
[e :U 158 ]
"126
[; ;mfrc522.c: 126:     MFRC522_Wr(0x02, irqEn | 0x80);
[e ( _MFRC522_Wr (2 , -> -> 2 `i `uc -> | -> _irqEn `i -> 128 `i `uc ]
"127
[; ;mfrc522.c: 127:     MFRC522_Clear_Bit(0x04, 0x80);
[e ( _MFRC522_Clear_Bit (2 , -> -> 4 `i `uc -> -> 128 `i `uc ]
"128
[; ;mfrc522.c: 128:     MFRC522_Set_Bit(0x0A, 0x80);
[e ( _MFRC522_Set_Bit (2 , -> -> 10 `i `uc -> -> 128 `i `uc ]
"129
[; ;mfrc522.c: 129:     MFRC522_Wr(0x01, 0x00);
[e ( _MFRC522_Wr (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"131
[; ;mfrc522.c: 131:     for(i=0; i<sendLen; i++)
{
[e = _i -> -> 0 `i `ui ]
[e $U 166  ]
[e :U 163 ]
"132
[; ;mfrc522.c: 132:     {
{
"133
[; ;mfrc522.c: 133:         MFRC522_Wr(0x09, sendData[i]);
[e ( _MFRC522_Wr (2 , -> -> 9 `i `uc -> *U + _sendData * -> _i `ux -> -> # *U _sendData `ui `ux `uc ]
"134
[; ;mfrc522.c: 134:     }
}
[e ++ _i -> -> 1 `i `ui ]
[e :U 166 ]
[e $ < _i -> _sendLen `ui 163  ]
[e :U 164 ]
}
"135
[; ;mfrc522.c: 135:     MFRC522_Wr(0x01, command);
[e ( _MFRC522_Wr (2 , -> -> 1 `i `uc -> _command `uc ]
"136
[; ;mfrc522.c: 136:     if(command == 0x0C)
[e $ ! == -> _command `i -> 12 `i 167  ]
"137
[; ;mfrc522.c: 137:     {
{
"138
[; ;mfrc522.c: 138:         MFRC522_Set_Bit(0x0D, 0x80);
[e ( _MFRC522_Set_Bit (2 , -> -> 13 `i `uc -> -> 128 `i `uc ]
"139
[; ;mfrc522.c: 139:     }
}
[e :U 167 ]
"140
[; ;mfrc522.c: 140:     i = 0xFFFF;
[e = _i -> 65535 `ui ]
"141
[; ;mfrc522.c: 141:     do
[e :U 170 ]
"142
[; ;mfrc522.c: 142:     {
{
"143
[; ;mfrc522.c: 143:         n = MFRC522_Rd(0x04);
[e = _n -> ( _MFRC522_Rd (1 -> -> 4 `i `uc `uc ]
"144
[; ;mfrc522.c: 144:         i--;
[e -- _i -> -> 1 `i `ui ]
"145
[; ;mfrc522.c: 145:     }while(i && !(n & 0x01) && !(n & waitIRq));
}
[e $ && && != _i -> -> 0 `i `ui ! != & -> _n `i -> 1 `i -> 0 `i ! != & -> _n `i -> _waitIRq `i -> 0 `i 170  ]
[e :U 169 ]
"147
[; ;mfrc522.c: 147:     MFRC522_Clear_Bit(0x0D, 0x80);
[e ( _MFRC522_Clear_Bit (2 , -> -> 13 `i `uc -> -> 128 `i `uc ]
"148
[; ;mfrc522.c: 148:     if(i != 0)
[e $ ! != _i -> -> 0 `i `ui 171  ]
"149
[; ;mfrc522.c: 149:     {
{
"150
[; ;mfrc522.c: 150:         if(!(MFRC522_Rd(0x06) & 0x1B))
[e $ ! ! != & -> ( _MFRC522_Rd (1 -> -> 6 `i `uc `i -> 27 `i -> 0 `i 172  ]
"151
[; ;mfrc522.c: 151:         {
{
"152
[; ;mfrc522.c: 152:             _status = 0;
[e = __status -> -> 0 `i `uc ]
"153
[; ;mfrc522.c: 153:             if(n & irqEn & 0x01)
[e $ ! != & & -> _n `i -> _irqEn `i -> 1 `i -> 0 `i 173  ]
"154
[; ;mfrc522.c: 154:             {
{
"155
[; ;mfrc522.c: 155:                 _status = 1;
[e = __status -> -> 1 `i `uc ]
"156
[; ;mfrc522.c: 156:             }
}
[e :U 173 ]
"157
[; ;mfrc522.c: 157:             if(command == 0x0C)
[e $ ! == -> _command `i -> 12 `i 174  ]
"158
[; ;mfrc522.c: 158:             {
{
"159
[; ;mfrc522.c: 159:                 n = MFRC522_Rd(0x0A);
[e = _n -> ( _MFRC522_Rd (1 -> -> 10 `i `uc `uc ]
"160
[; ;mfrc522.c: 160:                 lastBits = MFRC522_Rd(0x0C) & 0x07;
[e = _lastBits -> & -> ( _MFRC522_Rd (1 -> -> 12 `i `uc `i -> 7 `i `uc ]
"161
[; ;mfrc522.c: 161:                 if(lastBits)
[e $ ! != -> _lastBits `i -> 0 `i 175  ]
"162
[; ;mfrc522.c: 162:                 {
{
"163
[; ;mfrc522.c: 163:                     *backLen = (n-1) * 8 + lastBits;
[e = *U _backLen -> + * - -> _n `i -> 1 `i -> 8 `i -> _lastBits `i `ui ]
"164
[; ;mfrc522.c: 164:                 }
}
[e $U 176  ]
"165
[; ;mfrc522.c: 165:                 else
[e :U 175 ]
"166
[; ;mfrc522.c: 166:                 {
{
"167
[; ;mfrc522.c: 167:                     *backLen = n * 8;
[e = *U _backLen -> * -> _n `i -> 8 `i `ui ]
"168
[; ;mfrc522.c: 168:                 }
}
[e :U 176 ]
"169
[; ;mfrc522.c: 169:                 if(n == 0)
[e $ ! == -> _n `i -> 0 `i 177  ]
"170
[; ;mfrc522.c: 170:                 {
{
"171
[; ;mfrc522.c: 171:                     n = 1;
[e = _n -> -> 1 `i `uc ]
"172
[; ;mfrc522.c: 172:                 }
}
[e :U 177 ]
"173
[; ;mfrc522.c: 173:                 if(n > 16)
[e $ ! > -> _n `i -> 16 `i 178  ]
"174
[; ;mfrc522.c: 174:                 {
{
"175
[; ;mfrc522.c: 175:                     n = 16;
[e = _n -> -> 16 `i `uc ]
"176
[; ;mfrc522.c: 176:                 }
}
[e :U 178 ]
"177
[; ;mfrc522.c: 177:                 for(i=0; i<n; i++)
{
[e = _i -> -> 0 `i `ui ]
[e $U 182  ]
[e :U 179 ]
"178
[; ;mfrc522.c: 178:                 {
{
"179
[; ;mfrc522.c: 179:                     backData[i] = MFRC522_Rd(0x09);
[e = *U + _backData * -> _i `ux -> -> # *U _backData `ui `ux -> ( _MFRC522_Rd (1 -> -> 9 `i `uc `uc ]
"180
[; ;mfrc522.c: 180:                 }
}
[e ++ _i -> -> 1 `i `ui ]
[e :U 182 ]
[e $ < _i -> _n `ui 179  ]
[e :U 180 ]
}
"181
[; ;mfrc522.c: 181:                 backData[i] = 0;
[e = *U + _backData * -> _i `ux -> -> # *U _backData `ui `ux -> -> 0 `i `uc ]
"182
[; ;mfrc522.c: 182:             }
}
[e :U 174 ]
"183
[; ;mfrc522.c: 183:         }
}
[e $U 183  ]
"184
[; ;mfrc522.c: 184:         else
[e :U 172 ]
"185
[; ;mfrc522.c: 185:         {
{
"186
[; ;mfrc522.c: 186:             _status = 2;
[e = __status -> -> 2 `i `uc ]
"187
[; ;mfrc522.c: 187:         }
}
[e :U 183 ]
"188
[; ;mfrc522.c: 188:     }
}
[e :U 171 ]
"189
[; ;mfrc522.c: 189:     return _status;
[e ) __status ]
[e $UE 157  ]
"190
[; ;mfrc522.c: 190: }
[e :UE 157 ]
}
"192
[; ;mfrc522.c: 192: char MFRC522_Request(char reqMode, char *TagType)
[v _MFRC522_Request `(uc ~T0 @X0 1 ef2`uc`*uc ]
"193
[; ;mfrc522.c: 193: {
{
[e :U _MFRC522_Request ]
"192
[; ;mfrc522.c: 192: char MFRC522_Request(char reqMode, char *TagType)
[v _reqMode `uc ~T0 @X0 1 r1 ]
[v _TagType `*uc ~T0 @X0 1 r2 ]
"193
[; ;mfrc522.c: 193: {
[f ]
"194
[; ;mfrc522.c: 194:     char _status;
[v __status `uc ~T0 @X0 1 a ]
"195
[; ;mfrc522.c: 195:     unsigned backBits;
[v _backBits `ui ~T0 @X0 1 a ]
"196
[; ;mfrc522.c: 196:     MFRC522_Wr(0x0D, 0x07);
[e ( _MFRC522_Wr (2 , -> -> 13 `i `uc -> -> 7 `i `uc ]
"197
[; ;mfrc522.c: 197:     TagType[0] = reqMode;
[e = *U + _TagType * -> -> 0 `i `x -> -> # *U _TagType `i `x _reqMode ]
"198
[; ;mfrc522.c: 198:     _status = MFRC522_ToCard(0x0C, TagType, 1, TagType, &backBits);
[e = __status ( _MFRC522_ToCard (4 , , , , -> -> 12 `i `uc _TagType -> -> 1 `i `uc _TagType &U _backBits ]
"199
[; ;mfrc522.c: 199:     if((_status != 0) || (backBits != 0x10))
[e $ ! || != -> __status `i -> 0 `i != _backBits -> -> 16 `i `ui 185  ]
"200
[; ;mfrc522.c: 200:     {
{
"201
[; ;mfrc522.c: 201:         _status = 2;
[e = __status -> -> 2 `i `uc ]
"202
[; ;mfrc522.c: 202:     }
}
[e :U 185 ]
"203
[; ;mfrc522.c: 203:     return _status;
[e ) __status ]
[e $UE 184  ]
"204
[; ;mfrc522.c: 204: }
[e :UE 184 ]
}
"206
[; ;mfrc522.c: 206: void MFRC522_CRC(char *dataIn, char length, char *dataOut)
[v _MFRC522_CRC `(v ~T0 @X0 1 ef3`*uc`uc`*uc ]
"207
[; ;mfrc522.c: 207: {
{
[e :U _MFRC522_CRC ]
"206
[; ;mfrc522.c: 206: void MFRC522_CRC(char *dataIn, char length, char *dataOut)
[v _dataIn `*uc ~T0 @X0 1 r1 ]
[v _length `uc ~T0 @X0 1 r2 ]
[v _dataOut `*uc ~T0 @X0 1 r3 ]
"207
[; ;mfrc522.c: 207: {
[f ]
"208
[; ;mfrc522.c: 208:     char i, n;
[v _i `uc ~T0 @X0 1 a ]
[v _n `uc ~T0 @X0 1 a ]
"209
[; ;mfrc522.c: 209:     MFRC522_Clear_Bit(0x05, 0x04);
[e ( _MFRC522_Clear_Bit (2 , -> -> 5 `i `uc -> -> 4 `i `uc ]
"210
[; ;mfrc522.c: 210:     MFRC522_Set_Bit(0x0A, 0x80);
[e ( _MFRC522_Set_Bit (2 , -> -> 10 `i `uc -> -> 128 `i `uc ]
"211
[; ;mfrc522.c: 211:     for(i=0; i<length; i++)
{
[e = _i -> -> 0 `i `uc ]
[e $U 190  ]
[e :U 187 ]
"212
[; ;mfrc522.c: 212:     {
{
"213
[; ;mfrc522.c: 213:         MFRC522_Wr(0x09, *dataIn++);
[e ( _MFRC522_Wr (2 , -> -> 9 `i `uc -> *U ++ _dataIn * -> -> 1 `i `x -> -> # *U _dataIn `i `x `uc ]
"214
[; ;mfrc522.c: 214:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e :U 190 ]
[e $ < -> _i `i -> _length `i 187  ]
[e :U 188 ]
}
"215
[; ;mfrc522.c: 215:     MFRC522_Wr(0x01, 0x03);
[e ( _MFRC522_Wr (2 , -> -> 1 `i `uc -> -> 3 `i `uc ]
"216
[; ;mfrc522.c: 216:     i = 0xFF;
[e = _i -> -> 255 `i `uc ]
"217
[; ;mfrc522.c: 217:     do
[e :U 193 ]
"218
[; ;mfrc522.c: 218:     {
{
"219
[; ;mfrc522.c: 219:         n = MFRC522_Rd( 0x05 );
[e = _n -> ( _MFRC522_Rd (1 -> -> 5 `i `uc `uc ]
"220
[; ;mfrc522.c: 220:         i--;
[e -- _i -> -> 1 `i `uc ]
"221
[; ;mfrc522.c: 221:     }
}
[e $ && != -> _i `i -> 0 `i ! != & -> _n `i -> 4 `i -> 0 `i 193  ]
[e :U 192 ]
"223
[; ;mfrc522.c: 223:     dataOut[0] = MFRC522_Rd(0x22);
[e = *U + _dataOut * -> -> 0 `i `x -> -> # *U _dataOut `i `x -> ( _MFRC522_Rd (1 -> -> 34 `i `uc `uc ]
"224
[; ;mfrc522.c: 224:     dataOut[1] = MFRC522_Rd(0x21);
[e = *U + _dataOut * -> -> 1 `i `x -> -> # *U _dataOut `i `x -> ( _MFRC522_Rd (1 -> -> 33 `i `uc `uc ]
"225
[; ;mfrc522.c: 225: }
[e :UE 186 ]
}
"227
[; ;mfrc522.c: 227: char MFRC522_SelectTag(char *serNum)
[v _MFRC522_SelectTag `(uc ~T0 @X0 1 ef1`*uc ]
"228
[; ;mfrc522.c: 228: {
{
[e :U _MFRC522_SelectTag ]
"227
[; ;mfrc522.c: 227: char MFRC522_SelectTag(char *serNum)
[v _serNum `*uc ~T0 @X0 1 r1 ]
"228
[; ;mfrc522.c: 228: {
[f ]
"229
[; ;mfrc522.c: 229:     char i;
[v _i `uc ~T0 @X0 1 a ]
"230
[; ;mfrc522.c: 230:     char _status;
[v __status `uc ~T0 @X0 1 a ]
"231
[; ;mfrc522.c: 231:     char size;
[v _size `uc ~T0 @X0 1 a ]
"232
[; ;mfrc522.c: 232:     unsigned recvBits;
[v _recvBits `ui ~T0 @X0 1 a ]
"233
[; ;mfrc522.c: 233:     char buffer[9];
[v _buffer `uc ~T0 @X0 -> 9 `i a ]
"234
[; ;mfrc522.c: 234:     buffer[0] = 0x93;
[e = *U + &U _buffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _buffer `ui `ux -> -> 147 `i `uc ]
"235
[; ;mfrc522.c: 235:     buffer[1] = 0x70;
[e = *U + &U _buffer * -> -> -> 1 `i `ui `ux -> -> # *U &U _buffer `ui `ux -> -> 112 `i `uc ]
"237
[; ;mfrc522.c: 237:     for(i=2; i<7; i++)
{
[e = _i -> -> 2 `i `uc ]
[e $ < -> _i `i -> 7 `i 195  ]
[e $U 196  ]
[e :U 195 ]
"238
[; ;mfrc522.c: 238:     {
{
"239
[; ;mfrc522.c: 239:         buffer[i] = *serNum++;
[e = *U + &U _buffer * -> _i `ux -> -> # *U &U _buffer `ui `ux *U ++ _serNum * -> -> 1 `i `x -> -> # *U _serNum `i `x ]
"240
[; ;mfrc522.c: 240:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 7 `i 195  ]
[e :U 196 ]
}
"241
[; ;mfrc522.c: 241:     MFRC522_CRC(buffer, 7, &buffer[7]);
[e ( _MFRC522_CRC (3 , , &U _buffer -> -> 7 `i `uc &U *U + &U _buffer * -> -> -> 7 `i `ui `ux -> -> # *U &U _buffer `ui `ux ]
"242
[; ;mfrc522.c: 242:     _status = MFRC522_ToCard(0x0C, buffer, 9, buffer, &recvBits);
[e = __status ( _MFRC522_ToCard (4 , , , , -> -> 12 `i `uc &U _buffer -> -> 9 `i `uc &U _buffer &U _recvBits ]
"243
[; ;mfrc522.c: 243:     if((_status == 0) && (recvBits == 0x18))
[e $ ! && == -> __status `i -> 0 `i == _recvBits -> -> 24 `i `ui 198  ]
"244
[; ;mfrc522.c: 244:     {
{
"245
[; ;mfrc522.c: 245:         size = buffer[0];
[e = _size *U + &U _buffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _buffer `ui `ux ]
"246
[; ;mfrc522.c: 246:     }
}
[e $U 199  ]
"247
[; ;mfrc522.c: 247:     else
[e :U 198 ]
"248
[; ;mfrc522.c: 248:     {
{
"249
[; ;mfrc522.c: 249:         size = 0;
[e = _size -> -> 0 `i `uc ]
"250
[; ;mfrc522.c: 250:     }
}
[e :U 199 ]
"251
[; ;mfrc522.c: 251:     return size;
[e ) _size ]
[e $UE 194  ]
"252
[; ;mfrc522.c: 252: }
[e :UE 194 ]
}
"254
[; ;mfrc522.c: 254: void MFRC522_Halt(void)
[v _MFRC522_Halt `(v ~T0 @X0 1 ef ]
"255
[; ;mfrc522.c: 255: {
{
[e :U _MFRC522_Halt ]
[f ]
"256
[; ;mfrc522.c: 256:     unsigned unLen;
[v _unLen `ui ~T0 @X0 1 a ]
"257
[; ;mfrc522.c: 257:     char buff[4];
[v _buff `uc ~T0 @X0 -> 4 `i a ]
"258
[; ;mfrc522.c: 258:     buff[0] = 0x50;
[e = *U + &U _buff * -> -> -> 0 `i `ui `ux -> -> # *U &U _buff `ui `ux -> -> 80 `i `uc ]
"259
[; ;mfrc522.c: 259:     buff[1] = 0;
[e = *U + &U _buff * -> -> -> 1 `i `ui `ux -> -> # *U &U _buff `ui `ux -> -> 0 `i `uc ]
"260
[; ;mfrc522.c: 260:     MFRC522_CRC(buff, 2, &buff[2]);
[e ( _MFRC522_CRC (3 , , &U _buff -> -> 2 `i `uc &U *U + &U _buff * -> -> -> 2 `i `ui `ux -> -> # *U &U _buff `ui `ux ]
"261
[; ;mfrc522.c: 261:     MFRC522_Clear_Bit(0x08, 0x80);
[e ( _MFRC522_Clear_Bit (2 , -> -> 8 `i `uc -> -> 128 `i `uc ]
"262
[; ;mfrc522.c: 262:     MFRC522_ToCard(0x0C, buff, 4, buff, &unLen);
[e ( _MFRC522_ToCard (4 , , , , -> -> 12 `i `uc &U _buff -> -> 4 `i `uc &U _buff &U _unLen ]
"263
[; ;mfrc522.c: 263:     MFRC522_Clear_Bit(0x08, 0x08);
[e ( _MFRC522_Clear_Bit (2 , -> -> 8 `i `uc -> -> 8 `i `uc ]
"264
[; ;mfrc522.c: 264: }
[e :UE 200 ]
}
"266
[; ;mfrc522.c: 266: char MFRC522_AntiColl(char *serNum)
[v _MFRC522_AntiColl `(uc ~T0 @X0 1 ef1`*uc ]
"267
[; ;mfrc522.c: 267: {
{
[e :U _MFRC522_AntiColl ]
"266
[; ;mfrc522.c: 266: char MFRC522_AntiColl(char *serNum)
[v _serNum `*uc ~T0 @X0 1 r1 ]
"267
[; ;mfrc522.c: 267: {
[f ]
"268
[; ;mfrc522.c: 268:     char _status;
[v __status `uc ~T0 @X0 1 a ]
"269
[; ;mfrc522.c: 269:     char i;
[v _i `uc ~T0 @X0 1 a ]
"270
[; ;mfrc522.c: 270:     char serNumCheck = 0;
[v _serNumCheck `uc ~T0 @X0 1 a ]
[e = _serNumCheck -> -> 0 `i `uc ]
"271
[; ;mfrc522.c: 271:     unsigned unLen;
[v _unLen `ui ~T0 @X0 1 a ]
"272
[; ;mfrc522.c: 272:     MFRC522_Wr(0x0D, 0x00);
[e ( _MFRC522_Wr (2 , -> -> 13 `i `uc -> -> 0 `i `uc ]
"273
[; ;mfrc522.c: 273:     serNum[0] = 0x93;
[e = *U + _serNum * -> -> 0 `i `x -> -> # *U _serNum `i `x -> -> 147 `i `uc ]
"274
[; ;mfrc522.c: 274:     serNum[1] = 0x20;
[e = *U + _serNum * -> -> 1 `i `x -> -> # *U _serNum `i `x -> -> 32 `i `uc ]
"275
[; ;mfrc522.c: 275:     MFRC522_Clear_Bit(0x08, 0x08);
[e ( _MFRC522_Clear_Bit (2 , -> -> 8 `i `uc -> -> 8 `i `uc ]
"276
[; ;mfrc522.c: 276:     _status = MFRC522_ToCard(0x0C, serNum, 2, serNum, &unLen);
[e = __status ( _MFRC522_ToCard (4 , , , , -> -> 12 `i `uc _serNum -> -> 2 `i `uc _serNum &U _unLen ]
"277
[; ;mfrc522.c: 277:     if(_status == 0)
[e $ ! == -> __status `i -> 0 `i 202  ]
"278
[; ;mfrc522.c: 278:     {
{
"279
[; ;mfrc522.c: 279:         for(i=0; i<4; i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 203  ]
[e $U 204  ]
[e :U 203 ]
"280
[; ;mfrc522.c: 280:         {
{
"281
[; ;mfrc522.c: 281:             serNumCheck ^= serNum[i];
[e =^ _serNumCheck -> *U + _serNum * -> _i `ux -> -> # *U _serNum `ui `ux `uc ]
"282
[; ;mfrc522.c: 282:         }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 203  ]
[e :U 204 ]
}
"283
[; ;mfrc522.c: 283:         if(serNumCheck != serNum[4])
[e $ ! != -> _serNumCheck `i -> *U + _serNum * -> -> 4 `i `x -> -> # *U _serNum `i `x `i 206  ]
"284
[; ;mfrc522.c: 284:         {
{
"285
[; ;mfrc522.c: 285:             _status = 2;
[e = __status -> -> 2 `i `uc ]
"286
[; ;mfrc522.c: 286:         }
}
[e :U 206 ]
"287
[; ;mfrc522.c: 287:     }
}
[e :U 202 ]
"288
[; ;mfrc522.c: 288:     return _status;
[e ) __status ]
[e $UE 201  ]
"289
[; ;mfrc522.c: 289: }
[e :UE 201 ]
}
"291
[; ;mfrc522.c: 291: char MFRC522_IsCard(char *TagType)
[v _MFRC522_IsCard `(uc ~T0 @X0 1 ef1`*uc ]
"292
[; ;mfrc522.c: 292: {
{
[e :U _MFRC522_IsCard ]
"291
[; ;mfrc522.c: 291: char MFRC522_IsCard(char *TagType)
[v _TagType `*uc ~T0 @X0 1 r1 ]
"292
[; ;mfrc522.c: 292: {
[f ]
"293
[; ;mfrc522.c: 293:     if(MFRC522_Request(0x26, TagType) == 0)
[e $ ! == -> ( _MFRC522_Request (2 , -> -> 38 `i `uc _TagType `i -> 0 `i 208  ]
"294
[; ;mfrc522.c: 294:         return 1;
[e ) -> -> 1 `i `uc ]
[e $UE 207  ]
[e $U 209  ]
"295
[; ;mfrc522.c: 295:     else
[e :U 208 ]
"296
[; ;mfrc522.c: 296:         return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 207  ]
[e :U 209 ]
"297
[; ;mfrc522.c: 297: }
[e :UE 207 ]
}
"299
[; ;mfrc522.c: 299: char MFRC522_ReadCardSerial(char *str)
[v _MFRC522_ReadCardSerial `(uc ~T0 @X0 1 ef1`*uc ]
"300
[; ;mfrc522.c: 300: {
{
[e :U _MFRC522_ReadCardSerial ]
"299
[; ;mfrc522.c: 299: char MFRC522_ReadCardSerial(char *str)
[v _str `*uc ~T0 @X0 1 r1 ]
"300
[; ;mfrc522.c: 300: {
[f ]
"301
[; ;mfrc522.c: 301:     char _status;
[v __status `uc ~T0 @X0 1 a ]
"302
[; ;mfrc522.c: 302:     _status = MFRC522_AntiColl(str);
[e = __status ( _MFRC522_AntiColl (1 _str ]
"303
[; ;mfrc522.c: 303:     str[4] = 0;
[e = *U + _str * -> -> 4 `i `x -> -> # *U _str `i `x -> -> 0 `i `uc ]
"304
[; ;mfrc522.c: 304:     if(_status == 0)
[e $ ! == -> __status `i -> 0 `i 211  ]
"305
[; ;mfrc522.c: 305:         return 1;
[e ) -> -> 1 `i `uc ]
[e $UE 210  ]
[e $U 212  ]
"306
[; ;mfrc522.c: 306:     else
[e :U 211 ]
"307
[; ;mfrc522.c: 307:         return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 210  ]
[e :U 212 ]
"308
[; ;mfrc522.c: 308: }
[e :UE 210 ]
}
"310
[; ;mfrc522.c: 310: char MFRC522_Compare_UID(char *l, char *u)
[v _MFRC522_Compare_UID `(uc ~T0 @X0 1 ef2`*uc`*uc ]
"311
[; ;mfrc522.c: 311: {
{
[e :U _MFRC522_Compare_UID ]
"310
[; ;mfrc522.c: 310: char MFRC522_Compare_UID(char *l, char *u)
[v _l `*uc ~T0 @X0 1 r1 ]
[v _u `*uc ~T0 @X0 1 r2 ]
"311
[; ;mfrc522.c: 311: {
[f ]
"312
[; ;mfrc522.c: 312:     for(char i=0; i<4; i++)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 214  ]
[e $U 215  ]
[e :U 214 ]
"313
[; ;mfrc522.c: 313:     {
{
"314
[; ;mfrc522.c: 314:         if(l[i] != u[i])
[e $ ! != -> *U + _l * -> _i `ux -> -> # *U _l `ui `ux `i -> *U + _u * -> _i `ux -> -> # *U _u `ui `ux `i 217  ]
"315
[; ;mfrc522.c: 315:         {
{
"316
[; ;mfrc522.c: 316:             return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 213  ]
"317
[; ;mfrc522.c: 317:         }
}
[e :U 217 ]
"318
[; ;mfrc522.c: 318:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 214  ]
[e :U 215 ]
}
"319
[; ;mfrc522.c: 319:     return 1;
[e ) -> -> 1 `i `uc ]
[e $UE 213  ]
"320
[; ;mfrc522.c: 320: }
[e :UE 213 ]
}
