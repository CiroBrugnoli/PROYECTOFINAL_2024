

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Nov 15 10:45:33 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.32
    42                           ; Generated 02/02/2021 GMT
    43                           ; 
    44                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F887 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  0087                     	;# 
   115  0088                     	;# 
   116  0089                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  008F                     	;# 
   121  0090                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0093                     	;# 
   127  0094                     	;# 
   128  0095                     	;# 
   129  0096                     	;# 
   130  0097                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009A                     	;# 
   134  009B                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  009F                     	;# 
   139  0105                     	;# 
   140  0107                     	;# 
   141  0108                     	;# 
   142  0109                     	;# 
   143  010C                     	;# 
   144  010C                     	;# 
   145  010D                     	;# 
   146  010E                     	;# 
   147  010F                     	;# 
   148  0185                     	;# 
   149  0187                     	;# 
   150  0188                     	;# 
   151  0189                     	;# 
   152  018C                     	;# 
   153  018D                     	;# 
   154  0000                     	;# 
   155  0001                     	;# 
   156  0002                     	;# 
   157  0003                     	;# 
   158  0004                     	;# 
   159  0005                     	;# 
   160  0006                     	;# 
   161  0007                     	;# 
   162  0008                     	;# 
   163  0009                     	;# 
   164  000A                     	;# 
   165  000B                     	;# 
   166  000C                     	;# 
   167  000D                     	;# 
   168  000E                     	;# 
   169  000E                     	;# 
   170  000F                     	;# 
   171  0010                     	;# 
   172  0011                     	;# 
   173  0012                     	;# 
   174  0013                     	;# 
   175  0014                     	;# 
   176  0015                     	;# 
   177  0015                     	;# 
   178  0016                     	;# 
   179  0017                     	;# 
   180  0018                     	;# 
   181  0019                     	;# 
   182  001A                     	;# 
   183  001B                     	;# 
   184  001B                     	;# 
   185  001C                     	;# 
   186  001D                     	;# 
   187  001E                     	;# 
   188  001F                     	;# 
   189  0081                     	;# 
   190  0085                     	;# 
   191  0086                     	;# 
   192  0087                     	;# 
   193  0088                     	;# 
   194  0089                     	;# 
   195  008C                     	;# 
   196  008D                     	;# 
   197  008E                     	;# 
   198  008F                     	;# 
   199  0090                     	;# 
   200  0091                     	;# 
   201  0092                     	;# 
   202  0093                     	;# 
   203  0093                     	;# 
   204  0093                     	;# 
   205  0094                     	;# 
   206  0095                     	;# 
   207  0096                     	;# 
   208  0097                     	;# 
   209  0098                     	;# 
   210  0099                     	;# 
   211  009A                     	;# 
   212  009B                     	;# 
   213  009C                     	;# 
   214  009D                     	;# 
   215  009E                     	;# 
   216  009F                     	;# 
   217  0105                     	;# 
   218  0107                     	;# 
   219  0108                     	;# 
   220  0109                     	;# 
   221  010C                     	;# 
   222  010C                     	;# 
   223  010D                     	;# 
   224  010E                     	;# 
   225  010F                     	;# 
   226  0185                     	;# 
   227  0187                     	;# 
   228  0188                     	;# 
   229  0189                     	;# 
   230  018C                     	;# 
   231  018D                     	;# 
   232  0000                     	;# 
   233  0001                     	;# 
   234  0002                     	;# 
   235  0003                     	;# 
   236  0004                     	;# 
   237  0005                     	;# 
   238  0006                     	;# 
   239  0007                     	;# 
   240  0008                     	;# 
   241  0009                     	;# 
   242  000A                     	;# 
   243  000B                     	;# 
   244  000C                     	;# 
   245  000D                     	;# 
   246  000E                     	;# 
   247  000E                     	;# 
   248  000F                     	;# 
   249  0010                     	;# 
   250  0011                     	;# 
   251  0012                     	;# 
   252  0013                     	;# 
   253  0014                     	;# 
   254  0015                     	;# 
   255  0015                     	;# 
   256  0016                     	;# 
   257  0017                     	;# 
   258  0018                     	;# 
   259  0019                     	;# 
   260  001A                     	;# 
   261  001B                     	;# 
   262  001B                     	;# 
   263  001C                     	;# 
   264  001D                     	;# 
   265  001E                     	;# 
   266  001F                     	;# 
   267  0081                     	;# 
   268  0085                     	;# 
   269  0086                     	;# 
   270  0087                     	;# 
   271  0088                     	;# 
   272  0089                     	;# 
   273  008C                     	;# 
   274  008D                     	;# 
   275  008E                     	;# 
   276  008F                     	;# 
   277  0090                     	;# 
   278  0091                     	;# 
   279  0092                     	;# 
   280  0093                     	;# 
   281  0093                     	;# 
   282  0093                     	;# 
   283  0094                     	;# 
   284  0095                     	;# 
   285  0096                     	;# 
   286  0097                     	;# 
   287  0098                     	;# 
   288  0099                     	;# 
   289  009A                     	;# 
   290  009B                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  0105                     	;# 
   296  0107                     	;# 
   297  0108                     	;# 
   298  0109                     	;# 
   299  010C                     	;# 
   300  010C                     	;# 
   301  010D                     	;# 
   302  010E                     	;# 
   303  010F                     	;# 
   304  0185                     	;# 
   305  0187                     	;# 
   306  0188                     	;# 
   307  0189                     	;# 
   308  018C                     	;# 
   309  018D                     	;# 
   310  0000                     	;# 
   311  0001                     	;# 
   312  0002                     	;# 
   313  0003                     	;# 
   314  0004                     	;# 
   315  0005                     	;# 
   316  0006                     	;# 
   317  0007                     	;# 
   318  0008                     	;# 
   319  0009                     	;# 
   320  000A                     	;# 
   321  000B                     	;# 
   322  000C                     	;# 
   323  000D                     	;# 
   324  000E                     	;# 
   325  000E                     	;# 
   326  000F                     	;# 
   327  0010                     	;# 
   328  0011                     	;# 
   329  0012                     	;# 
   330  0013                     	;# 
   331  0014                     	;# 
   332  0015                     	;# 
   333  0015                     	;# 
   334  0016                     	;# 
   335  0017                     	;# 
   336  0018                     	;# 
   337  0019                     	;# 
   338  001A                     	;# 
   339  001B                     	;# 
   340  001B                     	;# 
   341  001C                     	;# 
   342  001D                     	;# 
   343  001E                     	;# 
   344  001F                     	;# 
   345  0081                     	;# 
   346  0085                     	;# 
   347  0086                     	;# 
   348  0087                     	;# 
   349  0088                     	;# 
   350  0089                     	;# 
   351  008C                     	;# 
   352  008D                     	;# 
   353  008E                     	;# 
   354  008F                     	;# 
   355  0090                     	;# 
   356  0091                     	;# 
   357  0092                     	;# 
   358  0093                     	;# 
   359  0093                     	;# 
   360  0093                     	;# 
   361  0094                     	;# 
   362  0095                     	;# 
   363  0096                     	;# 
   364  0097                     	;# 
   365  0098                     	;# 
   366  0099                     	;# 
   367  009A                     	;# 
   368  009B                     	;# 
   369  009C                     	;# 
   370  009D                     	;# 
   371  009E                     	;# 
   372  009F                     	;# 
   373  0105                     	;# 
   374  0107                     	;# 
   375  0108                     	;# 
   376  0109                     	;# 
   377  010C                     	;# 
   378  010C                     	;# 
   379  010D                     	;# 
   380  010E                     	;# 
   381  010F                     	;# 
   382  0185                     	;# 
   383  0187                     	;# 
   384  0188                     	;# 
   385  0189                     	;# 
   386  018C                     	;# 
   387  018D                     	;# 
   388  0000                     	;# 
   389  0001                     	;# 
   390  0002                     	;# 
   391  0003                     	;# 
   392  0004                     	;# 
   393  0005                     	;# 
   394  0006                     	;# 
   395  0007                     	;# 
   396  0008                     	;# 
   397  0009                     	;# 
   398  000A                     	;# 
   399  000B                     	;# 
   400  000C                     	;# 
   401  000D                     	;# 
   402  000E                     	;# 
   403  000E                     	;# 
   404  000F                     	;# 
   405  0010                     	;# 
   406  0011                     	;# 
   407  0012                     	;# 
   408  0013                     	;# 
   409  0014                     	;# 
   410  0015                     	;# 
   411  0015                     	;# 
   412  0016                     	;# 
   413  0017                     	;# 
   414  0018                     	;# 
   415  0019                     	;# 
   416  001A                     	;# 
   417  001B                     	;# 
   418  001B                     	;# 
   419  001C                     	;# 
   420  001D                     	;# 
   421  001E                     	;# 
   422  001F                     	;# 
   423  0081                     	;# 
   424  0085                     	;# 
   425  0086                     	;# 
   426  0087                     	;# 
   427  0088                     	;# 
   428  0089                     	;# 
   429  008C                     	;# 
   430  008D                     	;# 
   431  008E                     	;# 
   432  008F                     	;# 
   433  0090                     	;# 
   434  0091                     	;# 
   435  0092                     	;# 
   436  0093                     	;# 
   437  0093                     	;# 
   438  0093                     	;# 
   439  0094                     	;# 
   440  0095                     	;# 
   441  0096                     	;# 
   442  0097                     	;# 
   443  0098                     	;# 
   444  0099                     	;# 
   445  009A                     	;# 
   446  009B                     	;# 
   447  009C                     	;# 
   448  009D                     	;# 
   449  009E                     	;# 
   450  009F                     	;# 
   451  0105                     	;# 
   452  0107                     	;# 
   453  0108                     	;# 
   454  0109                     	;# 
   455  010C                     	;# 
   456  010C                     	;# 
   457  010D                     	;# 
   458  010E                     	;# 
   459  010F                     	;# 
   460  0185                     	;# 
   461  0187                     	;# 
   462  0188                     	;# 
   463  0189                     	;# 
   464  018C                     	;# 
   465  018D                     	;# 
   466  0000                     	;# 
   467  0001                     	;# 
   468  0002                     	;# 
   469  0003                     	;# 
   470  0004                     	;# 
   471  0005                     	;# 
   472  0006                     	;# 
   473  0007                     	;# 
   474  0008                     	;# 
   475  0009                     	;# 
   476  000A                     	;# 
   477  000B                     	;# 
   478  000C                     	;# 
   479  000D                     	;# 
   480  000E                     	;# 
   481  000E                     	;# 
   482  000F                     	;# 
   483  0010                     	;# 
   484  0011                     	;# 
   485  0012                     	;# 
   486  0013                     	;# 
   487  0014                     	;# 
   488  0015                     	;# 
   489  0015                     	;# 
   490  0016                     	;# 
   491  0017                     	;# 
   492  0018                     	;# 
   493  0019                     	;# 
   494  001A                     	;# 
   495  001B                     	;# 
   496  001B                     	;# 
   497  001C                     	;# 
   498  001D                     	;# 
   499  001E                     	;# 
   500  001F                     	;# 
   501  0081                     	;# 
   502  0085                     	;# 
   503  0086                     	;# 
   504  0087                     	;# 
   505  0088                     	;# 
   506  0089                     	;# 
   507  008C                     	;# 
   508  008D                     	;# 
   509  008E                     	;# 
   510  008F                     	;# 
   511  0090                     	;# 
   512  0091                     	;# 
   513  0092                     	;# 
   514  0093                     	;# 
   515  0093                     	;# 
   516  0093                     	;# 
   517  0094                     	;# 
   518  0095                     	;# 
   519  0096                     	;# 
   520  0097                     	;# 
   521  0098                     	;# 
   522  0099                     	;# 
   523  009A                     	;# 
   524  009B                     	;# 
   525  009C                     	;# 
   526  009D                     	;# 
   527  009E                     	;# 
   528  009F                     	;# 
   529  0105                     	;# 
   530  0107                     	;# 
   531  0108                     	;# 
   532  0109                     	;# 
   533  010C                     	;# 
   534  010C                     	;# 
   535  010D                     	;# 
   536  010E                     	;# 
   537  010F                     	;# 
   538  0185                     	;# 
   539  0187                     	;# 
   540  0188                     	;# 
   541  0189                     	;# 
   542  018C                     	;# 
   543  018D                     	;# 
   544  0000                     	;# 
   545  0001                     	;# 
   546  0002                     	;# 
   547  0003                     	;# 
   548  0004                     	;# 
   549  0005                     	;# 
   550  0006                     	;# 
   551  0007                     	;# 
   552  0008                     	;# 
   553  0009                     	;# 
   554  000A                     	;# 
   555  000B                     	;# 
   556  000C                     	;# 
   557  000D                     	;# 
   558  000E                     	;# 
   559  000E                     	;# 
   560  000F                     	;# 
   561  0010                     	;# 
   562  0011                     	;# 
   563  0012                     	;# 
   564  0013                     	;# 
   565  0014                     	;# 
   566  0015                     	;# 
   567  0015                     	;# 
   568  0016                     	;# 
   569  0017                     	;# 
   570  0018                     	;# 
   571  0019                     	;# 
   572  001A                     	;# 
   573  001B                     	;# 
   574  001B                     	;# 
   575  001C                     	;# 
   576  001D                     	;# 
   577  001E                     	;# 
   578  001F                     	;# 
   579  0081                     	;# 
   580  0085                     	;# 
   581  0086                     	;# 
   582  0087                     	;# 
   583  0088                     	;# 
   584  0089                     	;# 
   585  008C                     	;# 
   586  008D                     	;# 
   587  008E                     	;# 
   588  008F                     	;# 
   589  0090                     	;# 
   590  0091                     	;# 
   591  0092                     	;# 
   592  0093                     	;# 
   593  0093                     	;# 
   594  0093                     	;# 
   595  0094                     	;# 
   596  0095                     	;# 
   597  0096                     	;# 
   598  0097                     	;# 
   599  0098                     	;# 
   600  0099                     	;# 
   601  009A                     	;# 
   602  009B                     	;# 
   603  009C                     	;# 
   604  009D                     	;# 
   605  009E                     	;# 
   606  009F                     	;# 
   607  0105                     	;# 
   608  0107                     	;# 
   609  0108                     	;# 
   610  0109                     	;# 
   611  010C                     	;# 
   612  010C                     	;# 
   613  010D                     	;# 
   614  010E                     	;# 
   615  010F                     	;# 
   616  0185                     	;# 
   617  0187                     	;# 
   618  0188                     	;# 
   619  0189                     	;# 
   620  018C                     	;# 
   621  018D                     	;# 
   622  0000                     	;# 
   623  0001                     	;# 
   624  0002                     	;# 
   625  0003                     	;# 
   626  0004                     	;# 
   627  0005                     	;# 
   628  0006                     	;# 
   629  0007                     	;# 
   630  0008                     	;# 
   631  0009                     	;# 
   632  000A                     	;# 
   633  000B                     	;# 
   634  000C                     	;# 
   635  000D                     	;# 
   636  000E                     	;# 
   637  000E                     	;# 
   638  000F                     	;# 
   639  0010                     	;# 
   640  0011                     	;# 
   641  0012                     	;# 
   642  0013                     	;# 
   643  0014                     	;# 
   644  0015                     	;# 
   645  0015                     	;# 
   646  0016                     	;# 
   647  0017                     	;# 
   648  0018                     	;# 
   649  0019                     	;# 
   650  001A                     	;# 
   651  001B                     	;# 
   652  001B                     	;# 
   653  001C                     	;# 
   654  001D                     	;# 
   655  001E                     	;# 
   656  001F                     	;# 
   657  0081                     	;# 
   658  0085                     	;# 
   659  0086                     	;# 
   660  0087                     	;# 
   661  0088                     	;# 
   662  0089                     	;# 
   663  008C                     	;# 
   664  008D                     	;# 
   665  008E                     	;# 
   666  008F                     	;# 
   667  0090                     	;# 
   668  0091                     	;# 
   669  0092                     	;# 
   670  0093                     	;# 
   671  0093                     	;# 
   672  0093                     	;# 
   673  0094                     	;# 
   674  0095                     	;# 
   675  0096                     	;# 
   676  0097                     	;# 
   677  0098                     	;# 
   678  0099                     	;# 
   679  009A                     	;# 
   680  009B                     	;# 
   681  009C                     	;# 
   682  009D                     	;# 
   683  009E                     	;# 
   684  009F                     	;# 
   685  0105                     	;# 
   686  0107                     	;# 
   687  0108                     	;# 
   688  0109                     	;# 
   689  010C                     	;# 
   690  010C                     	;# 
   691  010D                     	;# 
   692  010E                     	;# 
   693  010F                     	;# 
   694  0185                     	;# 
   695  0187                     	;# 
   696  0188                     	;# 
   697  0189                     	;# 
   698  018C                     	;# 
   699  018D                     	;# 
   700  0000                     	;# 
   701  0001                     	;# 
   702  0002                     	;# 
   703  0003                     	;# 
   704  0004                     	;# 
   705  0005                     	;# 
   706  0006                     	;# 
   707  0007                     	;# 
   708  0008                     	;# 
   709  0009                     	;# 
   710  000A                     	;# 
   711  000B                     	;# 
   712  000C                     	;# 
   713  000D                     	;# 
   714  000E                     	;# 
   715  000E                     	;# 
   716  000F                     	;# 
   717  0010                     	;# 
   718  0011                     	;# 
   719  0012                     	;# 
   720  0013                     	;# 
   721  0014                     	;# 
   722  0015                     	;# 
   723  0015                     	;# 
   724  0016                     	;# 
   725  0017                     	;# 
   726  0018                     	;# 
   727  0019                     	;# 
   728  001A                     	;# 
   729  001B                     	;# 
   730  001B                     	;# 
   731  001C                     	;# 
   732  001D                     	;# 
   733  001E                     	;# 
   734  001F                     	;# 
   735  0081                     	;# 
   736  0085                     	;# 
   737  0086                     	;# 
   738  0087                     	;# 
   739  0088                     	;# 
   740  0089                     	;# 
   741  008C                     	;# 
   742  008D                     	;# 
   743  008E                     	;# 
   744  008F                     	;# 
   745  0090                     	;# 
   746  0091                     	;# 
   747  0092                     	;# 
   748  0093                     	;# 
   749  0093                     	;# 
   750  0093                     	;# 
   751  0094                     	;# 
   752  0095                     	;# 
   753  0096                     	;# 
   754  0097                     	;# 
   755  0098                     	;# 
   756  0099                     	;# 
   757  009A                     	;# 
   758  009B                     	;# 
   759  009C                     	;# 
   760  009D                     	;# 
   761  009E                     	;# 
   762  009F                     	;# 
   763  0105                     	;# 
   764  0107                     	;# 
   765  0108                     	;# 
   766  0109                     	;# 
   767  010C                     	;# 
   768  010C                     	;# 
   769  010D                     	;# 
   770  010E                     	;# 
   771  010F                     	;# 
   772  0185                     	;# 
   773  0187                     	;# 
   774  0188                     	;# 
   775  0189                     	;# 
   776  018C                     	;# 
   777  018D                     	;# 
   778  0000                     	;# 
   779  0001                     	;# 
   780  0002                     	;# 
   781  0003                     	;# 
   782  0004                     	;# 
   783  0005                     	;# 
   784  0006                     	;# 
   785  0007                     	;# 
   786  0008                     	;# 
   787  0009                     	;# 
   788  000A                     	;# 
   789  000B                     	;# 
   790  000C                     	;# 
   791  000D                     	;# 
   792  000E                     	;# 
   793  000E                     	;# 
   794  000F                     	;# 
   795  0010                     	;# 
   796  0011                     	;# 
   797  0012                     	;# 
   798  0013                     	;# 
   799  0014                     	;# 
   800  0015                     	;# 
   801  0015                     	;# 
   802  0016                     	;# 
   803  0017                     	;# 
   804  0018                     	;# 
   805  0019                     	;# 
   806  001A                     	;# 
   807  001B                     	;# 
   808  001B                     	;# 
   809  001C                     	;# 
   810  001D                     	;# 
   811  001E                     	;# 
   812  001F                     	;# 
   813  0081                     	;# 
   814  0085                     	;# 
   815  0086                     	;# 
   816  0087                     	;# 
   817  0088                     	;# 
   818  0089                     	;# 
   819  008C                     	;# 
   820  008D                     	;# 
   821  008E                     	;# 
   822  008F                     	;# 
   823  0090                     	;# 
   824  0091                     	;# 
   825  0092                     	;# 
   826  0093                     	;# 
   827  0093                     	;# 
   828  0093                     	;# 
   829  0094                     	;# 
   830  0095                     	;# 
   831  0096                     	;# 
   832  0097                     	;# 
   833  0098                     	;# 
   834  0099                     	;# 
   835  009A                     	;# 
   836  009B                     	;# 
   837  009C                     	;# 
   838  009D                     	;# 
   839  009E                     	;# 
   840  009F                     	;# 
   841  0105                     	;# 
   842  0107                     	;# 
   843  0108                     	;# 
   844  0109                     	;# 
   845  010C                     	;# 
   846  010C                     	;# 
   847  010D                     	;# 
   848  010E                     	;# 
   849  010F                     	;# 
   850  0185                     	;# 
   851  0187                     	;# 
   852  0188                     	;# 
   853  0189                     	;# 
   854  018C                     	;# 
   855  018D                     	;# 
   856  0000                     	;# 
   857  0001                     	;# 
   858  0002                     	;# 
   859  0003                     	;# 
   860  0004                     	;# 
   861  0005                     	;# 
   862  0006                     	;# 
   863  0007                     	;# 
   864  0008                     	;# 
   865  0009                     	;# 
   866  000A                     	;# 
   867  000B                     	;# 
   868  000C                     	;# 
   869  000D                     	;# 
   870  000E                     	;# 
   871  000E                     	;# 
   872  000F                     	;# 
   873  0010                     	;# 
   874  0011                     	;# 
   875  0012                     	;# 
   876  0013                     	;# 
   877  0014                     	;# 
   878  0015                     	;# 
   879  0015                     	;# 
   880  0016                     	;# 
   881  0017                     	;# 
   882  0018                     	;# 
   883  0019                     	;# 
   884  001A                     	;# 
   885  001B                     	;# 
   886  001B                     	;# 
   887  001C                     	;# 
   888  001D                     	;# 
   889  001E                     	;# 
   890  001F                     	;# 
   891  0081                     	;# 
   892  0085                     	;# 
   893  0086                     	;# 
   894  0087                     	;# 
   895  0088                     	;# 
   896  0089                     	;# 
   897  008C                     	;# 
   898  008D                     	;# 
   899  008E                     	;# 
   900  008F                     	;# 
   901  0090                     	;# 
   902  0091                     	;# 
   903  0092                     	;# 
   904  0093                     	;# 
   905  0093                     	;# 
   906  0093                     	;# 
   907  0094                     	;# 
   908  0095                     	;# 
   909  0096                     	;# 
   910  0097                     	;# 
   911  0098                     	;# 
   912  0099                     	;# 
   913  009A                     	;# 
   914  009B                     	;# 
   915  009C                     	;# 
   916  009D                     	;# 
   917  009E                     	;# 
   918  009F                     	;# 
   919  0105                     	;# 
   920  0107                     	;# 
   921  0108                     	;# 
   922  0109                     	;# 
   923  010C                     	;# 
   924  010C                     	;# 
   925  010D                     	;# 
   926  010E                     	;# 
   927  010F                     	;# 
   928  0185                     	;# 
   929  0187                     	;# 
   930  0188                     	;# 
   931  0189                     	;# 
   932  018C                     	;# 
   933  018D                     	;# 
   934                           
   935 ;; Function _putch is unused but had its address taken
   936  0000                     
   937                           	psect	idataBANK0
   938  06C0                     __pidataBANK0:
   939                           
   940                           ;initializer for _cont_balas
   941  06C0  341E               	retlw	30
   942                           
   943                           ;initializer for _DISPAROS
   944  06C1  341E               	retlw	30
   945                           
   946                           	psect	strings
   947  0550                     __pstrings:
   948  0550                     stringtab:
   949  0550                     __stringtab:
   950  0550                     stringcode:	
   951                           ;	String table - string pointers are 1 byte each
   952                           
   953  0550                     stringdir:
   954  0550  3005               	movlw	high stringdir
   955  0551  008A               	movwf	10
   956  0552  0804               	movf	4,w
   957  0553  0A84               	incf	4,f
   958  0554  0782               	addwf	2,f
   959  0555                     __stringbase:
   960  0555  3400               	retlw	0
   961  0556                     __end_of__stringtab:
   962  0556                     displayWrite@tabla7seg:
   963  0556  343F               	retlw	63
   964  0557  3406               	retlw	6
   965  0558  345B               	retlw	91
   966  0559  344F               	retlw	79
   967  055A  3466               	retlw	102
   968  055B  346D               	retlw	109
   969  055C  347D               	retlw	125
   970  055D  3407               	retlw	7
   971  055E  347F               	retlw	127
   972  055F  3467               	retlw	103
   973  0560                     __end_ofdisplayWrite@tabla7seg:
   974  0560                     _hexpowers:
   975  0560  3401               	retlw	1
   976  0561  3400               	retlw	0
   977  0562  3410               	retlw	16
   978  0563  3400               	retlw	0
   979  0564  3400               	retlw	0
   980  0565  3401               	retlw	1
   981  0566  3400               	retlw	0
   982  0567  3410               	retlw	16
   983  0568                     __end_of_hexpowers:
   984  0568                     _usuario_2:
   985  0568  3424               	retlw	36
   986  0569  341D               	retlw	29
   987  056A  344C               	retlw	76
   988  056B  34FF               	retlw	255
   989  056C                     __end_of_usuario_2:
   990  056C                     _usuario_1:
   991  056C  34F6               	retlw	246
   992  056D  341E               	retlw	30
   993  056E  3486               	retlw	134
   994  056F  34BB               	retlw	187
   995  0570                     __end_of_usuario_1:
   996  0015                     _CCPR1	set	21
   997  0008                     _PORTDbits	set	8
   998  0007                     _PORTCbits	set	7
   999  001A                     _RCREG	set	26
  1000  0019                     _TXREG	set	25
  1001  0008                     _PORTD	set	8
  1002  0005                     _PORTAbits	set	5
  1003  0006                     _PORTBbits	set	6
  1004  0009                     _PORTEbits	set	9
  1005  0001                     _TMR0	set	1
  1006  0017                     _CCP1CON	set	23
  1007  0065                     _RCIF	set	101
  1008  0064                     _TXIF	set	100
  1009  00C4                     _CREN	set	196
  1010  00C7                     _SPEN	set	199
  1011  005D                     _TMR0IE	set	93
  1012  005A                     _TMR0IF	set	90
  1013  005A                     _T0IF	set	90
  1014  005F                     _GIE	set	95
  1015  005E                     _PEIE	set	94
  1016  0080                     _TMR1ON	set	128
  1017  0084                     _T1CKPS0	set	132
  1018  0085                     _T1CKPS1	set	133
  1019  0081                     _TMR1CS	set	129
  1020  0088                     _TRISDbits	set	136
  1021  0099                     _SPBRG	set	153
  1022  0088                     _TRISD	set	136
  1023  0081                     _OPTION_REGbits	set	129
  1024  0087                     _TRISCbits	set	135
  1025  0086                     _TRISBbits	set	134
  1026  0085                     _TRISAbits	set	133
  1027  0089                     _TRISEbits	set	137
  1028  04C5                     _TXEN	set	1221
  1029  043E                     _TRISC6	set	1086
  1030  043F                     _TRISC7	set	1087
  1031  04C4                     _SYNC	set	1220
  1032  04C2                     _BRGH	set	1218
  1033  0462                     _CCP1IE	set	1122
  1034  040A                     _PS2	set	1034
  1035  0409                     _PS1	set	1033
  1036  0408                     _PS0	set	1032
  1037  040B                     _PSA	set	1035
  1038  040D                     _T0CS	set	1037
  1039  0189                     _ANSELH	set	393
  1040  0188                     _ANSEL	set	392
  1041  0570                     STR_3:
  1042  0570  3430               	retlw	48	;'0'
  1043  0571  3431               	retlw	49	;'1'
  1044  0572  3432               	retlw	50	;'2'
  1045  0573  3433               	retlw	51	;'3'
  1046  0574  3434               	retlw	52	;'4'
  1047  0575  3435               	retlw	53	;'5'
  1048  0576  3436               	retlw	54	;'6'
  1049  0577  3437               	retlw	55	;'7'
  1050  0578  3438               	retlw	56	;'8'
  1051  0579  3439               	retlw	57	;'9'
  1052  057A  3441               	retlw	65	;'A'
  1053  057B  3442               	retlw	66	;'B'
  1054  057C  3443               	retlw	67	;'C'
  1055  057D  3444               	retlw	68	;'D'
  1056  057E  3445               	retlw	69	;'E'
  1057  057F  3446               	retlw	70	;'F'
  1058  0580  3400               	retlw	0
  1059  0581                     STR_1:
  1060  0581  3425               	retlw	37	;'%'
  1061  0582  3432               	retlw	50	;'2'
  1062  0583  3478               	retlw	120	;'x'
  1063  0584  3400               	retlw	0
  1064  0585                     STR_2:
  1065  0585  3425               	retlw	37	;'%'
  1066  0586  3458               	retlw	88	;'X'
  1067  0587  3400               	retlw	0
  1068                           
  1069                           	psect	cinit
  1070  000F                     start_initialization:	
  1071                           ; #config settings
  1072                           
  1073  000F                     __initialization:
  1074                           
  1075                           ; Initialize objects allocated to BANK0
  1076  000F  120A  118A  26C0  120A  118A  	fcall	__pidataBANK0	;fetch initializer
  1077  0014  00ED               	movwf	__pdataBANK0& (0+127)
  1078  0015  120A  118A  26C1  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
  1079  001A  00EE               	movwf	(__pdataBANK0+1)& (0+127)
  1080                           
  1081                           ; Clear objects allocated to BANK1
  1082  001B  1383               	bcf	3,7	;select IRP bank0
  1083  001C  30A0               	movlw	low __pbssBANK1
  1084  001D  0084               	movwf	4
  1085  001E  30A8               	movlw	low (__pbssBANK1+8)
  1086  001F  120A  118A  26B1  120A  118A  	fcall	clear_ram0
  1087                           
  1088                           ; Clear objects allocated to BANK0
  1089  0024  304D               	movlw	low __pbssBANK0
  1090  0025  0084               	movwf	4
  1091  0026  306D               	movlw	low (__pbssBANK0+32)
  1092  0027  120A  118A  26B1  120A  118A  	fcall	clear_ram0
  1093                           
  1094                           ; Clear objects allocated to COMMON
  1095  002C  01F8               	clrf	__pbssCOMMON& (0+127)
  1096  002D  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1097  002E  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1098  002F                     end_of_initialization:	
  1099                           ;End of C runtime variable initialization code
  1100                           
  1101  002F                     __end_of__initialization:
  1102  002F  0183               	clrf	3
  1103  0030  120A  118A  2DE4   	ljmp	_main	;jump to C main() function
  1104                           
  1105                           	psect	bssCOMMON
  1106  0078                     __pbssCOMMON:
  1107  0078                     _estadoActualRONDA:
  1108  0078                     	ds	1
  1109  0079                     _estadoActualGAT:
  1110  0079                     	ds	1
  1111  007A                     _tInicioRonda:
  1112  007A                     	ds	1
  1113                           
  1114                           	psect	bssBANK0
  1115  004D                     __pbssBANK0:
  1116  004D                     _tickCounter:
  1117  004D                     	ds	2
  1118  004F                     _tRFID:
  1119  004F                     	ds	2
  1120  0051                     _tInicioBALAS:
  1121  0051                     	ds	2
  1122  0053                     _tInicioGAT:
  1123  0053                     	ds	2
  1124  0055                     _comando:
  1125  0055                     	ds	1
  1126  0056                     _VALOR_TIMER:
  1127  0056                     	ds	1
  1128  0057                     _VIDAS:
  1129  0057                     	ds	1
  1130  0058                     _INMORTAL:
  1131  0058                     	ds	1
  1132  0059                     _Resta_Tiempo:
  1133  0059                     	ds	1
  1134  005A                     _Mostrar_Tiempo:
  1135  005A                     	ds	1
  1136  005B                     _RFID:
  1137  005B                     	ds	1
  1138  005C                     _Tiempo1:
  1139  005C                     	ds	1
  1140  005D                     _Tiempo0:
  1141  005D                     	ds	1
  1142  005E                     _Send_buf:
  1143  005E                     	ds	10
  1144  0068                     _buf:
  1145  0068                     	ds	4
  1146  006C                     _TagType:
  1147  006C                     	ds	1
  1148                           
  1149                           	psect	dataBANK0
  1150  006D                     __pdataBANK0:
  1151  006D                     _cont_balas:
  1152  006D                     	ds	1
  1153  006E                     _DISPAROS:
  1154  006E                     	ds	1
  1155                           
  1156                           	psect	bssBANK1
  1157  00A0                     __pbssBANK1:
  1158  00A0                     _UID:
  1159  00A0                     	ds	8
  1160                           
  1161                           	psect	clrtext
  1162  06B1                     clear_ram0:	
  1163                           ;	Called with FSR containing the base address, and
  1164                           ;	W with the last address+1
  1165                           
  1166  06B1  0064               	clrwdt	;clear the watchdog before getting into this loop
  1167  06B2                     clrloop0:
  1168  06B2  0180               	clrf	0	;clear RAM location pointed to by FSR
  1169  06B3  0A84               	incf	4,f	;increment pointer
  1170  06B4  0604               	xorwf	4,w	;XOR with final address
  1171  06B5  1903               	btfsc	3,2	;have we reached the end yet?
  1172  06B6  3400               	retlw	0	;all done for this memory range, return
  1173  06B7  0604               	xorwf	4,w	;XOR again to restore value
  1174  06B8  2EB2               	goto	clrloop0	;do the next byte
  1175                           
  1176                           	psect	cstackCOMMON
  1177  0070                     __pcstackCOMMON:
  1178  0070                     ?_uartInit:
  1179  0070                     ?_displaytInit:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0070                     ?_main_RFID_Reader:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0070                     ?_MFRC522_IsCard:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188  0070                     ?_MFRC522_ReadCardSerial:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191  0070                     ?_MFRC522_Halt:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194  0070                     ?_appInit:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197  0070                     ?_InicializarMEF:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200  0070                     ?_main:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203  0070                     ?_isr:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206  0070                     ??_isr:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209  0070                     ?_MFRC522_Rd:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212  0070                     ?_MFRC522_AntiColl:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215                           
  1216                           ; 1 bytes @ 0x0
  1217  0070                     	ds	3
  1218  0073                     ?_uartReadByte:
  1219  0073                     ??_uartInit:	
  1220                           ; 1 bit 
  1221                           
  1222  0073                     ??_displaytInit:	
  1223                           ; 1 bytes @ 0x3
  1224                           
  1225  0073                     ??_appInit:	
  1226                           ; 1 bytes @ 0x3
  1227                           
  1228  0073                     ??_InicializarMEF:	
  1229                           ; 1 bytes @ 0x3
  1230                           
  1231  0073                     ??_MFRC522_Rd:	
  1232                           ; 1 bytes @ 0x3
  1233                           
  1234  0073                     ?_MFRC522_Wr:	
  1235                           ; 1 bytes @ 0x3
  1236                           
  1237  0073                     ?_tickRead:	
  1238                           ; 1 bytes @ 0x3
  1239                           
  1240  0073                     ?___lwdiv:	
  1241                           ; 2 bytes @ 0x3
  1242                           
  1243  0073                     MFRC522_Wr@value:	
  1244                           ; 2 bytes @ 0x3
  1245                           
  1246  0073                     uartReadByte@receivedByte:	
  1247                           ; 1 bytes @ 0x3
  1248                           
  1249  0073                     ___lwdiv@divisor:	
  1250                           ; 2 bytes @ 0x3
  1251                           
  1252                           
  1253                           ; 2 bytes @ 0x3
  1254  0073                     	ds	1
  1255  0074                     ??_MFRC522_Wr:
  1256                           
  1257                           ; 1 bytes @ 0x4
  1258  0074                     	ds	1
  1259  0075                     ??_tickRead:
  1260  0075                     ??_uartReadByte:	
  1261                           ; 1 bytes @ 0x5
  1262                           
  1263  0075                     tickRead@aux:	
  1264                           ; 1 bytes @ 0x5
  1265                           
  1266  0075                     ___lwdiv@dividend:	
  1267                           ; 2 bytes @ 0x5
  1268                           
  1269                           
  1270                           ; 2 bytes @ 0x5
  1271  0075                     	ds	1
  1272  0076                     ?_SendBuff:
  1273  0076                     ?_MFRC522_Clear_Bit:	
  1274                           ; 1 bytes @ 0x6
  1275                           
  1276  0076                     ?_MFRC522_Set_Bit:	
  1277                           ; 1 bytes @ 0x6
  1278                           
  1279  0076                     SendBuff@len:	
  1280                           ; 1 bytes @ 0x6
  1281                           
  1282  0076                     MFRC522_Clear_Bit@mask:	
  1283                           ; 1 bytes @ 0x6
  1284                           
  1285  0076                     MFRC522_Set_Bit@mask:	
  1286                           ; 1 bytes @ 0x6
  1287                           
  1288                           
  1289                           ; 1 bytes @ 0x6
  1290  0076                     	ds	1
  1291  0077                     ??_MFRC522_Clear_Bit:
  1292  0077                     ??_MFRC522_Set_Bit:	
  1293                           ; 1 bytes @ 0x7
  1294                           
  1295  0077                     ??___lwdiv:	
  1296                           ; 1 bytes @ 0x7
  1297                           
  1298                           
  1299                           ; 1 bytes @ 0x7
  1300  0077                     	ds	1
  1301  0078                     ??_main:
  1302                           
  1303                           	psect	cstackBANK0
  1304  0020                     __pcstackBANK0:	
  1305                           ; 1 bytes @ 0x8
  1306                           
  1307  0020                     ??_SendBuff:
  1308  0020                     MFRC522_Rd@address:	
  1309                           ; 1 bytes @ 0x0
  1310                           
  1311  0020                     MFRC522_Wr@address:	
  1312                           ; 1 bytes @ 0x0
  1313                           
  1314  0020                     ___lwdiv@counter:	
  1315                           ; 1 bytes @ 0x0
  1316                           
  1317                           
  1318                           ; 1 bytes @ 0x0
  1319  0020                     	ds	1
  1320  0021                     MFRC522_Wr@ucAddr:
  1321  0021                     MFRC522_Rd@ucAddr:	
  1322                           ; 1 bytes @ 0x1
  1323                           
  1324  0021                     ___lwdiv@quotient:	
  1325                           ; 2 bytes @ 0x1
  1326                           
  1327                           
  1328                           ; 2 bytes @ 0x1
  1329  0021                     	ds	1
  1330  0022                     MFRC522_Wr@i:
  1331                           
  1332                           ; 1 bytes @ 0x2
  1333  0022                     	ds	1
  1334  0023                     ?_sprintf:
  1335  0023                     SendBuff@buf:	
  1336                           ; 2 bytes @ 0x3
  1337                           
  1338  0023                     sprintf@f:	
  1339                           ; 1 bytes @ 0x3
  1340                           
  1341  0023                     MFRC522_Rd@ucResult:	
  1342                           ; 1 bytes @ 0x3
  1343                           
  1344                           
  1345                           ; 2 bytes @ 0x3
  1346  0023                     	ds	1
  1347  0024                     SendBuff@i:
  1348                           
  1349                           ; 1 bytes @ 0x4
  1350  0024                     	ds	1
  1351  0025                     MFRC522_Rd@i:
  1352                           
  1353                           ; 2 bytes @ 0x5
  1354  0025                     	ds	1
  1355  0026                     ??_sprintf:
  1356                           
  1357                           ; 1 bytes @ 0x6
  1358  0026                     	ds	1
  1359  0027                     MFRC522_Clear_Bit@tmp:
  1360  0027                     MFRC522_Set_Bit@tmp:	
  1361                           ; 1 bytes @ 0x7
  1362                           
  1363                           
  1364                           ; 1 bytes @ 0x7
  1365  0027                     	ds	1
  1366  0028                     MFRC522_Clear_Bit@addr:
  1367  0028                     MFRC522_Set_Bit@addr:	
  1368                           ; 1 bytes @ 0x8
  1369                           
  1370                           
  1371                           ; 1 bytes @ 0x8
  1372  0028                     	ds	1
  1373  0029                     ?_MFRC522_ToCard:
  1374  0029                     ?_MFRC522_CRC:	
  1375                           ; 1 bytes @ 0x9
  1376                           
  1377  0029                     MFRC522_ToCard@sendData:	
  1378                           ; 1 bytes @ 0x9
  1379                           
  1380  0029                     MFRC522_CRC@length:	
  1381                           ; 1 bytes @ 0x9
  1382                           
  1383  0029                     sprintf@idx:	
  1384                           ; 1 bytes @ 0x9
  1385                           
  1386                           
  1387                           ; 1 bytes @ 0x9
  1388  0029                     	ds	1
  1389  002A                     MFRC522_ToCard@sendLen:
  1390  002A                     MFRC522_CRC@dataOut:	
  1391                           ; 1 bytes @ 0xA
  1392                           
  1393  002A                     sprintf@ap:	
  1394                           ; 1 bytes @ 0xA
  1395                           
  1396                           
  1397                           ; 1 bytes @ 0xA
  1398  002A                     	ds	1
  1399  002B                     ??_MFRC522_CRC:
  1400  002B                     MFRC522_ToCard@backData:	
  1401                           ; 1 bytes @ 0xB
  1402                           
  1403  002B                     sprintf@val:	
  1404                           ; 1 bytes @ 0xB
  1405                           
  1406                           
  1407                           ; 2 bytes @ 0xB
  1408  002B                     	ds	1
  1409  002C                     MFRC522_ToCard@backLen:
  1410  002C                     MFRC522_CRC@n:	
  1411                           ; 1 bytes @ 0xC
  1412                           
  1413                           
  1414                           ; 1 bytes @ 0xC
  1415  002C                     	ds	1
  1416  002D                     ??_MFRC522_ToCard:
  1417  002D                     MFRC522_CRC@dataIn:	
  1418                           ; 1 bytes @ 0xD
  1419                           
  1420  002D                     sprintf@prec:	
  1421                           ; 1 bytes @ 0xD
  1422                           
  1423                           
  1424                           ; 1 bytes @ 0xD
  1425  002D                     	ds	1
  1426  002E                     MFRC522_CRC@i:
  1427  002E                     sprintf@sp:	
  1428                           ; 1 bytes @ 0xE
  1429                           
  1430                           
  1431                           ; 1 bytes @ 0xE
  1432  002E                     	ds	1
  1433  002F                     sprintf@c:
  1434                           
  1435                           ; 1 bytes @ 0xF
  1436  002F                     	ds	4
  1437  0033                     MFRC522_ToCard@waitIRq:
  1438                           
  1439                           ; 1 bytes @ 0x13
  1440  0033                     	ds	1
  1441  0034                     MFRC522_ToCard@_status:
  1442                           
  1443                           ; 1 bytes @ 0x14
  1444  0034                     	ds	1
  1445  0035                     MFRC522_ToCard@lastBits:
  1446                           
  1447                           ; 1 bytes @ 0x15
  1448  0035                     	ds	1
  1449  0036                     MFRC522_ToCard@irqEn:
  1450                           
  1451                           ; 1 bytes @ 0x16
  1452  0036                     	ds	1
  1453  0037                     MFRC522_ToCard@command:
  1454                           
  1455                           ; 1 bytes @ 0x17
  1456  0037                     	ds	1
  1457  0038                     MFRC522_ToCard@i:
  1458                           
  1459                           ; 2 bytes @ 0x18
  1460  0038                     	ds	2
  1461  003A                     MFRC522_ToCard@n:
  1462                           
  1463                           ; 1 bytes @ 0x1A
  1464  003A                     	ds	1
  1465  003B                     ??_MFRC522_Halt:
  1466  003B                     ?_MFRC522_Request:	
  1467                           ; 1 bytes @ 0x1B
  1468                           
  1469  003B                     ??_MFRC522_AntiColl:	
  1470                           ; 1 bytes @ 0x1B
  1471                           
  1472  003B                     MFRC522_Request@TagType:	
  1473                           ; 1 bytes @ 0x1B
  1474                           
  1475                           
  1476                           ; 1 bytes @ 0x1B
  1477  003B                     	ds	1
  1478  003C                     ??_MFRC522_Request:
  1479                           
  1480                           ; 1 bytes @ 0x1C
  1481  003C                     	ds	3
  1482  003F                     MFRC522_Halt@buff:
  1483                           
  1484                           ; 4 bytes @ 0x1F
  1485  003F                     	ds	1
  1486  0040                     MFRC522_Request@reqMode:
  1487  0040                     MFRC522_AntiColl@serNumCheck:	
  1488                           ; 1 bytes @ 0x20
  1489                           
  1490                           
  1491                           ; 1 bytes @ 0x20
  1492  0040                     	ds	1
  1493  0041                     MFRC522_Request@_status:
  1494  0041                     MFRC522_AntiColl@unLen:	
  1495                           ; 1 bytes @ 0x21
  1496                           
  1497                           
  1498                           ; 2 bytes @ 0x21
  1499  0041                     	ds	1
  1500  0042                     MFRC522_Request@backBits:
  1501                           
  1502                           ; 2 bytes @ 0x22
  1503  0042                     	ds	1
  1504  0043                     MFRC522_AntiColl@_status:
  1505  0043                     MFRC522_Halt@unLen:	
  1506                           ; 1 bytes @ 0x23
  1507                           
  1508                           
  1509                           ; 2 bytes @ 0x23
  1510  0043                     	ds	1
  1511  0044                     ??_MFRC522_IsCard:
  1512  0044                     MFRC522_AntiColl@i:	
  1513                           ; 1 bytes @ 0x24
  1514                           
  1515                           
  1516                           ; 1 bytes @ 0x24
  1517  0044                     	ds	1
  1518  0045                     MFRC522_AntiColl@serNum:
  1519  0045                     MFRC522_IsCard@TagType:	
  1520                           ; 1 bytes @ 0x25
  1521                           
  1522                           
  1523                           ; 1 bytes @ 0x25
  1524  0045                     	ds	1
  1525  0046                     ??_MFRC522_ReadCardSerial:
  1526                           
  1527                           ; 1 bytes @ 0x26
  1528  0046                     	ds	1
  1529  0047                     MFRC522_ReadCardSerial@_status:
  1530                           
  1531                           ; 1 bytes @ 0x27
  1532  0047                     	ds	1
  1533  0048                     MFRC522_ReadCardSerial@str:
  1534                           
  1535                           ; 1 bytes @ 0x28
  1536  0048                     	ds	1
  1537  0049                     ??_main_RFID_Reader:
  1538                           
  1539                           ; 1 bytes @ 0x29
  1540  0049                     	ds	3
  1541  004C                     main_RFID_Reader@i:
  1542                           
  1543                           ; 1 bytes @ 0x2C
  1544  004C                     	ds	1
  1545                           
  1546                           	psect	maintext
  1547  05E4                     __pmaintext:	
  1548 ;;
  1549 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1550 ;;
  1551 ;; *************** function _main *****************
  1552 ;; Defined at:
  1553 ;;		line 62 in file "main.c"
  1554 ;; Parameters:    Size  Location     Type
  1555 ;;		None
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;  i               1    0        unsigned char 
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  1    wreg      void 
  1560 ;; Registers used:
  1561 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1562 ;; Tracked objects:
  1563 ;;		On entry : B00/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1567 ;;      Params:         0       0       0       0       0
  1568 ;;      Locals:         0       0       0       0       0
  1569 ;;      Temps:          0       0       0       0       0
  1570 ;;      Totals:         0       0       0       0       0
  1571 ;;Total ram usage:        0 bytes
  1572 ;; Hardware stack levels required when called: 7
  1573 ;; This function calls:
  1574 ;;		_InicializarMEF
  1575 ;;		_appInit
  1576 ;;		_main_RFID_Reader
  1577 ;;		_tickRead
  1578 ;; This function is called by:
  1579 ;;		Startup code after reset
  1580 ;; This function uses a non-reentrant model
  1581 ;;
  1582                           
  1583                           
  1584                           ;psect for function _main
  1585  05E4                     _main:
  1586  05E4                     l3005:	
  1587                           ;incstack = 0
  1588                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1589                           
  1590                           
  1591                           ;main.c: 63:     uint8_t i;;main.c: 64:     appInit();
  1592  05E4  120A  118A  2588  120A  118A  	fcall	_appInit
  1593  05E9                     l3007:
  1594                           
  1595                           ;main.c: 66:     InicializarMEF();
  1596  05E9  120A  118A  26C2  120A  118A  	fcall	_InicializarMEF
  1597  05EE                     l3009:
  1598                           
  1599                           ;main.c: 67:     PORTEbits.RE2 = 1;
  1600  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  1601  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  1602  05F0  1509               	bsf	9,2	;volatile
  1603  05F1                     l3011:
  1604                           
  1605                           ;main.c: 68:     PORTBbits.RB1 = 0;
  1606  05F1  1086               	bcf	6,1	;volatile
  1607  05F2                     l3013:
  1608                           
  1609                           ;main.c: 71:         tRFID = tickRead();
  1610  05F2  120A  118A  26A4  120A  118A  	fcall	_tickRead
  1611  05F7  0874               	movf	?_tickRead+1,w
  1612  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  1613  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  1614  05FA  00D0               	movwf	_tRFID+1
  1615  05FB  0873               	movf	?_tickRead,w
  1616  05FC  00CF               	movwf	_tRFID
  1617  05FD                     l3015:
  1618                           
  1619                           ;main.c: 72:         main_RFID_Reader();
  1620  05FD  120A  118A  2305  120A  118A  	fcall	_main_RFID_Reader
  1621  0602  2DF2               	goto	l3013
  1622  0603  120A  118A  280C   	ljmp	start
  1623  0606                     __end_of_main:
  1624                           
  1625                           	psect	text1
  1626  0305                     __ptext1:	
  1627 ;; *************** function _main_RFID_Reader *****************
  1628 ;; Defined at:
  1629 ;;		line 36 in file "RFID_Read.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;		None
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;  i               1   44[BANK0 ] unsigned char 
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  1    wreg      void 
  1636 ;; Registers used:
  1637 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1643 ;;      Params:         0       0       0       0       0
  1644 ;;      Locals:         0       1       0       0       0
  1645 ;;      Temps:          0       3       0       0       0
  1646 ;;      Totals:         0       4       0       0       0
  1647 ;;Total ram usage:        4 bytes
  1648 ;; Hardware stack levels used: 1
  1649 ;; Hardware stack levels required when called: 6
  1650 ;; This function calls:
  1651 ;;		_MFRC522_Halt
  1652 ;;		_MFRC522_IsCard
  1653 ;;		_MFRC522_ReadCardSerial
  1654 ;;		_SendBuff
  1655 ;;		_sprintf
  1656 ;;		_tickRead
  1657 ;; This function is called by:
  1658 ;;		_main
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662                           
  1663                           ;psect for function _main_RFID_Reader
  1664  0305                     _main_RFID_Reader:
  1665  0305                     l2975:	
  1666                           ;incstack = 0
  1667                           ; Regs used in _main_RFID_Reader: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1668                           
  1669                           
  1670                           ;RFID_Read.c: 38:     if (tickRead() - tRFID < 10000 ) {
  1671  0305  120A  118A  26A4  120A  118A  	fcall	_tickRead
  1672  030A  1283               	bcf	3,5	;RP0=0, select bank0
  1673  030B  1303               	bcf	3,6	;RP1=0, select bank0
  1674  030C  084F               	movf	_tRFID,w
  1675  030D  0273               	subwf	?_tickRead,w
  1676  030E  00C9               	movwf	??_main_RFID_Reader
  1677  030F  0850               	movf	_tRFID+1,w
  1678  0310  1C03               	skipc
  1679  0311  0A50               	incf	_tRFID+1,w
  1680  0312  0274               	subwf	?_tickRead+1,w
  1681  0313  00CA               	movwf	??_main_RFID_Reader+1
  1682  0314  3027               	movlw	39
  1683  0315  024A               	subwf	??_main_RFID_Reader+1,w
  1684  0316  3010               	movlw	16
  1685  0317  1903               	skipnz
  1686  0318  0249               	subwf	??_main_RFID_Reader,w
  1687  0319  1803               	skipnc
  1688  031A  2B1C               	goto	u2051
  1689  031B  2B1D               	goto	u2050
  1690  031C                     u2051:
  1691  031C  2B76               	goto	l370
  1692  031D                     u2050:
  1693  031D                     l2979:
  1694  031D  306C               	movlw	(low (_TagType| 0))& (0+255)
  1695  031E  120A  118A  2656  120A  118A  	fcall	_MFRC522_IsCard
  1696  0323  3A00               	xorlw	0
  1697  0324  1903               	skipnz
  1698  0325  2B27               	goto	u2061
  1699  0326  2B28               	goto	u2060
  1700  0327                     u2061:
  1701  0327  2B1D               	goto	l2979
  1702  0328                     u2060:
  1703  0328                     l2981:
  1704  0328  30A0               	movlw	(low (_UID| 0))& (0+255)
  1705  0329  120A  118A  2606  120A  118A  	fcall	_MFRC522_ReadCardSerial
  1706  032E  3A00               	xorlw	0
  1707  032F  1903               	skipnz
  1708  0330  2B32               	goto	u2071
  1709  0331  2B33               	goto	u2070
  1710  0332                     u2071:
  1711  0332  2B28               	goto	l2981
  1712  0333                     u2070:
  1713  0333                     l2983:
  1714                           
  1715                           ;RFID_Read.c: 49:         for(char i=0; i<4; i++)
  1716  0333  1283               	bcf	3,5	;RP0=0, select bank0
  1717  0334  1303               	bcf	3,6	;RP1=0, select bank0
  1718  0335  01CC               	clrf	main_RFID_Reader@i
  1719  0336                     l2989:
  1720                           
  1721                           ;RFID_Read.c: 50:         {;RFID_Read.c: 51:             sprintf(buf, "%X", UID[i]);
  1722  0336  3030               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1723  0337  00C9               	movwf	??_main_RFID_Reader
  1724  0338  0849               	movf	??_main_RFID_Reader,w
  1725  0339  00A3               	movwf	sprintf@f
  1726  033A  084C               	movf	main_RFID_Reader@i,w
  1727  033B  3EA0               	addlw	(low (_UID| 0))& (0+255)
  1728  033C  0084               	movwf	4
  1729  033D  1383               	bcf	3,7	;select IRP bank1
  1730  033E  0800               	movf	0,w
  1731  033F  00CA               	movwf	??_main_RFID_Reader+1
  1732  0340  01CB               	clrf	??_main_RFID_Reader+2
  1733  0341  084A               	movf	??_main_RFID_Reader+1,w
  1734  0342  00A4               	movwf	?_sprintf+1
  1735  0343  084B               	movf	??_main_RFID_Reader+2,w
  1736  0344  00A5               	movwf	?_sprintf+2
  1737  0345  3068               	movlw	(low (_buf| 0))& (0+255)
  1738  0346  120A  118A  21C1  120A  118A  	fcall	_sprintf
  1739  034B                     l2991:
  1740                           
  1741                           ;RFID_Read.c: 53:             SendBuff(buf,4);
  1742  034B  3004               	movlw	4
  1743  034C  1283               	bcf	3,5	;RP0=0, select bank0
  1744  034D  1303               	bcf	3,6	;RP1=0, select bank0
  1745  034E  00C9               	movwf	??_main_RFID_Reader
  1746  034F  0849               	movf	??_main_RFID_Reader,w
  1747  0350  00F6               	movwf	SendBuff@len
  1748  0351  3068               	movlw	(low (_buf| 0))& (0+255)
  1749  0352  120A  118A  25BF  120A  118A  	fcall	_SendBuff
  1750  0357                     l2993:
  1751                           
  1752                           ;RFID_Read.c: 54:         }
  1753  0357  3001               	movlw	1
  1754  0358  1283               	bcf	3,5	;RP0=0, select bank0
  1755  0359  1303               	bcf	3,6	;RP1=0, select bank0
  1756  035A  00C9               	movwf	??_main_RFID_Reader
  1757  035B  0849               	movf	??_main_RFID_Reader,w
  1758  035C  07CC               	addwf	main_RFID_Reader@i,f
  1759  035D                     l2995:
  1760  035D  3004               	movlw	4
  1761  035E  024C               	subwf	main_RFID_Reader@i,w
  1762  035F  1C03               	skipc
  1763  0360  2B62               	goto	u2081
  1764  0361  2B63               	goto	u2080
  1765  0362                     u2081:
  1766  0362  2B36               	goto	l2989
  1767  0363                     u2080:
  1768  0363                     l2997:
  1769                           
  1770                           ;RFID_Read.c: 55:         _delay((unsigned long)((1000)*(4000000L/4000.0)));
  1771  0363  3006               	movlw	6
  1772  0364  1283               	bcf	3,5	;RP0=0, select bank0
  1773  0365  1303               	bcf	3,6	;RP1=0, select bank0
  1774  0366  00CB               	movwf	??_main_RFID_Reader+2
  1775  0367  3013               	movlw	19
  1776  0368  00CA               	movwf	??_main_RFID_Reader+1
  1777  0369  30AD               	movlw	173
  1778  036A  00C9               	movwf	??_main_RFID_Reader
  1779  036B                     u2127:
  1780  036B  0BC9               	decfsz	??_main_RFID_Reader,f
  1781  036C  2B6B               	goto	u2127
  1782  036D  0BCA               	decfsz	??_main_RFID_Reader+1,f
  1783  036E  2B6B               	goto	u2127
  1784  036F  0BCB               	decfsz	??_main_RFID_Reader+2,f
  1785  0370  2B6B               	goto	u2127
  1786  0371                     l2999:
  1787                           
  1788                           ;RFID_Read.c: 56:         MFRC522_Halt();
  1789  0371  120A  118A  2488  120A  118A  	fcall	_MFRC522_Halt
  1790  0376                     l370:
  1791  0376  0008               	return
  1792  0377                     __end_of_main_RFID_Reader:
  1793                           
  1794                           	psect	text2
  1795  06A4                     __ptext2:	
  1796 ;; *************** function _tickRead *****************
  1797 ;; Defined at:
  1798 ;;		line 62 in file "tick.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;		None
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;  aux             2    5[COMMON] unsigned int 
  1803 ;; Return value:  Size  Location     Type
  1804 ;;                  2    3[COMMON] unsigned int 
  1805 ;; Registers used:
  1806 ;;		wreg
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1812 ;;      Params:         2       0       0       0       0
  1813 ;;      Locals:         2       0       0       0       0
  1814 ;;      Temps:          0       0       0       0       0
  1815 ;;      Totals:         4       0       0       0       0
  1816 ;;Total ram usage:        4 bytes
  1817 ;; Hardware stack levels used: 1
  1818 ;; Hardware stack levels required when called: 1
  1819 ;; This function calls:
  1820 ;;		Nothing
  1821 ;; This function is called by:
  1822 ;;		_main
  1823 ;;		_main_RFID_Reader
  1824 ;;		_ActualizarRONDA
  1825 ;;		_ActualizarGAT
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           
  1830                           ;psect for function _tickRead
  1831  06A4                     _tickRead:
  1832  06A4                     l2201:	
  1833                           ;incstack = 0
  1834                           ; Regs used in _tickRead: [wreg]
  1835                           
  1836                           
  1837                           ;tick.c: 63:     tick_t aux;;tick.c: 64:     GIE = 0;
  1838  06A4  138B               	bcf	11,7	;volatile
  1839  06A5                     l2203:
  1840                           
  1841                           ;tick.c: 65:     aux = tickCounter;
  1842  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  1843  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  1844  06A7  084E               	movf	_tickCounter+1,w	;volatile
  1845  06A8  00F6               	movwf	tickRead@aux+1
  1846  06A9  084D               	movf	_tickCounter,w	;volatile
  1847  06AA  00F5               	movwf	tickRead@aux
  1848  06AB                     l2205:
  1849                           
  1850                           ;tick.c: 66:     GIE = 1;
  1851  06AB  178B               	bsf	11,7	;volatile
  1852                           
  1853                           ;tick.c: 67:     return aux;
  1854  06AC  0876               	movf	tickRead@aux+1,w
  1855  06AD  00F4               	movwf	?_tickRead+1
  1856  06AE  0875               	movf	tickRead@aux,w
  1857  06AF  00F3               	movwf	?_tickRead
  1858  06B0                     l234:
  1859  06B0  0008               	return
  1860  06B1                     __end_of_tickRead:
  1861                           
  1862                           	psect	text3
  1863  01C1                     __ptext3:	
  1864 ;; *************** function _sprintf *****************
  1865 ;; Defined at:
  1866 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;  sp              1    wreg     PTR unsigned char 
  1869 ;;		 -> buf(4), 
  1870 ;;  f               1    3[BANK0 ] PTR const unsigned char 
  1871 ;;		 -> STR_2(3), 
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;  sp              1   14[BANK0 ] PTR unsigned char 
  1874 ;;		 -> buf(4), 
  1875 ;;  idx             1    9[BANK0 ] unsigned char 
  1876 ;;  tmpval          4    0        struct .
  1877 ;;  val             2   11[BANK0 ] unsigned int 
  1878 ;;  cp              2    0        PTR const unsigned char 
  1879 ;;  len             2    0        unsigned int 
  1880 ;;  c               1   15[BANK0 ] unsigned char 
  1881 ;;  prec            1   13[BANK0 ] char 
  1882 ;;  ap              1   10[BANK0 ] PTR void [1]
  1883 ;;		 -> ?_sprintf(2), 
  1884 ;;  flag            1    0        unsigned char 
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  2    3[BANK0 ] int 
  1887 ;; Registers used:
  1888 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1894 ;;      Params:         0       3       0       0       0
  1895 ;;      Locals:         0       7       0       0       0
  1896 ;;      Temps:          0       3       0       0       0
  1897 ;;      Totals:         0      13       0       0       0
  1898 ;;Total ram usage:       13 bytes
  1899 ;; Hardware stack levels used: 1
  1900 ;; Hardware stack levels required when called: 2
  1901 ;; This function calls:
  1902 ;;		___lwdiv
  1903 ;; This function is called by:
  1904 ;;		_main_RFID_Reader
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           
  1909                           ;psect for function _sprintf
  1910  01C1                     _sprintf:
  1911                           
  1912                           ;incstack = 0
  1913                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1914                           ;sprintf@sp stored from wreg
  1915  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  1916  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  1917  01C3  00AE               	movwf	sprintf@sp
  1918  01C4                     l2911:
  1919                           
  1920                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1921  01C4  3024               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1922  01C5  00A6               	movwf	??_sprintf
  1923  01C6  0826               	movf	??_sprintf,w
  1924  01C7  00AA               	movwf	sprintf@ap
  1925                           
  1926                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1927  01C8  2A71               	goto	l2953
  1928  01C9                     l2913:
  1929                           
  1930                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1931  01C9  3025               	movlw	37
  1932  01CA  062F               	xorwf	sprintf@c,w
  1933  01CB  1903               	btfsc	3,2
  1934  01CC  29CE               	goto	u2001
  1935  01CD  29CF               	goto	u2000
  1936  01CE                     u2001:
  1937  01CE  29DB               	goto	l2919
  1938  01CF                     u2000:
  1939  01CF                     l2915:
  1940                           
  1941                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1942  01CF  082F               	movf	sprintf@c,w
  1943  01D0  00A6               	movwf	??_sprintf
  1944  01D1  082E               	movf	sprintf@sp,w
  1945  01D2  0084               	movwf	4
  1946  01D3  0826               	movf	??_sprintf,w
  1947  01D4  1383               	bcf	3,7	;select IRP bank0
  1948  01D5  0080               	movwf	0
  1949  01D6                     l2917:
  1950  01D6  3001               	movlw	1
  1951  01D7  00A6               	movwf	??_sprintf
  1952  01D8  0826               	movf	??_sprintf,w
  1953  01D9  07AE               	addwf	sprintf@sp,f
  1954                           
  1955                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  1956  01DA  2A71               	goto	l2953
  1957  01DB                     l2919:
  1958  01DB                     l2923:	
  1959                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1960                           
  1961  01DB  3001               	movlw	1
  1962  01DC  07A3               	addwf	sprintf@f,f
  1963  01DD  30FF               	movlw	-1
  1964  01DE  0723               	addwf	sprintf@f,w
  1965  01DF  0084               	movwf	4
  1966  01E0  120A  118A  2550  120A  118A  	fcall	stringdir
  1967  01E5  00AF               	movwf	sprintf@c
  1968  01E6  00A6               	movwf	??_sprintf
  1969  01E7  01A7               	clrf	??_sprintf+1
  1970                           
  1971                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1972                           ; Switch size 1, requested type "simple"
  1973                           ; Number of cases is 1, Range of values is 0 to 0
  1974                           ; switch strategies available:
  1975                           ; Name         Instructions Cycles
  1976                           ; simple_byte            4     3 (average)
  1977                           ; direct_byte           11     8 (fixed)
  1978                           ; jumptable            260     6 (fixed)
  1979                           ;	Chosen strategy is simple_byte
  1980  01E8  0827               	movf	??_sprintf+1,w
  1981  01E9  3A00               	xorlw	0	; case 0
  1982  01EA  1903               	skipnz
  1983  01EB  29ED               	goto	l3107
  1984  01EC  2A71               	goto	l2953
  1985  01ED                     l3107:
  1986                           
  1987                           ; Switch size 1, requested type "simple"
  1988                           ; Number of cases is 3, Range of values is 0 to 120
  1989                           ; switch strategies available:
  1990                           ; Name         Instructions Cycles
  1991                           ; simple_byte           10     6 (average)
  1992                           ; jumptable            260     6 (fixed)
  1993                           ;	Chosen strategy is simple_byte
  1994  01ED  0826               	movf	??_sprintf,w
  1995  01EE  3A00               	xorlw	0	; case 0
  1996  01EF  1903               	skipnz
  1997  01F0  2A83               	goto	l2955
  1998  01F1  3A58               	xorlw	88	; case 88
  1999  01F2  1903               	skipnz
  2000  01F3  29F8               	goto	l2925
  2001  01F4  3A20               	xorlw	32	; case 120
  2002  01F5  1903               	skipnz
  2003  01F6  29F8               	goto	l2925
  2004  01F7  2A71               	goto	l2953
  2005  01F8                     l2925:
  2006                           
  2007                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2008  01F8  082A               	movf	sprintf@ap,w
  2009  01F9  0084               	movwf	4
  2010  01FA  1383               	bcf	3,7	;select IRP bank0
  2011  01FB  0800               	movf	0,w
  2012  01FC  00AB               	movwf	sprintf@val
  2013  01FD  0A84               	incf	4,f
  2014  01FE  0800               	movf	0,w
  2015  01FF  00AC               	movwf	sprintf@val+1
  2016  0200                     l2927:
  2017  0200  3002               	movlw	2
  2018  0201  00A6               	movwf	??_sprintf
  2019  0202  0826               	movf	??_sprintf,w
  2020  0203  07AA               	addwf	sprintf@ap,f
  2021  0204                     l2929:
  2022                           
  2023                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1342:    for(c = 1 ; c !=
      +                           sizeof hexpowers/sizeof hexpowers[0] ; c++)
  2024  0204  01AF               	clrf	sprintf@c
  2025  0205  0AAF               	incf	sprintf@c,f
  2026  0206                     l2935:
  2027                           
  2028                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1343:     if(val 
      +                          < hexpowers[c])
  2029  0206  082F               	movf	sprintf@c,w
  2030  0207  00A6               	movwf	??_sprintf
  2031  0208  0726               	addwf	??_sprintf,w
  2032  0209  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  2033  020A  0084               	movwf	4
  2034  020B  120A  118A  2550  120A  118A  	fcall	stringdir
  2035  0210  00A7               	movwf	??_sprintf+1
  2036  0211  120A  118A  2550  120A  118A  	fcall	stringdir
  2037  0216  00A8               	movwf	??_sprintf+2
  2038  0217  0828               	movf	??_sprintf+2,w
  2039  0218  022C               	subwf	sprintf@val+1,w
  2040  0219  1D03               	skipz
  2041  021A  2A1D               	goto	u2015
  2042  021B  0827               	movf	??_sprintf+1,w
  2043  021C  022B               	subwf	sprintf@val,w
  2044  021D                     u2015:
  2045  021D  1803               	skipnc
  2046  021E  2A20               	goto	u2011
  2047  021F  2A21               	goto	u2010
  2048  0220                     u2011:
  2049  0220  2A22               	goto	l2939
  2050  0221                     u2010:
  2051  0221  2A2C               	goto	l2941
  2052  0222                     l2939:
  2053  0222  3001               	movlw	1
  2054  0223  00A6               	movwf	??_sprintf
  2055  0224  0826               	movf	??_sprintf,w
  2056  0225  07AF               	addwf	sprintf@c,f
  2057  0226  3004               	movlw	4
  2058  0227  062F               	xorwf	sprintf@c,w
  2059  0228  1D03               	btfss	3,2
  2060  0229  2A2B               	goto	u2021
  2061  022A  2A2C               	goto	u2020
  2062  022B                     u2021:
  2063  022B  2A06               	goto	l2935
  2064  022C                     u2020:
  2065  022C                     l2941:
  2066                           
  2067                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2068  022C  082F               	movf	sprintf@c,w
  2069  022D  00A6               	movwf	??_sprintf
  2070  022E  0826               	movf	??_sprintf,w
  2071  022F  00AD               	movwf	sprintf@prec
  2072                           
  2073                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2074  0230  2A68               	goto	l2951
  2075  0231                     l2943:
  2076                           
  2077                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1525:    {;C:\Program Fi
      +                          les\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1526:     unsigned char idx = (
      +                          val / hexpowers[(unsigned char)prec]) & 0xF;
  2078  0231  082D               	movf	sprintf@prec,w
  2079  0232  00A6               	movwf	??_sprintf
  2080  0233  0726               	addwf	??_sprintf,w
  2081  0234  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  2082  0235  0084               	movwf	4
  2083  0236  120A  118A  2550  120A  118A  	fcall	stringdir
  2084  023B  00F3               	movwf	___lwdiv@divisor
  2085  023C  120A  118A  2550  120A  118A  	fcall	stringdir
  2086  0241  00F4               	movwf	___lwdiv@divisor+1
  2087  0242  082C               	movf	sprintf@val+1,w
  2088  0243  00F6               	movwf	___lwdiv@dividend+1
  2089  0244  082B               	movf	sprintf@val,w
  2090  0245  00F5               	movwf	___lwdiv@dividend
  2091  0246  120A  118A  2442  120A  118A  	fcall	___lwdiv
  2092  024B  0873               	movf	?___lwdiv,w
  2093  024C  390F               	andlw	15
  2094  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2095  024E  1303               	bcf	3,6	;RP1=0, select bank0
  2096  024F  00A7               	movwf	??_sprintf+1
  2097  0250  0827               	movf	??_sprintf+1,w
  2098  0251  00A9               	movwf	sprintf@idx
  2099  0252                     l2945:
  2100                           
  2101                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1530:     c = "01
      +                          23456789ABCDEF"[idx];
  2102  0252  0829               	movf	sprintf@idx,w
  2103  0253  3E1B               	addlw	low ((STR_3-__stringbase)| (0+32768))
  2104  0254  0084               	movwf	4
  2105  0255  120A  118A  2550  120A  118A  	fcall	stringdir
  2106  025A  00A6               	movwf	??_sprintf
  2107  025B  0826               	movf	??_sprintf,w
  2108  025C  00AF               	movwf	sprintf@c
  2109  025D                     l2947:
  2110                           
  2111                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1534:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Program Fi
      +                          les\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)));
  2112  025D  082F               	movf	sprintf@c,w
  2113  025E  00A6               	movwf	??_sprintf
  2114  025F  082E               	movf	sprintf@sp,w
  2115  0260  0084               	movwf	4
  2116  0261  0826               	movf	??_sprintf,w
  2117  0262  1383               	bcf	3,7	;select IRP bank0
  2118  0263  0080               	movwf	0
  2119  0264                     l2949:
  2120  0264  3001               	movlw	1
  2121  0265  00A6               	movwf	??_sprintf
  2122  0266  0826               	movf	??_sprintf,w
  2123  0267  07AE               	addwf	sprintf@sp,f
  2124  0268                     l2951:
  2125                           
  2126                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2127  0268  30FF               	movlw	255
  2128  0269  00A6               	movwf	??_sprintf
  2129  026A  0826               	movf	??_sprintf,w
  2130  026B  07AD               	addwf	sprintf@prec,f
  2131  026C  0A2D               	incf	sprintf@prec,w
  2132  026D  1D03               	btfss	3,2
  2133  026E  2A70               	goto	u2031
  2134  026F  2A71               	goto	u2030
  2135  0270                     u2031:
  2136  0270  2A31               	goto	l2943
  2137  0271                     u2030:
  2138  0271                     l2953:
  2139                           
  2140                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2141  0271  3001               	movlw	1
  2142  0272  07A3               	addwf	sprintf@f,f
  2143  0273  30FF               	movlw	-1
  2144  0274  0723               	addwf	sprintf@f,w
  2145  0275  0084               	movwf	4
  2146  0276  120A  118A  2550  120A  118A  	fcall	stringdir
  2147  027B  00A6               	movwf	??_sprintf
  2148  027C  0826               	movf	??_sprintf,w
  2149  027D  00AF               	movwf	sprintf@c
  2150  027E  082F               	movf	sprintf@c,w
  2151  027F  1D03               	btfss	3,2
  2152  0280  2A82               	goto	u2041
  2153  0281  2A83               	goto	u2040
  2154  0282                     u2041:
  2155  0282  29C9               	goto	l2913
  2156  0283                     u2040:
  2157  0283                     l2955:
  2158                           
  2159                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2160  0283  082E               	movf	sprintf@sp,w
  2161  0284  0084               	movwf	4
  2162  0285  1383               	bcf	3,7	;select IRP bank0
  2163  0286  0180               	clrf	0
  2164  0287                     l594:
  2165  0287  0008               	return
  2166  0288                     __end_of_sprintf:
  2167                           
  2168                           	psect	text4
  2169  0442                     __ptext4:	
  2170 ;; *************** function ___lwdiv *****************
  2171 ;; Defined at:
  2172 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;  divisor         2    3[COMMON] unsigned int 
  2175 ;;  dividend        2    5[COMMON] unsigned int 
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;  quotient        2    1[BANK0 ] unsigned int 
  2178 ;;  counter         1    0[BANK0 ] unsigned char 
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  2    3[COMMON] unsigned int 
  2181 ;; Registers used:
  2182 ;;		wreg, status,2, status,0
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2188 ;;      Params:         4       0       0       0       0
  2189 ;;      Locals:         0       3       0       0       0
  2190 ;;      Temps:          1       0       0       0       0
  2191 ;;      Totals:         5       3       0       0       0
  2192 ;;Total ram usage:        8 bytes
  2193 ;; Hardware stack levels used: 1
  2194 ;; Hardware stack levels required when called: 1
  2195 ;; This function calls:
  2196 ;;		Nothing
  2197 ;; This function is called by:
  2198 ;;		_sprintf
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           
  2203                           ;psect for function ___lwdiv
  2204  0442                     ___lwdiv:
  2205  0442                     l2849:	
  2206                           ;incstack = 0
  2207                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2208                           
  2209  0442  1283               	bcf	3,5	;RP0=0, select bank0
  2210  0443  1303               	bcf	3,6	;RP1=0, select bank0
  2211  0444  01A1               	clrf	___lwdiv@quotient
  2212  0445  01A2               	clrf	___lwdiv@quotient+1
  2213  0446                     l2851:
  2214  0446  0873               	movf	___lwdiv@divisor,w
  2215  0447  0474               	iorwf	___lwdiv@divisor+1,w
  2216  0448  1903               	btfsc	3,2
  2217  0449  2C4B               	goto	u1901
  2218  044A  2C4C               	goto	u1900
  2219  044B                     u1901:
  2220  044B  2C83               	goto	l2871
  2221  044C                     u1900:
  2222  044C                     l2853:
  2223  044C  01A0               	clrf	___lwdiv@counter
  2224  044D  0AA0               	incf	___lwdiv@counter,f
  2225  044E  2C5A               	goto	l2859
  2226  044F                     l2855:
  2227  044F  3001               	movlw	1
  2228  0450                     u1915:
  2229  0450  1003               	clrc
  2230  0451  0DF3               	rlf	___lwdiv@divisor,f
  2231  0452  0DF4               	rlf	___lwdiv@divisor+1,f
  2232  0453  3EFF               	addlw	-1
  2233  0454  1D03               	skipz
  2234  0455  2C50               	goto	u1915
  2235  0456                     l2857:
  2236  0456  3001               	movlw	1
  2237  0457  00F7               	movwf	??___lwdiv
  2238  0458  0877               	movf	??___lwdiv,w
  2239  0459  07A0               	addwf	___lwdiv@counter,f
  2240  045A                     l2859:
  2241  045A  1FF4               	btfss	___lwdiv@divisor+1,7
  2242  045B  2C5D               	goto	u1921
  2243  045C  2C5E               	goto	u1920
  2244  045D                     u1921:
  2245  045D  2C4F               	goto	l2855
  2246  045E                     u1920:
  2247  045E                     l2861:
  2248  045E  3001               	movlw	1
  2249  045F                     u1935:
  2250  045F  1003               	clrc
  2251  0460  0DA1               	rlf	___lwdiv@quotient,f
  2252  0461  0DA2               	rlf	___lwdiv@quotient+1,f
  2253  0462  3EFF               	addlw	-1
  2254  0463  1D03               	skipz
  2255  0464  2C5F               	goto	u1935
  2256  0465  0874               	movf	___lwdiv@divisor+1,w
  2257  0466  0276               	subwf	___lwdiv@dividend+1,w
  2258  0467  1D03               	skipz
  2259  0468  2C6B               	goto	u1945
  2260  0469  0873               	movf	___lwdiv@divisor,w
  2261  046A  0275               	subwf	___lwdiv@dividend,w
  2262  046B                     u1945:
  2263  046B  1C03               	skipc
  2264  046C  2C6E               	goto	u1941
  2265  046D  2C6F               	goto	u1940
  2266  046E                     u1941:
  2267  046E  2C76               	goto	l2867
  2268  046F                     u1940:
  2269  046F                     l2863:
  2270  046F  0873               	movf	___lwdiv@divisor,w
  2271  0470  02F5               	subwf	___lwdiv@dividend,f
  2272  0471  0874               	movf	___lwdiv@divisor+1,w
  2273  0472  1C03               	skipc
  2274  0473  03F6               	decf	___lwdiv@dividend+1,f
  2275  0474  02F6               	subwf	___lwdiv@dividend+1,f
  2276  0475                     l2865:
  2277  0475  1421               	bsf	___lwdiv@quotient,0
  2278  0476                     l2867:
  2279  0476  3001               	movlw	1
  2280  0477                     u1955:
  2281  0477  1003               	clrc
  2282  0478  0CF4               	rrf	___lwdiv@divisor+1,f
  2283  0479  0CF3               	rrf	___lwdiv@divisor,f
  2284  047A  3EFF               	addlw	-1
  2285  047B  1D03               	skipz
  2286  047C  2C77               	goto	u1955
  2287  047D                     l2869:
  2288  047D  3001               	movlw	1
  2289  047E  02A0               	subwf	___lwdiv@counter,f
  2290  047F  1D03               	btfss	3,2
  2291  0480  2C82               	goto	u1961
  2292  0481  2C83               	goto	u1960
  2293  0482                     u1961:
  2294  0482  2C5E               	goto	l2861
  2295  0483                     u1960:
  2296  0483                     l2871:
  2297  0483  0822               	movf	___lwdiv@quotient+1,w
  2298  0484  00F4               	movwf	?___lwdiv+1
  2299  0485  0821               	movf	___lwdiv@quotient,w
  2300  0486  00F3               	movwf	?___lwdiv
  2301  0487                     l870:
  2302  0487  0008               	return
  2303  0488                     __end_of___lwdiv:
  2304                           
  2305                           	psect	text5
  2306  05BF                     __ptext5:	
  2307 ;; *************** function _SendBuff *****************
  2308 ;; Defined at:
  2309 ;;		line 120 in file "uart.c"
  2310 ;; Parameters:    Size  Location     Type
  2311 ;;  buf             1    wreg     PTR unsigned char 
  2312 ;;		 -> buf(4), 
  2313 ;;  len             1    6[COMMON] unsigned char 
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  2316 ;;		 -> buf(4), 
  2317 ;;  i               1    4[BANK0 ] unsigned char 
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  1    wreg      void 
  2320 ;; Registers used:
  2321 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2327 ;;      Params:         1       0       0       0       0
  2328 ;;      Locals:         0       2       0       0       0
  2329 ;;      Temps:          0       3       0       0       0
  2330 ;;      Totals:         1       5       0       0       0
  2331 ;;Total ram usage:        6 bytes
  2332 ;; Hardware stack levels used: 1
  2333 ;; Hardware stack levels required when called: 2
  2334 ;; This function calls:
  2335 ;;		_uartReadByte
  2336 ;; This function is called by:
  2337 ;;		_main_RFID_Reader
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341                           
  2342                           ;psect for function _SendBuff
  2343  05BF                     _SendBuff:
  2344                           
  2345                           ;incstack = 0
  2346                           ; Regs used in _SendBuff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2347                           ;SendBuff@buf stored from wreg
  2348  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  2349  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  2350  05C1  00A3               	movwf	SendBuff@buf
  2351  05C2                     l2875:
  2352                           
  2353                           ;uart.c: 120: void SendBuff(uint8_t* buf,uint8_t len);uart.c: 121: {;uart.c: 122:     ui
      +                          nt8_t i = 0 ;
  2354  05C2  01A4               	clrf	SendBuff@i
  2355                           
  2356                           ;uart.c: 124:     for(i=0; i<len; i++)
  2357  05C3  01A4               	clrf	SendBuff@i
  2358  05C4  2DDD               	goto	l2881
  2359  05C5                     l2877:
  2360                           
  2361                           ;uart.c: 125:     {;uart.c: 126:         uartReadByte(buf[i]) ;
  2362  05C5  0824               	movf	SendBuff@i,w
  2363  05C6  0723               	addwf	SendBuff@buf,w
  2364  05C7  00A0               	movwf	??_SendBuff
  2365  05C8  0820               	movf	??_SendBuff,w
  2366  05C9  0084               	movwf	4
  2367  05CA  1383               	bcf	3,7	;select IRP bank0
  2368  05CB  0800               	movf	0,w
  2369  05CC  00A1               	movwf	??_SendBuff+1
  2370  05CD  01A2               	clrf	??_SendBuff+2
  2371  05CE  0821               	movf	??_SendBuff+1,w
  2372  05CF  00F3               	movwf	uartReadByte@receivedByte
  2373  05D0  0822               	movf	??_SendBuff+2,w
  2374  05D1  00F4               	movwf	uartReadByte@receivedByte+1
  2375  05D2  120A  118A  2694  120A  118A  	fcall	_uartReadByte
  2376  05D7                     l2879:
  2377                           
  2378                           ;uart.c: 127:     }
  2379  05D7  3001               	movlw	1
  2380  05D8  1283               	bcf	3,5	;RP0=0, select bank0
  2381  05D9  1303               	bcf	3,6	;RP1=0, select bank0
  2382  05DA  00A0               	movwf	??_SendBuff
  2383  05DB  0820               	movf	??_SendBuff,w
  2384  05DC  07A4               	addwf	SendBuff@i,f
  2385  05DD                     l2881:
  2386  05DD  0876               	movf	SendBuff@len,w
  2387  05DE  0224               	subwf	SendBuff@i,w
  2388  05DF  1C03               	skipc
  2389  05E0  2DE2               	goto	u1971
  2390  05E1  2DE3               	goto	u1970
  2391  05E2                     u1971:
  2392  05E2  2DC5               	goto	l2877
  2393  05E3                     u1970:
  2394  05E3                     l315:
  2395  05E3  0008               	return
  2396  05E4                     __end_of_SendBuff:
  2397                           
  2398                           	psect	text6
  2399  0694                     __ptext6:	
  2400 ;; *************** function _uartReadByte *****************
  2401 ;; Defined at:
  2402 ;;		line 97 in file "uart.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;  receivedByte    2    3[COMMON] PTR unsigned char 
  2405 ;;		 -> RAM(512), 
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;		None
  2408 ;; Return value:  Size  Location     Type
  2409 ;;		None               void
  2410 ;; Registers used:
  2411 ;;		wreg, fsr0l, fsr0h
  2412 ;; Tracked objects:
  2413 ;;		On entry : 0/0
  2414 ;;		On exit  : 0/0
  2415 ;;		Unchanged: 0/0
  2416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2417 ;;      Params:         2       0       0       0       0
  2418 ;;      Locals:         0       0       0       0       0
  2419 ;;      Temps:          1       0       0       0       0
  2420 ;;      Totals:         3       0       0       0       0
  2421 ;;Total ram usage:        3 bytes
  2422 ;; Hardware stack levels used: 1
  2423 ;; Hardware stack levels required when called: 1
  2424 ;; This function calls:
  2425 ;;		Nothing
  2426 ;; This function is called by:
  2427 ;;		_SendBuff
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431                           
  2432                           ;psect for function _uartReadByte
  2433  0694                     _uartReadByte:
  2434  0694                     l2079:	
  2435                           ;incstack = 0
  2436                           ; Regs used in _uartReadByte: [wregfsr0]
  2437                           
  2438                           
  2439                           ;uart.c: 98:    if ( RCIF ){
  2440  0694  1283               	bcf	3,5	;RP0=0, select bank0
  2441  0695  1303               	bcf	3,6	;RP1=0, select bank0
  2442  0696  1E8C               	btfss	12,5	;volatile
  2443  0697  2E99               	goto	u1161
  2444  0698  2E9A               	goto	u1160
  2445  0699                     u1161:
  2446  0699  2EA3               	goto	l300
  2447  069A                     u1160:
  2448  069A                     l2081:
  2449                           
  2450                           ;uart.c: 99:       *receivedByte = RCREG;
  2451  069A  081A               	movf	26,w	;volatile
  2452  069B  00F5               	movwf	??_uartReadByte
  2453  069C  0873               	movf	uartReadByte@receivedByte,w
  2454  069D  0084               	movwf	4
  2455  069E  1783               	bsf	3,7
  2456  069F  1C74               	btfss	uartReadByte@receivedByte+1,0
  2457  06A0  1383               	bcf	3,7
  2458  06A1  0875               	movf	??_uartReadByte,w
  2459  06A2  0080               	movwf	0
  2460  06A3                     l300:
  2461  06A3  0008               	return
  2462  06A4                     __end_of_uartReadByte:
  2463                           
  2464                           	psect	text7
  2465  0606                     __ptext7:	
  2466 ;; *************** function _MFRC522_ReadCardSerial *****************
  2467 ;; Defined at:
  2468 ;;		line 299 in file "mfrc522.c"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;  str             1    wreg     PTR unsigned char 
  2471 ;;		 -> UID(8), 
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;  str             1   40[BANK0 ] PTR unsigned char 
  2474 ;;		 -> UID(8), 
  2475 ;;  _status         1   39[BANK0 ] unsigned char 
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      unsigned char 
  2478 ;; Registers used:
  2479 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2485 ;;      Params:         0       0       0       0       0
  2486 ;;      Locals:         0       2       0       0       0
  2487 ;;      Temps:          0       1       0       0       0
  2488 ;;      Totals:         0       3       0       0       0
  2489 ;;Total ram usage:        3 bytes
  2490 ;; Hardware stack levels used: 1
  2491 ;; Hardware stack levels required when called: 5
  2492 ;; This function calls:
  2493 ;;		_MFRC522_AntiColl
  2494 ;; This function is called by:
  2495 ;;		_main_RFID_Reader
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           
  2500                           ;psect for function _MFRC522_ReadCardSerial
  2501  0606                     _MFRC522_ReadCardSerial:
  2502                           
  2503                           ;incstack = 0
  2504                           ; Regs used in _MFRC522_ReadCardSerial: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2505                           ;MFRC522_ReadCardSerial@str stored from wreg
  2506  0606  1283               	bcf	3,5	;RP0=0, select bank0
  2507  0607  1303               	bcf	3,6	;RP1=0, select bank0
  2508  0608  00C8               	movwf	MFRC522_ReadCardSerial@str
  2509  0609                     l2895:
  2510                           
  2511                           ;mfrc522.c: 299: char MFRC522_ReadCardSerial(char *str);mfrc522.c: 300: {;mfrc522.c: 301
      +                          :     char _status;;mfrc522.c: 302:     _status = MFRC522_AntiColl(str);
  2512  0609  0848               	movf	MFRC522_ReadCardSerial@str,w
  2513  060A  120A  118A  2377  120A  118A  	fcall	_MFRC522_AntiColl
  2514  060F  1283               	bcf	3,5	;RP0=0, select bank0
  2515  0610  1303               	bcf	3,6	;RP1=0, select bank0
  2516  0611  00C6               	movwf	??_MFRC522_ReadCardSerial
  2517  0612  0846               	movf	??_MFRC522_ReadCardSerial,w
  2518  0613  00C7               	movwf	MFRC522_ReadCardSerial@_status
  2519  0614                     l2897:
  2520                           
  2521                           ;mfrc522.c: 303:     str[4] = 0;
  2522  0614  0848               	movf	MFRC522_ReadCardSerial@str,w
  2523  0615  3E04               	addlw	4
  2524  0616  0084               	movwf	4
  2525  0617  1383               	bcf	3,7	;select IRP bank0
  2526  0618  0180               	clrf	0
  2527  0619                     l2899:
  2528                           
  2529                           ;mfrc522.c: 304:     if(_status == 0)
  2530  0619  0847               	movf	MFRC522_ReadCardSerial@_status,w
  2531  061A  1D03               	btfss	3,2
  2532  061B  2E1D               	goto	u1991
  2533  061C  2E1E               	goto	u1990
  2534  061D                     u1991:
  2535  061D  2E20               	goto	l2907
  2536  061E                     u1990:
  2537  061E                     l2901:
  2538                           
  2539                           ;mfrc522.c: 305:         return 1;
  2540  061E  3001               	movlw	1
  2541  061F  2E21               	goto	l479
  2542  0620                     l2907:
  2543                           
  2544                           ;mfrc522.c: 307:         return 0;
  2545  0620  3000               	movlw	0
  2546  0621                     l479:
  2547  0621  0008               	return
  2548  0622                     __end_of_MFRC522_ReadCardSerial:
  2549                           
  2550                           	psect	text8
  2551  0377                     __ptext8:	
  2552 ;; *************** function _MFRC522_AntiColl *****************
  2553 ;; Defined at:
  2554 ;;		line 266 in file "mfrc522.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;  serNum          1    wreg     PTR unsigned char 
  2557 ;;		 -> UID(8), 
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;  serNum          1   37[BANK0 ] PTR unsigned char 
  2560 ;;		 -> UID(8), 
  2561 ;;  unLen           2   33[BANK0 ] unsigned int 
  2562 ;;  i               1   36[BANK0 ] unsigned char 
  2563 ;;  _status         1   35[BANK0 ] unsigned char 
  2564 ;;  serNumCheck     1   32[BANK0 ] unsigned char 
  2565 ;; Return value:  Size  Location     Type
  2566 ;;                  1    wreg      unsigned char 
  2567 ;; Registers used:
  2568 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2569 ;; Tracked objects:
  2570 ;;		On entry : 0/0
  2571 ;;		On exit  : 0/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2574 ;;      Params:         0       0       0       0       0
  2575 ;;      Locals:         0       6       0       0       0
  2576 ;;      Temps:          0       5       0       0       0
  2577 ;;      Totals:         0      11       0       0       0
  2578 ;;Total ram usage:       11 bytes
  2579 ;; Hardware stack levels used: 1
  2580 ;; Hardware stack levels required when called: 4
  2581 ;; This function calls:
  2582 ;;		_MFRC522_Clear_Bit
  2583 ;;		_MFRC522_ToCard
  2584 ;;		_MFRC522_Wr
  2585 ;; This function is called by:
  2586 ;;		_MFRC522_ReadCardSerial
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           
  2590                           
  2591                           ;psect for function _MFRC522_AntiColl
  2592  0377                     _MFRC522_AntiColl:
  2593                           
  2594                           ;incstack = 0
  2595                           ; Regs used in _MFRC522_AntiColl: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2596                           ;MFRC522_AntiColl@serNum stored from wreg
  2597  0377  1283               	bcf	3,5	;RP0=0, select bank0
  2598  0378  1303               	bcf	3,6	;RP1=0, select bank0
  2599  0379  00C5               	movwf	MFRC522_AntiColl@serNum
  2600  037A                     l2817:
  2601                           
  2602                           ;mfrc522.c: 266: char MFRC522_AntiColl(char *serNum);mfrc522.c: 267: {;mfrc522.c: 268:  
      +                             char _status;;mfrc522.c: 269:     char i;;mfrc522.c: 270:     char serNumCheck = 0;
  2603  037A  01C0               	clrf	MFRC522_AntiColl@serNumCheck
  2604  037B                     l2819:
  2605                           
  2606                           ;mfrc522.c: 271:     unsigned unLen;;mfrc522.c: 272:     MFRC522_Wr(0x0D, 0x00);
  2607  037B  01F3               	clrf	MFRC522_Wr@value
  2608  037C  300D               	movlw	13
  2609  037D  120A  118A  250F  120A  118A  	fcall	_MFRC522_Wr
  2610  0382                     l2821:
  2611                           
  2612                           ;mfrc522.c: 273:     serNum[0] = 0x93;
  2613  0382  3093               	movlw	147
  2614  0383  1283               	bcf	3,5	;RP0=0, select bank0
  2615  0384  1303               	bcf	3,6	;RP1=0, select bank0
  2616  0385  00BB               	movwf	??_MFRC522_AntiColl
  2617  0386  0845               	movf	MFRC522_AntiColl@serNum,w
  2618  0387  0084               	movwf	4
  2619  0388  083B               	movf	??_MFRC522_AntiColl,w
  2620  0389  1383               	bcf	3,7	;select IRP bank0
  2621  038A  0080               	movwf	0
  2622  038B                     l2823:
  2623                           
  2624                           ;mfrc522.c: 274:     serNum[1] = 0x20;
  2625  038B  3020               	movlw	32
  2626  038C  00BB               	movwf	??_MFRC522_AntiColl
  2627  038D  0A45               	incf	MFRC522_AntiColl@serNum,w
  2628  038E  0084               	movwf	4
  2629  038F  083B               	movf	??_MFRC522_AntiColl,w
  2630  0390  0080               	movwf	0
  2631  0391                     l2825:
  2632                           
  2633                           ;mfrc522.c: 275:     MFRC522_Clear_Bit(0x08, 0x08);
  2634  0391  3008               	movlw	8
  2635  0392  00BB               	movwf	??_MFRC522_AntiColl
  2636  0393  083B               	movf	??_MFRC522_AntiColl,w
  2637  0394  00F6               	movwf	MFRC522_Clear_Bit@mask
  2638  0395  3008               	movlw	8
  2639  0396  120A  118A  263C  120A  118A  	fcall	_MFRC522_Clear_Bit
  2640  039B                     l2827:
  2641                           
  2642                           ;mfrc522.c: 276:     _status = MFRC522_ToCard(0x0C, serNum, 2, serNum, &unLen);
  2643  039B  1283               	bcf	3,5	;RP0=0, select bank0
  2644  039C  1303               	bcf	3,6	;RP1=0, select bank0
  2645  039D  0845               	movf	MFRC522_AntiColl@serNum,w
  2646  039E  00BB               	movwf	??_MFRC522_AntiColl
  2647  039F  083B               	movf	??_MFRC522_AntiColl,w
  2648  03A0  00A9               	movwf	MFRC522_ToCard@sendData
  2649  03A1  3002               	movlw	2
  2650  03A2  00BC               	movwf	??_MFRC522_AntiColl+1
  2651  03A3  083C               	movf	??_MFRC522_AntiColl+1,w
  2652  03A4  00AA               	movwf	MFRC522_ToCard@sendLen
  2653  03A5  0845               	movf	MFRC522_AntiColl@serNum,w
  2654  03A6  00BD               	movwf	??_MFRC522_AntiColl+2
  2655  03A7  083D               	movf	??_MFRC522_AntiColl+2,w
  2656  03A8  00AB               	movwf	MFRC522_ToCard@backData
  2657  03A9  3041               	movlw	(low (MFRC522_AntiColl@unLen| 0))& (0+255)
  2658  03AA  00BE               	movwf	??_MFRC522_AntiColl+3
  2659  03AB  083E               	movf	??_MFRC522_AntiColl+3,w
  2660  03AC  00AC               	movwf	MFRC522_ToCard@backLen
  2661  03AD  300C               	movlw	12
  2662  03AE  120A  118A  2033  120A  118A  	fcall	_MFRC522_ToCard
  2663  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  2664  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  2665  03B5  00BF               	movwf	??_MFRC522_AntiColl+4
  2666  03B6  083F               	movf	??_MFRC522_AntiColl+4,w
  2667  03B7  00C3               	movwf	MFRC522_AntiColl@_status
  2668  03B8                     l2829:
  2669                           
  2670                           ;mfrc522.c: 277:     if(_status == 0)
  2671  03B8  0843               	movf	MFRC522_AntiColl@_status,w
  2672  03B9  1D03               	btfss	3,2
  2673  03BA  2BBC               	goto	u1871
  2674  03BB  2BBD               	goto	u1870
  2675  03BC                     u1871:
  2676  03BC  2BDF               	goto	l466
  2677  03BD                     u1870:
  2678  03BD                     l2831:
  2679                           
  2680                           ;mfrc522.c: 278:     {;mfrc522.c: 279:         for(i=0; i<4; i++)
  2681  03BD  01C4               	clrf	MFRC522_AntiColl@i
  2682  03BE                     l2837:
  2683                           
  2684                           ;mfrc522.c: 280:         {;mfrc522.c: 281:             serNumCheck ^= serNum[i];
  2685  03BE  0844               	movf	MFRC522_AntiColl@i,w
  2686  03BF  0745               	addwf	MFRC522_AntiColl@serNum,w
  2687  03C0  00BB               	movwf	??_MFRC522_AntiColl
  2688  03C1  083B               	movf	??_MFRC522_AntiColl,w
  2689  03C2  0084               	movwf	4
  2690  03C3  1383               	bcf	3,7	;select IRP bank0
  2691  03C4  0800               	movf	0,w
  2692  03C5  00BC               	movwf	??_MFRC522_AntiColl+1
  2693  03C6  083C               	movf	??_MFRC522_AntiColl+1,w
  2694  03C7  06C0               	xorwf	MFRC522_AntiColl@serNumCheck,f
  2695  03C8                     l2839:
  2696                           
  2697                           ;mfrc522.c: 282:         }
  2698  03C8  3001               	movlw	1
  2699  03C9  00BB               	movwf	??_MFRC522_AntiColl
  2700  03CA  083B               	movf	??_MFRC522_AntiColl,w
  2701  03CB  07C4               	addwf	MFRC522_AntiColl@i,f
  2702  03CC                     l2841:
  2703  03CC  3004               	movlw	4
  2704  03CD  0244               	subwf	MFRC522_AntiColl@i,w
  2705  03CE  1C03               	skipc
  2706  03CF  2BD1               	goto	u1881
  2707  03D0  2BD2               	goto	u1880
  2708  03D1                     u1881:
  2709  03D1  2BBE               	goto	l2837
  2710  03D2                     u1880:
  2711  03D2                     l2843:
  2712                           
  2713                           ;mfrc522.c: 283:         if(serNumCheck != serNum[4])
  2714  03D2  0845               	movf	MFRC522_AntiColl@serNum,w
  2715  03D3  3E04               	addlw	4
  2716  03D4  0084               	movwf	4
  2717  03D5  0800               	movf	0,w
  2718  03D6  0640               	xorwf	MFRC522_AntiColl@serNumCheck,w
  2719  03D7  1903               	skipnz
  2720  03D8  2BDA               	goto	u1891
  2721  03D9  2BDB               	goto	u1890
  2722  03DA                     u1891:
  2723  03DA  2BDF               	goto	l466
  2724  03DB                     u1890:
  2725  03DB                     l2845:
  2726                           
  2727                           ;mfrc522.c: 284:         {;mfrc522.c: 285:             _status = 2;
  2728  03DB  3002               	movlw	2
  2729  03DC  00BB               	movwf	??_MFRC522_AntiColl
  2730  03DD  083B               	movf	??_MFRC522_AntiColl,w
  2731  03DE  00C3               	movwf	MFRC522_AntiColl@_status
  2732  03DF                     l466:	
  2733                           ;mfrc522.c: 287:     }
  2734                           
  2735                           
  2736                           ;mfrc522.c: 288:     return _status;
  2737  03DF  0843               	movf	MFRC522_AntiColl@_status,w
  2738  03E0                     l470:
  2739  03E0  0008               	return
  2740  03E1                     __end_of_MFRC522_AntiColl:
  2741                           
  2742                           	psect	text9
  2743  0656                     __ptext9:	
  2744 ;; *************** function _MFRC522_IsCard *****************
  2745 ;; Defined at:
  2746 ;;		line 291 in file "mfrc522.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;  TagType         1    wreg     PTR unsigned char 
  2749 ;;		 -> TagType(1), 
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;  TagType         1   37[BANK0 ] PTR unsigned char 
  2752 ;;		 -> TagType(1), 
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  1    wreg      unsigned char 
  2755 ;; Registers used:
  2756 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2762 ;;      Params:         0       0       0       0       0
  2763 ;;      Locals:         0       1       0       0       0
  2764 ;;      Temps:          0       1       0       0       0
  2765 ;;      Totals:         0       2       0       0       0
  2766 ;;Total ram usage:        2 bytes
  2767 ;; Hardware stack levels used: 1
  2768 ;; Hardware stack levels required when called: 5
  2769 ;; This function calls:
  2770 ;;		_MFRC522_Request
  2771 ;; This function is called by:
  2772 ;;		_main_RFID_Reader
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776                           
  2777                           ;psect for function _MFRC522_IsCard
  2778  0656                     _MFRC522_IsCard:
  2779                           
  2780                           ;incstack = 0
  2781                           ; Regs used in _MFRC522_IsCard: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2782                           ;MFRC522_IsCard@TagType stored from wreg
  2783  0656  1283               	bcf	3,5	;RP0=0, select bank0
  2784  0657  1303               	bcf	3,6	;RP1=0, select bank0
  2785  0658  00C5               	movwf	MFRC522_IsCard@TagType
  2786  0659                     l2883:
  2787                           
  2788                           ;mfrc522.c: 291: char MFRC522_IsCard(char *TagType);mfrc522.c: 292: {;mfrc522.c: 293:   
      +                            if(MFRC522_Request(0x26, TagType) == 0)
  2789  0659  0845               	movf	MFRC522_IsCard@TagType,w
  2790  065A  00C4               	movwf	??_MFRC522_IsCard
  2791  065B  0844               	movf	??_MFRC522_IsCard,w
  2792  065C  00BB               	movwf	MFRC522_Request@TagType
  2793  065D  3026               	movlw	38
  2794  065E  120A  118A  24CE  120A  118A  	fcall	_MFRC522_Request
  2795  0663  3A00               	xorlw	0
  2796  0664  1D03               	skipz
  2797  0665  2E67               	goto	u1981
  2798  0666  2E68               	goto	u1980
  2799  0667                     u1981:
  2800  0667  2E6A               	goto	l2891
  2801  0668                     u1980:
  2802  0668                     l2885:
  2803                           
  2804                           ;mfrc522.c: 294:         return 1;
  2805  0668  3001               	movlw	1
  2806  0669  2E6B               	goto	l474
  2807  066A                     l2891:
  2808                           
  2809                           ;mfrc522.c: 296:         return 0;
  2810  066A  3000               	movlw	0
  2811  066B                     l474:
  2812  066B  0008               	return
  2813  066C                     __end_of_MFRC522_IsCard:
  2814                           
  2815                           	psect	text10
  2816  04CE                     __ptext10:	
  2817 ;; *************** function _MFRC522_Request *****************
  2818 ;; Defined at:
  2819 ;;		line 192 in file "mfrc522.c"
  2820 ;; Parameters:    Size  Location     Type
  2821 ;;  reqMode         1    wreg     unsigned char 
  2822 ;;  TagType         1   27[BANK0 ] PTR unsigned char 
  2823 ;;		 -> TagType(1), 
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;  reqMode         1   32[BANK0 ] unsigned char 
  2826 ;;  backBits        2   34[BANK0 ] unsigned int 
  2827 ;;  _status         1   33[BANK0 ] unsigned char 
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  1    wreg      unsigned char 
  2830 ;; Registers used:
  2831 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2837 ;;      Params:         0       1       0       0       0
  2838 ;;      Locals:         0       4       0       0       0
  2839 ;;      Temps:          0       4       0       0       0
  2840 ;;      Totals:         0       9       0       0       0
  2841 ;;Total ram usage:        9 bytes
  2842 ;; Hardware stack levels used: 1
  2843 ;; Hardware stack levels required when called: 4
  2844 ;; This function calls:
  2845 ;;		_MFRC522_ToCard
  2846 ;;		_MFRC522_Wr
  2847 ;; This function is called by:
  2848 ;;		_MFRC522_IsCard
  2849 ;; This function uses a non-reentrant model
  2850 ;;
  2851                           
  2852                           
  2853                           ;psect for function _MFRC522_Request
  2854  04CE                     _MFRC522_Request:
  2855                           
  2856                           ;incstack = 0
  2857                           ; Regs used in _MFRC522_Request: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2858                           ;MFRC522_Request@reqMode stored from wreg
  2859  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  2860  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  2861  04D0  00C0               	movwf	MFRC522_Request@reqMode
  2862  04D1                     l2777:
  2863                           
  2864                           ;mfrc522.c: 192: char MFRC522_Request(char reqMode, char *TagType);mfrc522.c: 193: {;mfr
      +                          c522.c: 194:     char _status;;mfrc522.c: 195:     unsigned backBits;;mfrc522.c: 196:   
      +                            MFRC522_Wr(0x0D, 0x07);
  2865  04D1  3007               	movlw	7
  2866  04D2  00BC               	movwf	??_MFRC522_Request
  2867  04D3  083C               	movf	??_MFRC522_Request,w
  2868  04D4  00F3               	movwf	MFRC522_Wr@value
  2869  04D5  300D               	movlw	13
  2870  04D6  120A  118A  250F  120A  118A  	fcall	_MFRC522_Wr
  2871  04DB                     l2779:
  2872                           
  2873                           ;mfrc522.c: 197:     TagType[0] = reqMode;
  2874  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  2875  04DC  1303               	bcf	3,6	;RP1=0, select bank0
  2876  04DD  0840               	movf	MFRC522_Request@reqMode,w
  2877  04DE  00BC               	movwf	??_MFRC522_Request
  2878  04DF  083B               	movf	MFRC522_Request@TagType,w
  2879  04E0  0084               	movwf	4
  2880  04E1  083C               	movf	??_MFRC522_Request,w
  2881  04E2  1383               	bcf	3,7	;select IRP bank0
  2882  04E3  0080               	movwf	0
  2883  04E4                     l2781:
  2884                           
  2885                           ;mfrc522.c: 198:     _status = MFRC522_ToCard(0x0C, TagType, 1, TagType, &backBits);
  2886  04E4  083B               	movf	MFRC522_Request@TagType,w
  2887  04E5  00BC               	movwf	??_MFRC522_Request
  2888  04E6  083C               	movf	??_MFRC522_Request,w
  2889  04E7  00A9               	movwf	MFRC522_ToCard@sendData
  2890  04E8  01AA               	clrf	MFRC522_ToCard@sendLen
  2891  04E9  0AAA               	incf	MFRC522_ToCard@sendLen,f
  2892  04EA  083B               	movf	MFRC522_Request@TagType,w
  2893  04EB  00BD               	movwf	??_MFRC522_Request+1
  2894  04EC  083D               	movf	??_MFRC522_Request+1,w
  2895  04ED  00AB               	movwf	MFRC522_ToCard@backData
  2896  04EE  3042               	movlw	(low (MFRC522_Request@backBits| 0))& (0+255)
  2897  04EF  00BE               	movwf	??_MFRC522_Request+2
  2898  04F0  083E               	movf	??_MFRC522_Request+2,w
  2899  04F1  00AC               	movwf	MFRC522_ToCard@backLen
  2900  04F2  300C               	movlw	12
  2901  04F3  120A  118A  2033  120A  118A  	fcall	_MFRC522_ToCard
  2902  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  2903  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  2904  04FA  00BF               	movwf	??_MFRC522_Request+3
  2905  04FB  083F               	movf	??_MFRC522_Request+3,w
  2906  04FC  00C1               	movwf	MFRC522_Request@_status
  2907  04FD                     l2783:
  2908                           
  2909                           ;mfrc522.c: 199:     if((_status != 0) || (backBits != 0x10))
  2910  04FD  0841               	movf	MFRC522_Request@_status,w
  2911  04FE  1D03               	btfss	3,2
  2912  04FF  2D01               	goto	u1821
  2913  0500  2D02               	goto	u1820
  2914  0501                     u1821:
  2915  0501  2D09               	goto	l2787
  2916  0502                     u1820:
  2917  0502                     l2785:
  2918  0502  3010               	movlw	16
  2919  0503  0642               	xorwf	MFRC522_Request@backBits,w
  2920  0504  0443               	iorwf	MFRC522_Request@backBits+1,w
  2921  0505  1903               	btfsc	3,2
  2922  0506  2D08               	goto	u1831
  2923  0507  2D09               	goto	u1830
  2924  0508                     u1831:
  2925  0508  2D0D               	goto	l440
  2926  0509                     u1830:
  2927  0509                     l2787:
  2928                           
  2929                           ;mfrc522.c: 200:     {;mfrc522.c: 201:         _status = 2;
  2930  0509  3002               	movlw	2
  2931  050A  00BC               	movwf	??_MFRC522_Request
  2932  050B  083C               	movf	??_MFRC522_Request,w
  2933  050C  00C1               	movwf	MFRC522_Request@_status
  2934  050D                     l440:	
  2935                           ;mfrc522.c: 202:     }
  2936                           
  2937                           
  2938                           ;mfrc522.c: 203:     return _status;
  2939  050D  0841               	movf	MFRC522_Request@_status,w
  2940  050E                     l443:
  2941  050E  0008               	return
  2942  050F                     __end_of_MFRC522_Request:
  2943                           
  2944                           	psect	text11
  2945  0488                     __ptext11:	
  2946 ;; *************** function _MFRC522_Halt *****************
  2947 ;; Defined at:
  2948 ;;		line 254 in file "mfrc522.c"
  2949 ;; Parameters:    Size  Location     Type
  2950 ;;		None
  2951 ;; Auto vars:     Size  Location     Type
  2952 ;;  buff            4   31[BANK0 ] unsigned char [4]
  2953 ;;  unLen           2   35[BANK0 ] unsigned int 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  1    wreg      void 
  2956 ;; Registers used:
  2957 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2963 ;;      Params:         0       0       0       0       0
  2964 ;;      Locals:         0       6       0       0       0
  2965 ;;      Temps:          0       4       0       0       0
  2966 ;;      Totals:         0      10       0       0       0
  2967 ;;Total ram usage:       10 bytes
  2968 ;; Hardware stack levels used: 1
  2969 ;; Hardware stack levels required when called: 4
  2970 ;; This function calls:
  2971 ;;		_MFRC522_CRC
  2972 ;;		_MFRC522_Clear_Bit
  2973 ;;		_MFRC522_ToCard
  2974 ;; This function is called by:
  2975 ;;		_main_RFID_Reader
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979                           
  2980                           ;psect for function _MFRC522_Halt
  2981  0488                     _MFRC522_Halt:
  2982  0488                     l2963:	
  2983                           ;incstack = 0
  2984                           ; Regs used in _MFRC522_Halt: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2985                           
  2986                           
  2987                           ;mfrc522.c: 256:     unsigned unLen;;mfrc522.c: 257:     char buff[4];;mfrc522.c: 258:  
      +                             buff[0] = 0x50;
  2988  0488  3050               	movlw	80
  2989  0489  1283               	bcf	3,5	;RP0=0, select bank0
  2990  048A  1303               	bcf	3,6	;RP1=0, select bank0
  2991  048B  00BB               	movwf	??_MFRC522_Halt
  2992  048C  083B               	movf	??_MFRC522_Halt,w
  2993  048D  00BF               	movwf	MFRC522_Halt@buff
  2994  048E                     l2965:
  2995                           
  2996                           ;mfrc522.c: 259:     buff[1] = 0;
  2997  048E  01C0               	clrf	MFRC522_Halt@buff+1
  2998  048F                     l2967:
  2999                           
  3000                           ;mfrc522.c: 260:     MFRC522_CRC(buff, 2, &buff[2]);
  3001  048F  3002               	movlw	2
  3002  0490  00BB               	movwf	??_MFRC522_Halt
  3003  0491  083B               	movf	??_MFRC522_Halt,w
  3004  0492  00A9               	movwf	MFRC522_CRC@length
  3005  0493  3041               	movlw	(low ((MFRC522_Halt@buff| 0+2)))& (0+255)
  3006  0494  00BC               	movwf	??_MFRC522_Halt+1
  3007  0495  083C               	movf	??_MFRC522_Halt+1,w
  3008  0496  00AA               	movwf	MFRC522_CRC@dataOut
  3009  0497  303F               	movlw	(low (MFRC522_Halt@buff| 0))& (0+255)
  3010  0498  120A  118A  2288  120A  118A  	fcall	_MFRC522_CRC
  3011  049D                     l2969:
  3012                           
  3013                           ;mfrc522.c: 261:     MFRC522_Clear_Bit(0x08, 0x80);
  3014  049D  3080               	movlw	128
  3015  049E  1283               	bcf	3,5	;RP0=0, select bank0
  3016  049F  1303               	bcf	3,6	;RP1=0, select bank0
  3017  04A0  00BB               	movwf	??_MFRC522_Halt
  3018  04A1  083B               	movf	??_MFRC522_Halt,w
  3019  04A2  00F6               	movwf	MFRC522_Clear_Bit@mask
  3020  04A3  3008               	movlw	8
  3021  04A4  120A  118A  263C  120A  118A  	fcall	_MFRC522_Clear_Bit
  3022  04A9                     l2971:
  3023                           
  3024                           ;mfrc522.c: 262:     MFRC522_ToCard(0x0C, buff, 4, buff, &unLen);
  3025  04A9  303F               	movlw	(low (MFRC522_Halt@buff| 0))& (0+255)
  3026  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  3027  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  3028  04AC  00BB               	movwf	??_MFRC522_Halt
  3029  04AD  083B               	movf	??_MFRC522_Halt,w
  3030  04AE  00A9               	movwf	MFRC522_ToCard@sendData
  3031  04AF  3004               	movlw	4
  3032  04B0  00BC               	movwf	??_MFRC522_Halt+1
  3033  04B1  083C               	movf	??_MFRC522_Halt+1,w
  3034  04B2  00AA               	movwf	MFRC522_ToCard@sendLen
  3035  04B3  303F               	movlw	(low (MFRC522_Halt@buff| 0))& (0+255)
  3036  04B4  00BD               	movwf	??_MFRC522_Halt+2
  3037  04B5  083D               	movf	??_MFRC522_Halt+2,w
  3038  04B6  00AB               	movwf	MFRC522_ToCard@backData
  3039  04B7  3043               	movlw	(low (MFRC522_Halt@unLen| 0))& (0+255)
  3040  04B8  00BE               	movwf	??_MFRC522_Halt+3
  3041  04B9  083E               	movf	??_MFRC522_Halt+3,w
  3042  04BA  00AC               	movwf	MFRC522_ToCard@backLen
  3043  04BB  300C               	movlw	12
  3044  04BC  120A  118A  2033  120A  118A  	fcall	_MFRC522_ToCard
  3045  04C1                     l2973:
  3046                           
  3047                           ;mfrc522.c: 263:     MFRC522_Clear_Bit(0x08, 0x08);
  3048  04C1  3008               	movlw	8
  3049  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  3050  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  3051  04C4  00BB               	movwf	??_MFRC522_Halt
  3052  04C5  083B               	movf	??_MFRC522_Halt,w
  3053  04C6  00F6               	movwf	MFRC522_Clear_Bit@mask
  3054  04C7  3008               	movlw	8
  3055  04C8  120A  118A  263C  120A  118A  	fcall	_MFRC522_Clear_Bit
  3056  04CD                     l463:
  3057  04CD  0008               	return
  3058  04CE                     __end_of_MFRC522_Halt:
  3059                           
  3060                           	psect	text12
  3061  0033                     __ptext12:	
  3062 ;; *************** function _MFRC522_ToCard *****************
  3063 ;; Defined at:
  3064 ;;		line 102 in file "mfrc522.c"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;  command         1    wreg     unsigned char 
  3067 ;;  sendData        1    9[BANK0 ] PTR unsigned char 
  3068 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), UID(8), TagType(1), 
  3069 ;;  sendLen         1   10[BANK0 ] unsigned char 
  3070 ;;  backData        1   11[BANK0 ] PTR unsigned char 
  3071 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), UID(8), TagType(1), 
  3072 ;;  backLen         1   12[BANK0 ] PTR unsigned int 
  3073 ;;		 -> MFRC522_AntiColl@unLen(2), MFRC522_Halt@unLen(2), MFRC522_SelectTag@recvBits(2), MFRC522_Request@backBits(2), 
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;  command         1   23[BANK0 ] unsigned char 
  3076 ;;  i               2   24[BANK0 ] unsigned int 
  3077 ;;  n               1   26[BANK0 ] unsigned char 
  3078 ;;  irqEn           1   22[BANK0 ] unsigned char 
  3079 ;;  lastBits        1   21[BANK0 ] unsigned char 
  3080 ;;  _status         1   20[BANK0 ] unsigned char 
  3081 ;;  waitIRq         1   19[BANK0 ] unsigned char 
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  1    wreg      unsigned char 
  3084 ;; Registers used:
  3085 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3091 ;;      Params:         0       4       0       0       0
  3092 ;;      Locals:         0       8       0       0       0
  3093 ;;      Temps:          0       6       0       0       0
  3094 ;;      Totals:         0      18       0       0       0
  3095 ;;Total ram usage:       18 bytes
  3096 ;; Hardware stack levels used: 1
  3097 ;; Hardware stack levels required when called: 3
  3098 ;; This function calls:
  3099 ;;		_MFRC522_Clear_Bit
  3100 ;;		_MFRC522_Rd
  3101 ;;		_MFRC522_Set_Bit
  3102 ;;		_MFRC522_Wr
  3103 ;; This function is called by:
  3104 ;;		_MFRC522_Request
  3105 ;;		_MFRC522_Halt
  3106 ;;		_MFRC522_AntiColl
  3107 ;;		_MFRC522_SelectTag
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           
  3111                           
  3112                           ;psect for function _MFRC522_ToCard
  3113  0033                     _MFRC522_ToCard:
  3114                           
  3115                           ;incstack = 0
  3116                           ; Regs used in _MFRC522_ToCard: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3117                           ;MFRC522_ToCard@command stored from wreg
  3118  0033  1283               	bcf	3,5	;RP0=0, select bank0
  3119  0034  1303               	bcf	3,6	;RP1=0, select bank0
  3120  0035  00B7               	movwf	MFRC522_ToCard@command
  3121  0036                     l2689:
  3122                           
  3123                           ;mfrc522.c: 102: char MFRC522_ToCard(char command, char *sendData, char sendLen, char *b
      +                          ackData, unsigned *backLen);mfrc522.c: 103: {;mfrc522.c: 104:     char _status = 2;
  3124  0036  3002               	movlw	2
  3125  0037  00AD               	movwf	??_MFRC522_ToCard
  3126  0038  082D               	movf	??_MFRC522_ToCard,w
  3127  0039  00B4               	movwf	MFRC522_ToCard@_status
  3128  003A                     l2691:
  3129                           
  3130                           ;mfrc522.c: 105:     char irqEn = 0x00;
  3131  003A  01B6               	clrf	MFRC522_ToCard@irqEn
  3132  003B                     l2693:
  3133                           
  3134                           ;mfrc522.c: 106:     char waitIRq = 0x00;
  3135  003B  01B3               	clrf	MFRC522_ToCard@waitIRq
  3136                           
  3137                           ;mfrc522.c: 107:     char lastBits;;mfrc522.c: 108:     char n;;mfrc522.c: 109:     unsi
      +                          gned i;;mfrc522.c: 111:     switch(command)
  3138  003C  284F               	goto	l2701
  3139  003D                     l2695:
  3140                           
  3141                           ;mfrc522.c: 114:             irqEn = 0x12;
  3142  003D  3012               	movlw	18
  3143  003E  00AD               	movwf	??_MFRC522_ToCard
  3144  003F  082D               	movf	??_MFRC522_ToCard,w
  3145  0040  00B6               	movwf	MFRC522_ToCard@irqEn
  3146                           
  3147                           ;mfrc522.c: 115:             waitIRq = 0x10;
  3148  0041  3010               	movlw	16
  3149  0042  00AD               	movwf	??_MFRC522_ToCard
  3150  0043  082D               	movf	??_MFRC522_ToCard,w
  3151  0044  00B3               	movwf	MFRC522_ToCard@waitIRq
  3152                           
  3153                           ;mfrc522.c: 116:             break;
  3154  0045  285F               	goto	l2703
  3155  0046                     l2697:
  3156                           
  3157                           ;mfrc522.c: 119:             irqEn = 0x77;
  3158  0046  3077               	movlw	119
  3159  0047  00AD               	movwf	??_MFRC522_ToCard
  3160  0048  082D               	movf	??_MFRC522_ToCard,w
  3161  0049  00B6               	movwf	MFRC522_ToCard@irqEn
  3162                           
  3163                           ;mfrc522.c: 120:             waitIRq = 0x30;
  3164  004A  3030               	movlw	48
  3165  004B  00AD               	movwf	??_MFRC522_ToCard
  3166  004C  082D               	movf	??_MFRC522_ToCard,w
  3167  004D  00B3               	movwf	MFRC522_ToCard@waitIRq
  3168                           
  3169                           ;mfrc522.c: 121:             break;
  3170  004E  285F               	goto	l2703
  3171  004F                     l2701:
  3172  004F  0837               	movf	MFRC522_ToCard@command,w
  3173  0050  00AD               	movwf	??_MFRC522_ToCard
  3174  0051  01AE               	clrf	??_MFRC522_ToCard+1
  3175                           
  3176                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3177                           ; Switch size 1, requested type "simple"
  3178                           ; Number of cases is 1, Range of values is 0 to 0
  3179                           ; switch strategies available:
  3180                           ; Name         Instructions Cycles
  3181                           ; simple_byte            4     3 (average)
  3182                           ; direct_byte           11     8 (fixed)
  3183                           ; jumptable            260     6 (fixed)
  3184                           ;	Chosen strategy is simple_byte
  3185  0052  082E               	movf	??_MFRC522_ToCard+1,w
  3186  0053  3A00               	xorlw	0	; case 0
  3187  0054  1903               	skipnz
  3188  0055  2857               	goto	l3109
  3189  0056  285F               	goto	l2703
  3190  0057                     l3109:
  3191                           
  3192                           ; Switch size 1, requested type "simple"
  3193                           ; Number of cases is 2, Range of values is 12 to 14
  3194                           ; switch strategies available:
  3195                           ; Name         Instructions Cycles
  3196                           ; simple_byte            7     4 (average)
  3197                           ; direct_byte           20    11 (fixed)
  3198                           ; jumptable            263     9 (fixed)
  3199                           ;	Chosen strategy is simple_byte
  3200  0057  082D               	movf	??_MFRC522_ToCard,w
  3201  0058  3A0C               	xorlw	12	; case 12
  3202  0059  1903               	skipnz
  3203  005A  2846               	goto	l2697
  3204  005B  3A02               	xorlw	2	; case 14
  3205  005C  1903               	skipnz
  3206  005D  283D               	goto	l2695
  3207  005E  285F               	goto	l2703
  3208  005F                     l2703:
  3209                           
  3210                           ;mfrc522.c: 126:     MFRC522_Wr(0x02, irqEn | 0x80);
  3211  005F  0836               	movf	MFRC522_ToCard@irqEn,w
  3212  0060  3880               	iorlw	128
  3213  0061  00AD               	movwf	??_MFRC522_ToCard
  3214  0062  082D               	movf	??_MFRC522_ToCard,w
  3215  0063  00F3               	movwf	MFRC522_Wr@value
  3216  0064  3002               	movlw	2
  3217  0065  120A  118A  250F  120A  118A  	fcall	_MFRC522_Wr
  3218                           
  3219                           ;mfrc522.c: 127:     MFRC522_Clear_Bit(0x04, 0x80);
  3220  006A  3080               	movlw	128
  3221  006B  1283               	bcf	3,5	;RP0=0, select bank0
  3222  006C  1303               	bcf	3,6	;RP1=0, select bank0
  3223  006D  00AD               	movwf	??_MFRC522_ToCard
  3224  006E  082D               	movf	??_MFRC522_ToCard,w
  3225  006F  00F6               	movwf	MFRC522_Clear_Bit@mask
  3226  0070  3004               	movlw	4
  3227  0071  120A  118A  263C  120A  118A  	fcall	_MFRC522_Clear_Bit
  3228                           
  3229                           ;mfrc522.c: 128:     MFRC522_Set_Bit(0x0A, 0x80);
  3230  0076  3080               	movlw	128
  3231  0077  1283               	bcf	3,5	;RP0=0, select bank0
  3232  0078  1303               	bcf	3,6	;RP1=0, select bank0
  3233  0079  00AD               	movwf	??_MFRC522_ToCard
  3234  007A  082D               	movf	??_MFRC522_ToCard,w
  3235  007B  00F6               	movwf	MFRC522_Set_Bit@mask
  3236  007C  300A               	movlw	10
  3237  007D  120A  118A  2622  120A  118A  	fcall	_MFRC522_Set_Bit
  3238                           
  3239                           ;mfrc522.c: 129:     MFRC522_Wr(0x01, 0x00);
  3240  0082  01F3               	clrf	MFRC522_Wr@value
  3241  0083  3001               	movlw	1
  3242  0084  120A  118A  250F  120A  118A  	fcall	_MFRC522_Wr
  3243  0089                     l2705:
  3244                           
  3245                           ;mfrc522.c: 131:     for(i=0; i<sendLen; i++)
  3246  0089  1283               	bcf	3,5	;RP0=0, select bank0
  3247  008A  1303               	bcf	3,6	;RP1=0, select bank0
  3248  008B  01B8               	clrf	MFRC522_ToCard@i
  3249  008C  01B9               	clrf	MFRC522_ToCard@i+1
  3250  008D  28A6               	goto	l2711
  3251  008E                     l2707:
  3252                           
  3253                           ;mfrc522.c: 132:     {;mfrc522.c: 133:         MFRC522_Wr(0x09, sendData[i]);
  3254  008E  0838               	movf	MFRC522_ToCard@i,w
  3255  008F  0729               	addwf	MFRC522_ToCard@sendData,w
  3256  0090  00AD               	movwf	??_MFRC522_ToCard
  3257  0091  082D               	movf	??_MFRC522_ToCard,w
  3258  0092  0084               	movwf	4
  3259  0093  1383               	bcf	3,7	;select IRP bank0
  3260  0094  0800               	movf	0,w
  3261  0095  00AE               	movwf	??_MFRC522_ToCard+1
  3262  0096  082E               	movf	??_MFRC522_ToCard+1,w
  3263  0097  00F3               	movwf	MFRC522_Wr@value
  3264  0098  3009               	movlw	9
  3265  0099  120A  118A  250F  120A  118A  	fcall	_MFRC522_Wr
  3266  009E                     l2709:
  3267                           
  3268                           ;mfrc522.c: 134:     }
  3269  009E  3001               	movlw	1
  3270  009F  1283               	bcf	3,5	;RP0=0, select bank0
  3271  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  3272  00A1  07B8               	addwf	MFRC522_ToCard@i,f
  3273  00A2  1803               	skipnc
  3274  00A3  0AB9               	incf	MFRC522_ToCard@i+1,f
  3275  00A4  3000               	movlw	0
  3276  00A5  07B9               	addwf	MFRC522_ToCard@i+1,f
  3277  00A6                     l2711:
  3278  00A6  082A               	movf	MFRC522_ToCard@sendLen,w
  3279  00A7  00AD               	movwf	??_MFRC522_ToCard
  3280  00A8  01AE               	clrf	??_MFRC522_ToCard+1
  3281  00A9  082E               	movf	??_MFRC522_ToCard+1,w
  3282  00AA  0239               	subwf	MFRC522_ToCard@i+1,w
  3283  00AB  1D03               	skipz
  3284  00AC  28AF               	goto	u1695
  3285  00AD  082D               	movf	??_MFRC522_ToCard,w
  3286  00AE  0238               	subwf	MFRC522_ToCard@i,w
  3287  00AF                     u1695:
  3288  00AF  1C03               	skipc
  3289  00B0  28B2               	goto	u1691
  3290  00B1  28B3               	goto	u1690
  3291  00B2                     u1691:
  3292  00B2  288E               	goto	l2707
  3293  00B3                     u1690:
  3294  00B3                     l2713:
  3295                           
  3296                           ;mfrc522.c: 135:     MFRC522_Wr(0x01, command);
  3297  00B3  0837               	movf	MFRC522_ToCard@command,w
  3298  00B4  00AD               	movwf	??_MFRC522_ToCard
  3299  00B5  082D               	movf	??_MFRC522_ToCard,w
  3300  00B6  00F3               	movwf	MFRC522_Wr@value
  3301  00B7  3001               	movlw	1
  3302  00B8  120A  118A  250F  120A  118A  	fcall	_MFRC522_Wr
  3303  00BD                     l2715:
  3304                           
  3305                           ;mfrc522.c: 136:     if(command == 0x0C)
  3306  00BD  300C               	movlw	12
  3307  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  3308  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  3309  00C0  0637               	xorwf	MFRC522_ToCard@command,w
  3310  00C1  1D03               	btfss	3,2
  3311  00C2  28C4               	goto	u1701
  3312  00C3  28C5               	goto	u1700
  3313  00C4                     u1701:
  3314  00C4  28CF               	goto	l2719
  3315  00C5                     u1700:
  3316  00C5                     l2717:
  3317                           
  3318                           ;mfrc522.c: 137:     {;mfrc522.c: 138:         MFRC522_Set_Bit(0x0D, 0x80);
  3319  00C5  3080               	movlw	128
  3320  00C6  00AD               	movwf	??_MFRC522_ToCard
  3321  00C7  082D               	movf	??_MFRC522_ToCard,w
  3322  00C8  00F6               	movwf	MFRC522_Set_Bit@mask
  3323  00C9  300D               	movlw	13
  3324  00CA  120A  118A  2622  120A  118A  	fcall	_MFRC522_Set_Bit
  3325  00CF                     l2719:
  3326                           
  3327                           ;mfrc522.c: 140:     i = 0xFFFF;
  3328  00CF  30FF               	movlw	255
  3329  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  3330  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  3331  00D2  00B8               	movwf	MFRC522_ToCard@i
  3332  00D3  30FF               	movlw	255
  3333  00D4  00B9               	movwf	MFRC522_ToCard@i+1
  3334  00D5                     l2721:
  3335                           
  3336                           ;mfrc522.c: 142:     {;mfrc522.c: 143:         n = MFRC522_Rd(0x04);
  3337  00D5  3004               	movlw	4
  3338  00D6  120A  118A  23E1  120A  118A  	fcall	_MFRC522_Rd
  3339  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  3340  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  3341  00DD  00AD               	movwf	??_MFRC522_ToCard
  3342  00DE  082D               	movf	??_MFRC522_ToCard,w
  3343  00DF  00BA               	movwf	MFRC522_ToCard@n
  3344                           
  3345                           ;mfrc522.c: 144:         i--;
  3346  00E0  3001               	movlw	1
  3347  00E1  02B8               	subwf	MFRC522_ToCard@i,f
  3348  00E2  3000               	movlw	0
  3349  00E3  1C03               	skipc
  3350  00E4  03B9               	decf	MFRC522_ToCard@i+1,f
  3351  00E5  02B9               	subwf	MFRC522_ToCard@i+1,f
  3352  00E6                     l2723:
  3353                           
  3354                           ;mfrc522.c: 145:     }while(i && !(n & 0x01) && !(n & waitIRq));
  3355  00E6  0838               	movf	MFRC522_ToCard@i,w
  3356  00E7  0439               	iorwf	MFRC522_ToCard@i+1,w
  3357  00E8  1903               	btfsc	3,2
  3358  00E9  28EB               	goto	u1711
  3359  00EA  28EC               	goto	u1710
  3360  00EB                     u1711:
  3361  00EB  28F6               	goto	l2729
  3362  00EC                     u1710:
  3363  00EC                     l2725:
  3364  00EC  183A               	btfsc	MFRC522_ToCard@n,0
  3365  00ED  28EF               	goto	u1721
  3366  00EE  28F0               	goto	u1720
  3367  00EF                     u1721:
  3368  00EF  28F6               	goto	l2729
  3369  00F0                     u1720:
  3370  00F0                     l2727:
  3371  00F0  083A               	movf	MFRC522_ToCard@n,w
  3372  00F1  0533               	andwf	MFRC522_ToCard@waitIRq,w
  3373  00F2  1903               	btfsc	3,2
  3374  00F3  28F5               	goto	u1731
  3375  00F4  28F6               	goto	u1730
  3376  00F5                     u1731:
  3377  00F5  28D5               	goto	l2721
  3378  00F6                     u1730:
  3379  00F6                     l2729:
  3380                           
  3381                           ;mfrc522.c: 147:     MFRC522_Clear_Bit(0x0D, 0x80);
  3382  00F6  3080               	movlw	128
  3383  00F7  00AD               	movwf	??_MFRC522_ToCard
  3384  00F8  082D               	movf	??_MFRC522_ToCard,w
  3385  00F9  00F6               	movwf	MFRC522_Clear_Bit@mask
  3386  00FA  300D               	movlw	13
  3387  00FB  120A  118A  263C  120A  118A  	fcall	_MFRC522_Clear_Bit
  3388  0100                     l2731:
  3389                           
  3390                           ;mfrc522.c: 148:     if(i != 0)
  3391  0100  1283               	bcf	3,5	;RP0=0, select bank0
  3392  0101  1303               	bcf	3,6	;RP1=0, select bank0
  3393  0102  0838               	movf	MFRC522_ToCard@i,w
  3394  0103  0439               	iorwf	MFRC522_ToCard@i+1,w
  3395  0104  1903               	btfsc	3,2
  3396  0105  2907               	goto	u1741
  3397  0106  2908               	goto	u1740
  3398  0107                     u1741:
  3399  0107  29BF               	goto	l425
  3400  0108                     u1740:
  3401  0108                     l2733:
  3402                           
  3403                           ;mfrc522.c: 149:     {;mfrc522.c: 150:         if(!(MFRC522_Rd(0x06) & 0x1B))
  3404  0108  3006               	movlw	6
  3405  0109  120A  118A  23E1  120A  118A  	fcall	_MFRC522_Rd
  3406  010E  391B               	andlw	27
  3407  010F  1D03               	btfss	3,2
  3408  0110  2912               	goto	u1751
  3409  0111  2913               	goto	u1750
  3410  0112                     u1751:
  3411  0112  29B9               	goto	l2769
  3412  0113                     u1750:
  3413  0113                     l2735:
  3414                           
  3415                           ;mfrc522.c: 151:         {;mfrc522.c: 152:             _status = 0;
  3416  0113  1283               	bcf	3,5	;RP0=0, select bank0
  3417  0114  1303               	bcf	3,6	;RP1=0, select bank0
  3418  0115  01B4               	clrf	MFRC522_ToCard@_status
  3419  0116                     l2737:
  3420                           
  3421                           ;mfrc522.c: 153:             if(n & irqEn & 0x01)
  3422  0116  0836               	movf	MFRC522_ToCard@irqEn,w
  3423  0117  053A               	andwf	MFRC522_ToCard@n,w
  3424  0118  00AD               	movwf	??_MFRC522_ToCard
  3425  0119  1C2D               	btfss	??_MFRC522_ToCard,0
  3426  011A  291C               	goto	u1761
  3427  011B  291D               	goto	u1760
  3428  011C                     u1761:
  3429  011C  291F               	goto	l2741
  3430  011D                     u1760:
  3431  011D                     l2739:
  3432                           
  3433                           ;mfrc522.c: 154:             {;mfrc522.c: 155:                 _status = 1;
  3434  011D  01B4               	clrf	MFRC522_ToCard@_status
  3435  011E  0AB4               	incf	MFRC522_ToCard@_status,f
  3436  011F                     l2741:
  3437                           
  3438                           ;mfrc522.c: 157:             if(command == 0x0C)
  3439  011F  300C               	movlw	12
  3440  0120  0637               	xorwf	MFRC522_ToCard@command,w
  3441  0121  1D03               	btfss	3,2
  3442  0122  2924               	goto	u1771
  3443  0123  2925               	goto	u1770
  3444  0124                     u1771:
  3445  0124  29BF               	goto	l425
  3446  0125                     u1770:
  3447  0125                     l2743:
  3448                           
  3449                           ;mfrc522.c: 158:             {;mfrc522.c: 159:                 n = MFRC522_Rd(0x0A);
  3450  0125  300A               	movlw	10
  3451  0126  120A  118A  23E1  120A  118A  	fcall	_MFRC522_Rd
  3452  012B  1283               	bcf	3,5	;RP0=0, select bank0
  3453  012C  1303               	bcf	3,6	;RP1=0, select bank0
  3454  012D  00AD               	movwf	??_MFRC522_ToCard
  3455  012E  082D               	movf	??_MFRC522_ToCard,w
  3456  012F  00BA               	movwf	MFRC522_ToCard@n
  3457                           
  3458                           ;mfrc522.c: 160:                 lastBits = MFRC522_Rd(0x0C) & 0x07;
  3459  0130  300C               	movlw	12
  3460  0131  120A  118A  23E1  120A  118A  	fcall	_MFRC522_Rd
  3461  0136  3907               	andlw	7
  3462  0137  1283               	bcf	3,5	;RP0=0, select bank0
  3463  0138  1303               	bcf	3,6	;RP1=0, select bank0
  3464  0139  00AD               	movwf	??_MFRC522_ToCard
  3465  013A  082D               	movf	??_MFRC522_ToCard,w
  3466  013B  00B5               	movwf	MFRC522_ToCard@lastBits
  3467  013C                     l2745:
  3468                           
  3469                           ;mfrc522.c: 161:                 if(lastBits)
  3470  013C  0835               	movf	MFRC522_ToCard@lastBits,w
  3471  013D  1903               	btfsc	3,2
  3472  013E  2940               	goto	u1781
  3473  013F  2941               	goto	u1780
  3474  0140                     u1781:
  3475  0140  2966               	goto	l2749
  3476  0141                     u1780:
  3477  0141                     l2747:
  3478                           
  3479                           ;mfrc522.c: 162:                 {;mfrc522.c: 163:                     *backLen = (n-1) 
      +                          * 8 + lastBits;
  3480  0141  083A               	movf	MFRC522_ToCard@n,w
  3481  0142  00AD               	movwf	??_MFRC522_ToCard
  3482  0143  01AE               	clrf	??_MFRC522_ToCard+1
  3483  0144  1003               	clrc
  3484  0145  0DAD               	rlf	??_MFRC522_ToCard,f
  3485  0146  0DAE               	rlf	??_MFRC522_ToCard+1,f
  3486  0147  1003               	clrc
  3487  0148  0DAD               	rlf	??_MFRC522_ToCard,f
  3488  0149  0DAE               	rlf	??_MFRC522_ToCard+1,f
  3489  014A  1003               	clrc
  3490  014B  0DAD               	rlf	??_MFRC522_ToCard,f
  3491  014C  0DAE               	rlf	??_MFRC522_ToCard+1,f
  3492  014D  0835               	movf	MFRC522_ToCard@lastBits,w
  3493  014E  072D               	addwf	??_MFRC522_ToCard,w
  3494  014F  00AF               	movwf	??_MFRC522_ToCard+2
  3495  0150  3000               	movlw	0
  3496  0151  1803               	skipnc
  3497  0152  3001               	movlw	1
  3498  0153  072E               	addwf	??_MFRC522_ToCard+1,w
  3499  0154  00B0               	movwf	??_MFRC522_ToCard+3
  3500  0155  082F               	movf	??_MFRC522_ToCard+2,w
  3501  0156  3EF8               	addlw	248
  3502  0157  00B1               	movwf	??_MFRC522_ToCard+4
  3503  0158  0830               	movf	??_MFRC522_ToCard+3,w
  3504  0159  1803               	skipnc
  3505  015A  3E01               	addlw	1
  3506  015B  3EFF               	addlw	255
  3507  015C  00B2               	movwf	??_MFRC522_ToCard+5
  3508  015D  082C               	movf	MFRC522_ToCard@backLen,w
  3509  015E  0084               	movwf	4
  3510  015F  0831               	movf	??_MFRC522_ToCard+4,w
  3511  0160  1383               	bcf	3,7	;select IRP bank0
  3512  0161  0080               	movwf	0
  3513  0162  0A84               	incf	4,f
  3514  0163  0832               	movf	??_MFRC522_ToCard+5,w
  3515  0164  0080               	movwf	0
  3516                           
  3517                           ;mfrc522.c: 164:                 }
  3518  0165  297A               	goto	l2751
  3519  0166                     l2749:
  3520                           
  3521                           ;mfrc522.c: 166:                 {;mfrc522.c: 167:                     *backLen = n * 8;
  3522  0166  083A               	movf	MFRC522_ToCard@n,w
  3523  0167  00AD               	movwf	??_MFRC522_ToCard
  3524  0168  01AE               	clrf	??_MFRC522_ToCard+1
  3525  0169  1003               	clrc
  3526  016A  0DAD               	rlf	??_MFRC522_ToCard,f
  3527  016B  0DAE               	rlf	??_MFRC522_ToCard+1,f
  3528  016C  1003               	clrc
  3529  016D  0DAD               	rlf	??_MFRC522_ToCard,f
  3530  016E  0DAE               	rlf	??_MFRC522_ToCard+1,f
  3531  016F  1003               	clrc
  3532  0170  0DAD               	rlf	??_MFRC522_ToCard,f
  3533  0171  0DAE               	rlf	??_MFRC522_ToCard+1,f
  3534  0172  082C               	movf	MFRC522_ToCard@backLen,w
  3535  0173  0084               	movwf	4
  3536  0174  082D               	movf	??_MFRC522_ToCard,w
  3537  0175  1383               	bcf	3,7	;select IRP bank0
  3538  0176  0080               	movwf	0
  3539  0177  0A84               	incf	4,f
  3540  0178  082E               	movf	??_MFRC522_ToCard+1,w
  3541  0179  0080               	movwf	0
  3542  017A                     l2751:
  3543                           
  3544                           ;mfrc522.c: 169:                 if(n == 0)
  3545  017A  083A               	movf	MFRC522_ToCard@n,w
  3546  017B  1D03               	btfss	3,2
  3547  017C  297E               	goto	u1791
  3548  017D  297F               	goto	u1790
  3549  017E                     u1791:
  3550  017E  2981               	goto	l2755
  3551  017F                     u1790:
  3552  017F                     l2753:
  3553                           
  3554                           ;mfrc522.c: 170:                 {;mfrc522.c: 171:                     n = 1;
  3555  017F  01BA               	clrf	MFRC522_ToCard@n
  3556  0180  0ABA               	incf	MFRC522_ToCard@n,f
  3557  0181                     l2755:
  3558                           
  3559                           ;mfrc522.c: 173:                 if(n > 16)
  3560  0181  3011               	movlw	17
  3561  0182  023A               	subwf	MFRC522_ToCard@n,w
  3562  0183  1C03               	skipc
  3563  0184  2986               	goto	u1801
  3564  0185  2987               	goto	u1800
  3565  0186                     u1801:
  3566  0186  298B               	goto	l2759
  3567  0187                     u1800:
  3568  0187                     l2757:
  3569                           
  3570                           ;mfrc522.c: 174:                 {;mfrc522.c: 175:                     n = 16;
  3571  0187  3010               	movlw	16
  3572  0188  00AD               	movwf	??_MFRC522_ToCard
  3573  0189  082D               	movf	??_MFRC522_ToCard,w
  3574  018A  00BA               	movwf	MFRC522_ToCard@n
  3575  018B                     l2759:
  3576                           
  3577                           ;mfrc522.c: 177:                 for(i=0; i<n; i++)
  3578  018B  01B8               	clrf	MFRC522_ToCard@i
  3579  018C  01B9               	clrf	MFRC522_ToCard@i+1
  3580  018D  29A5               	goto	l2765
  3581  018E                     l2761:
  3582                           
  3583                           ;mfrc522.c: 178:                 {;mfrc522.c: 179:                     backData[i] = MFR
      +                          C522_Rd(0x09);
  3584  018E  3009               	movlw	9
  3585  018F  120A  118A  23E1  120A  118A  	fcall	_MFRC522_Rd
  3586  0194  1283               	bcf	3,5	;RP0=0, select bank0
  3587  0195  1303               	bcf	3,6	;RP1=0, select bank0
  3588  0196  00AD               	movwf	??_MFRC522_ToCard
  3589  0197  0838               	movf	MFRC522_ToCard@i,w
  3590  0198  072B               	addwf	MFRC522_ToCard@backData,w
  3591  0199  00AE               	movwf	??_MFRC522_ToCard+1
  3592  019A  082E               	movf	??_MFRC522_ToCard+1,w
  3593  019B  0084               	movwf	4
  3594  019C  082D               	movf	??_MFRC522_ToCard,w
  3595  019D  1383               	bcf	3,7	;select IRP bank0
  3596  019E  0080               	movwf	0
  3597  019F                     l2763:
  3598                           
  3599                           ;mfrc522.c: 180:                 }
  3600  019F  3001               	movlw	1
  3601  01A0  07B8               	addwf	MFRC522_ToCard@i,f
  3602  01A1  1803               	skipnc
  3603  01A2  0AB9               	incf	MFRC522_ToCard@i+1,f
  3604  01A3  3000               	movlw	0
  3605  01A4  07B9               	addwf	MFRC522_ToCard@i+1,f
  3606  01A5                     l2765:
  3607  01A5  083A               	movf	MFRC522_ToCard@n,w
  3608  01A6  00AD               	movwf	??_MFRC522_ToCard
  3609  01A7  01AE               	clrf	??_MFRC522_ToCard+1
  3610  01A8  082E               	movf	??_MFRC522_ToCard+1,w
  3611  01A9  0239               	subwf	MFRC522_ToCard@i+1,w
  3612  01AA  1D03               	skipz
  3613  01AB  29AE               	goto	u1815
  3614  01AC  082D               	movf	??_MFRC522_ToCard,w
  3615  01AD  0238               	subwf	MFRC522_ToCard@i,w
  3616  01AE                     u1815:
  3617  01AE  1C03               	skipc
  3618  01AF  29B1               	goto	u1811
  3619  01B0  29B2               	goto	u1810
  3620  01B1                     u1811:
  3621  01B1  298E               	goto	l2761
  3622  01B2                     u1810:
  3623  01B2                     l2767:
  3624                           
  3625                           ;mfrc522.c: 181:                 backData[i] = 0;
  3626  01B2  0838               	movf	MFRC522_ToCard@i,w
  3627  01B3  072B               	addwf	MFRC522_ToCard@backData,w
  3628  01B4  00AD               	movwf	??_MFRC522_ToCard
  3629  01B5  082D               	movf	??_MFRC522_ToCard,w
  3630  01B6  0084               	movwf	4
  3631  01B7  0180               	clrf	0
  3632  01B8  29BF               	goto	l425
  3633  01B9                     l2769:
  3634                           
  3635                           ;mfrc522.c: 185:         {;mfrc522.c: 186:             _status = 2;
  3636  01B9  3002               	movlw	2
  3637  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  3638  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  3639  01BC  00AD               	movwf	??_MFRC522_ToCard
  3640  01BD  082D               	movf	??_MFRC522_ToCard,w
  3641  01BE  00B4               	movwf	MFRC522_ToCard@_status
  3642  01BF                     l425:	
  3643                           ;mfrc522.c: 188:     }
  3644                           
  3645                           
  3646                           ;mfrc522.c: 189:     return _status;
  3647  01BF  0834               	movf	MFRC522_ToCard@_status,w
  3648  01C0                     l437:
  3649  01C0  0008               	return
  3650  01C1                     __end_of_MFRC522_ToCard:
  3651                           
  3652                           	psect	text13
  3653  0288                     __ptext13:	
  3654 ;; *************** function _MFRC522_CRC *****************
  3655 ;; Defined at:
  3656 ;;		line 206 in file "mfrc522.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;  dataIn          1    wreg     PTR unsigned char 
  3659 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), 
  3660 ;;  length          1    9[BANK0 ] unsigned char 
  3661 ;;  dataOut         1   10[BANK0 ] PTR unsigned char 
  3662 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), 
  3663 ;; Auto vars:     Size  Location     Type
  3664 ;;  dataIn          1   13[BANK0 ] PTR unsigned char 
  3665 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), 
  3666 ;;  i               1   14[BANK0 ] unsigned char 
  3667 ;;  n               1   12[BANK0 ] unsigned char 
  3668 ;; Return value:  Size  Location     Type
  3669 ;;                  1    wreg      void 
  3670 ;; Registers used:
  3671 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3672 ;; Tracked objects:
  3673 ;;		On entry : 0/0
  3674 ;;		On exit  : 0/0
  3675 ;;		Unchanged: 0/0
  3676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3677 ;;      Params:         0       2       0       0       0
  3678 ;;      Locals:         0       3       0       0       0
  3679 ;;      Temps:          0       1       0       0       0
  3680 ;;      Totals:         0       6       0       0       0
  3681 ;;Total ram usage:        6 bytes
  3682 ;; Hardware stack levels used: 1
  3683 ;; Hardware stack levels required when called: 3
  3684 ;; This function calls:
  3685 ;;		_MFRC522_Clear_Bit
  3686 ;;		_MFRC522_Rd
  3687 ;;		_MFRC522_Set_Bit
  3688 ;;		_MFRC522_Wr
  3689 ;; This function is called by:
  3690 ;;		_MFRC522_Halt
  3691 ;;		_MFRC522_SelectTag
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694                           
  3695                           
  3696                           ;psect for function _MFRC522_CRC
  3697  0288                     _MFRC522_CRC:
  3698                           
  3699                           ;incstack = 0
  3700                           ; Regs used in _MFRC522_CRC: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3701                           ;MFRC522_CRC@dataIn stored from wreg
  3702  0288  1283               	bcf	3,5	;RP0=0, select bank0
  3703  0289  1303               	bcf	3,6	;RP1=0, select bank0
  3704  028A  00AD               	movwf	MFRC522_CRC@dataIn
  3705  028B                     l2791:
  3706                           
  3707                           ;mfrc522.c: 206: void MFRC522_CRC(char *dataIn, char length, char *dataOut);mfrc522.c: 2
      +                          07: {;mfrc522.c: 208:     char i, n;;mfrc522.c: 209:     MFRC522_Clear_Bit(0x05, 0x04);
  3708  028B  3004               	movlw	4
  3709  028C  00AB               	movwf	??_MFRC522_CRC
  3710  028D  082B               	movf	??_MFRC522_CRC,w
  3711  028E  00F6               	movwf	MFRC522_Clear_Bit@mask
  3712  028F  3005               	movlw	5
  3713  0290  120A  118A  263C  120A  118A  	fcall	_MFRC522_Clear_Bit
  3714                           
  3715                           ;mfrc522.c: 210:     MFRC522_Set_Bit(0x0A, 0x80);
  3716  0295  3080               	movlw	128
  3717  0296  1283               	bcf	3,5	;RP0=0, select bank0
  3718  0297  1303               	bcf	3,6	;RP1=0, select bank0
  3719  0298  00AB               	movwf	??_MFRC522_CRC
  3720  0299  082B               	movf	??_MFRC522_CRC,w
  3721  029A  00F6               	movwf	MFRC522_Set_Bit@mask
  3722  029B  300A               	movlw	10
  3723  029C  120A  118A  2622  120A  118A  	fcall	_MFRC522_Set_Bit
  3724  02A1                     l2793:
  3725                           
  3726                           ;mfrc522.c: 211:     for(i=0; i<length; i++)
  3727  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  3728  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  3729  02A3  01AE               	clrf	MFRC522_CRC@i
  3730  02A4  2ABC               	goto	l2801
  3731  02A5                     l2795:
  3732                           
  3733                           ;mfrc522.c: 212:     {;mfrc522.c: 213:         MFRC522_Wr(0x09, *dataIn++);
  3734  02A5  082D               	movf	MFRC522_CRC@dataIn,w
  3735  02A6  0084               	movwf	4
  3736  02A7  1383               	bcf	3,7	;select IRP bank0
  3737  02A8  0800               	movf	0,w
  3738  02A9  00AB               	movwf	??_MFRC522_CRC
  3739  02AA  082B               	movf	??_MFRC522_CRC,w
  3740  02AB  00F3               	movwf	MFRC522_Wr@value
  3741  02AC  3009               	movlw	9
  3742  02AD  120A  118A  250F  120A  118A  	fcall	_MFRC522_Wr
  3743  02B2                     l2797:
  3744  02B2  3001               	movlw	1
  3745  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  3746  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  3747  02B5  00AB               	movwf	??_MFRC522_CRC
  3748  02B6  082B               	movf	??_MFRC522_CRC,w
  3749  02B7  07AD               	addwf	MFRC522_CRC@dataIn,f
  3750  02B8                     l2799:
  3751                           
  3752                           ;mfrc522.c: 214:     }
  3753  02B8  3001               	movlw	1
  3754  02B9  00AB               	movwf	??_MFRC522_CRC
  3755  02BA  082B               	movf	??_MFRC522_CRC,w
  3756  02BB  07AE               	addwf	MFRC522_CRC@i,f
  3757  02BC                     l2801:
  3758  02BC  0829               	movf	MFRC522_CRC@length,w
  3759  02BD  022E               	subwf	MFRC522_CRC@i,w
  3760  02BE  1C03               	skipc
  3761  02BF  2AC1               	goto	u1841
  3762  02C0  2AC2               	goto	u1840
  3763  02C1                     u1841:
  3764  02C1  2AA5               	goto	l2795
  3765  02C2                     u1840:
  3766  02C2                     l2803:
  3767                           
  3768                           ;mfrc522.c: 215:     MFRC522_Wr(0x01, 0x03);
  3769  02C2  3003               	movlw	3
  3770  02C3  00AB               	movwf	??_MFRC522_CRC
  3771  02C4  082B               	movf	??_MFRC522_CRC,w
  3772  02C5  00F3               	movwf	MFRC522_Wr@value
  3773  02C6  3001               	movlw	1
  3774  02C7  120A  118A  250F  120A  118A  	fcall	_MFRC522_Wr
  3775  02CC                     l2805:
  3776                           
  3777                           ;mfrc522.c: 216:     i = 0xFF;
  3778  02CC  30FF               	movlw	255
  3779  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  3780  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  3781  02CF  00AB               	movwf	??_MFRC522_CRC
  3782  02D0  082B               	movf	??_MFRC522_CRC,w
  3783  02D1  00AE               	movwf	MFRC522_CRC@i
  3784  02D2                     l2807:
  3785                           
  3786                           ;mfrc522.c: 218:     {;mfrc522.c: 219:         n = MFRC522_Rd( 0x05 );
  3787  02D2  3005               	movlw	5
  3788  02D3  120A  118A  23E1  120A  118A  	fcall	_MFRC522_Rd
  3789  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  3790  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  3791  02DA  00AB               	movwf	??_MFRC522_CRC
  3792  02DB  082B               	movf	??_MFRC522_CRC,w
  3793  02DC  00AC               	movwf	MFRC522_CRC@n
  3794  02DD                     l2809:
  3795                           
  3796                           ;mfrc522.c: 220:         i--;
  3797  02DD  3001               	movlw	1
  3798  02DE  02AE               	subwf	MFRC522_CRC@i,f
  3799  02DF                     l2811:
  3800                           
  3801                           ;mfrc522.c: 221:     }
  3802  02DF  082E               	movf	MFRC522_CRC@i,w
  3803  02E0  1903               	btfsc	3,2
  3804  02E1  2AE3               	goto	u1851
  3805  02E2  2AE4               	goto	u1850
  3806  02E3                     u1851:
  3807  02E3  2AE8               	goto	l2815
  3808  02E4                     u1850:
  3809  02E4                     l2813:
  3810  02E4  1D2C               	btfss	MFRC522_CRC@n,2
  3811  02E5  2AE7               	goto	u1861
  3812  02E6  2AE8               	goto	u1860
  3813  02E7                     u1861:
  3814  02E7  2AD2               	goto	l2807
  3815  02E8                     u1860:
  3816  02E8                     l2815:
  3817                           
  3818                           ;mfrc522.c: 223:     dataOut[0] = MFRC522_Rd(0x22);
  3819  02E8  3022               	movlw	34
  3820  02E9  120A  118A  23E1  120A  118A  	fcall	_MFRC522_Rd
  3821  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  3822  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  3823  02F0  00AB               	movwf	??_MFRC522_CRC
  3824  02F1  082A               	movf	MFRC522_CRC@dataOut,w
  3825  02F2  0084               	movwf	4
  3826  02F3  082B               	movf	??_MFRC522_CRC,w
  3827  02F4  1383               	bcf	3,7	;select IRP bank0
  3828  02F5  0080               	movwf	0
  3829                           
  3830                           ;mfrc522.c: 224:     dataOut[1] = MFRC522_Rd(0x21);
  3831  02F6  3021               	movlw	33
  3832  02F7  120A  118A  23E1  120A  118A  	fcall	_MFRC522_Rd
  3833  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  3834  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  3835  02FE  00AB               	movwf	??_MFRC522_CRC
  3836  02FF  0A2A               	incf	MFRC522_CRC@dataOut,w
  3837  0300  0084               	movwf	4
  3838  0301  082B               	movf	??_MFRC522_CRC,w
  3839  0302  1383               	bcf	3,7	;select IRP bank0
  3840  0303  0080               	movwf	0
  3841  0304                     l453:
  3842  0304  0008               	return
  3843  0305                     __end_of_MFRC522_CRC:
  3844                           
  3845                           	psect	text14
  3846  0622                     __ptext14:	
  3847 ;; *************** function _MFRC522_Set_Bit *****************
  3848 ;; Defined at:
  3849 ;;		line 62 in file "mfrc522.c"
  3850 ;; Parameters:    Size  Location     Type
  3851 ;;  addr            1    wreg     unsigned char 
  3852 ;;  mask            1    6[COMMON] unsigned char 
  3853 ;; Auto vars:     Size  Location     Type
  3854 ;;  addr            1    8[BANK0 ] unsigned char 
  3855 ;;  tmp             1    7[BANK0 ] unsigned char 
  3856 ;; Return value:  Size  Location     Type
  3857 ;;                  1    wreg      void 
  3858 ;; Registers used:
  3859 ;;		wreg, status,2, status,0, pclath, cstack
  3860 ;; Tracked objects:
  3861 ;;		On entry : 0/0
  3862 ;;		On exit  : 0/0
  3863 ;;		Unchanged: 0/0
  3864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3865 ;;      Params:         1       0       0       0       0
  3866 ;;      Locals:         0       2       0       0       0
  3867 ;;      Temps:          1       0       0       0       0
  3868 ;;      Totals:         2       2       0       0       0
  3869 ;;Total ram usage:        4 bytes
  3870 ;; Hardware stack levels used: 1
  3871 ;; Hardware stack levels required when called: 2
  3872 ;; This function calls:
  3873 ;;		_MFRC522_Rd
  3874 ;;		_MFRC522_Wr
  3875 ;; This function is called by:
  3876 ;;		_MFRC522_ToCard
  3877 ;;		_MFRC522_CRC
  3878 ;;		_MFRC522_AntennaOn
  3879 ;; This function uses a non-reentrant model
  3880 ;;
  3881                           
  3882                           
  3883                           ;psect for function _MFRC522_Set_Bit
  3884  0622                     _MFRC522_Set_Bit:
  3885                           
  3886                           ;incstack = 0
  3887                           ; Regs used in _MFRC522_Set_Bit: [wreg+status,2+status,0+pclath+cstack]
  3888                           ;MFRC522_Set_Bit@addr stored from wreg
  3889  0622  1283               	bcf	3,5	;RP0=0, select bank0
  3890  0623  1303               	bcf	3,6	;RP1=0, select bank0
  3891  0624  00A8               	movwf	MFRC522_Set_Bit@addr
  3892  0625                     l2683:
  3893  0625                     l2685:
  3894                           
  3895                           ;mfrc522.c: 65:     tmp = MFRC522_Rd(addr);
  3896  0625  0828               	movf	MFRC522_Set_Bit@addr,w
  3897  0626  120A  118A  23E1  120A  118A  	fcall	_MFRC522_Rd
  3898  062B  00F7               	movwf	??_MFRC522_Set_Bit
  3899  062C  0877               	movf	??_MFRC522_Set_Bit,w
  3900  062D  1283               	bcf	3,5	;RP0=0, select bank0
  3901  062E  1303               	bcf	3,6	;RP1=0, select bank0
  3902  062F  00A7               	movwf	MFRC522_Set_Bit@tmp
  3903  0630                     l2687:
  3904                           
  3905                           ;mfrc522.c: 66:     MFRC522_Wr(addr, tmp | mask);
  3906  0630  0827               	movf	MFRC522_Set_Bit@tmp,w
  3907  0631  0476               	iorwf	MFRC522_Set_Bit@mask,w
  3908  0632  00F7               	movwf	??_MFRC522_Set_Bit
  3909  0633  0877               	movf	??_MFRC522_Set_Bit,w
  3910  0634  00F3               	movwf	MFRC522_Wr@value
  3911  0635  0828               	movf	MFRC522_Set_Bit@addr,w
  3912  0636  120A  118A  250F  120A  118A  	fcall	_MFRC522_Wr
  3913  063B                     l400:
  3914  063B  0008               	return
  3915  063C                     __end_of_MFRC522_Set_Bit:
  3916                           
  3917                           	psect	text15
  3918  063C                     __ptext15:	
  3919 ;; *************** function _MFRC522_Clear_Bit *****************
  3920 ;; Defined at:
  3921 ;;		line 55 in file "mfrc522.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;  addr            1    wreg     unsigned char 
  3924 ;;  mask            1    6[COMMON] unsigned char 
  3925 ;; Auto vars:     Size  Location     Type
  3926 ;;  addr            1    8[BANK0 ] unsigned char 
  3927 ;;  tmp             1    7[BANK0 ] unsigned char 
  3928 ;; Return value:  Size  Location     Type
  3929 ;;                  1    wreg      void 
  3930 ;; Registers used:
  3931 ;;		wreg, status,2, status,0, pclath, cstack
  3932 ;; Tracked objects:
  3933 ;;		On entry : 0/0
  3934 ;;		On exit  : 0/0
  3935 ;;		Unchanged: 0/0
  3936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3937 ;;      Params:         1       0       0       0       0
  3938 ;;      Locals:         0       2       0       0       0
  3939 ;;      Temps:          1       0       0       0       0
  3940 ;;      Totals:         2       2       0       0       0
  3941 ;;Total ram usage:        4 bytes
  3942 ;; Hardware stack levels used: 1
  3943 ;; Hardware stack levels required when called: 2
  3944 ;; This function calls:
  3945 ;;		_MFRC522_Rd
  3946 ;;		_MFRC522_Wr
  3947 ;; This function is called by:
  3948 ;;		_MFRC522_ToCard
  3949 ;;		_MFRC522_CRC
  3950 ;;		_MFRC522_Halt
  3951 ;;		_MFRC522_AntiColl
  3952 ;;		_MFRC522_AntennaOff
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           
  3957                           ;psect for function _MFRC522_Clear_Bit
  3958  063C                     _MFRC522_Clear_Bit:
  3959                           
  3960                           ;incstack = 0
  3961                           ; Regs used in _MFRC522_Clear_Bit: [wreg+status,2+status,0+pclath+cstack]
  3962                           ;MFRC522_Clear_Bit@addr stored from wreg
  3963  063C  1283               	bcf	3,5	;RP0=0, select bank0
  3964  063D  1303               	bcf	3,6	;RP1=0, select bank0
  3965  063E  00A8               	movwf	MFRC522_Clear_Bit@addr
  3966  063F                     l2677:
  3967  063F                     l2679:
  3968                           
  3969                           ;mfrc522.c: 58:     tmp = MFRC522_Rd(addr) ;
  3970  063F  0828               	movf	MFRC522_Clear_Bit@addr,w
  3971  0640  120A  118A  23E1  120A  118A  	fcall	_MFRC522_Rd
  3972  0645  00F7               	movwf	??_MFRC522_Clear_Bit
  3973  0646  0877               	movf	??_MFRC522_Clear_Bit,w
  3974  0647  1283               	bcf	3,5	;RP0=0, select bank0
  3975  0648  1303               	bcf	3,6	;RP1=0, select bank0
  3976  0649  00A7               	movwf	MFRC522_Clear_Bit@tmp
  3977  064A                     l2681:
  3978                           
  3979                           ;mfrc522.c: 59:     MFRC522_Wr(addr, tmp&~mask);
  3980  064A  0976               	comf	MFRC522_Clear_Bit@mask,w
  3981  064B  0527               	andwf	MFRC522_Clear_Bit@tmp,w
  3982  064C  00F7               	movwf	??_MFRC522_Clear_Bit
  3983  064D  0877               	movf	??_MFRC522_Clear_Bit,w
  3984  064E  00F3               	movwf	MFRC522_Wr@value
  3985  064F  0828               	movf	MFRC522_Clear_Bit@addr,w
  3986  0650  120A  118A  250F  120A  118A  	fcall	_MFRC522_Wr
  3987  0655                     l397:
  3988  0655  0008               	return
  3989  0656                     __end_of_MFRC522_Clear_Bit:
  3990                           
  3991                           	psect	text16
  3992  050F                     __ptext16:	
  3993 ;; *************** function _MFRC522_Wr *****************
  3994 ;; Defined at:
  3995 ;;		line 30 in file "mfrc522.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;  address         1    wreg     unsigned char 
  3998 ;;  value           1    3[COMMON] unsigned char 
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;  address         1    0[BANK0 ] unsigned char 
  4001 ;;  i               1    2[BANK0 ] unsigned char 
  4002 ;;  ucAddr          1    1[BANK0 ] unsigned char 
  4003 ;; Return value:  Size  Location     Type
  4004 ;;                  1    wreg      void 
  4005 ;; Registers used:
  4006 ;;		wreg, status,2, status,0
  4007 ;; Tracked objects:
  4008 ;;		On entry : 0/0
  4009 ;;		On exit  : 0/0
  4010 ;;		Unchanged: 0/0
  4011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4012 ;;      Params:         1       0       0       0       0
  4013 ;;      Locals:         0       3       0       0       0
  4014 ;;      Temps:          2       0       0       0       0
  4015 ;;      Totals:         3       3       0       0       0
  4016 ;;Total ram usage:        6 bytes
  4017 ;; Hardware stack levels used: 1
  4018 ;; Hardware stack levels required when called: 1
  4019 ;; This function calls:
  4020 ;;		Nothing
  4021 ;; This function is called by:
  4022 ;;		_MFRC522_Clear_Bit
  4023 ;;		_MFRC522_Set_Bit
  4024 ;;		_MFRC522_ToCard
  4025 ;;		_MFRC522_Request
  4026 ;;		_MFRC522_CRC
  4027 ;;		_MFRC522_AntiColl
  4028 ;;		_MFRC522_Init
  4029 ;; This function uses a non-reentrant model
  4030 ;;
  4031                           
  4032                           
  4033                           ;psect for function _MFRC522_Wr
  4034  050F                     _MFRC522_Wr:
  4035                           
  4036                           ;incstack = 0
  4037                           ; Regs used in _MFRC522_Wr: [wreg+status,2+status,0]
  4038                           ;MFRC522_Wr@address stored from wreg
  4039  050F  1283               	bcf	3,5	;RP0=0, select bank0
  4040  0510  1303               	bcf	3,6	;RP1=0, select bank0
  4041  0511  00A0               	movwf	MFRC522_Wr@address
  4042  0512                     l2645:
  4043                           
  4044                           ;mfrc522.c: 30: void MFRC522_Wr(unsigned char address, unsigned char value);mfrc522.c: 3
      +                          1: {;mfrc522.c: 32:     unsigned char i, ucAddr;;mfrc522.c: 33:     PORTCbits.RC3 = 0;
  4045  0512  1187               	bcf	7,3	;volatile
  4046                           
  4047                           ;mfrc522.c: 34:     PORTCbits.RC4 = 0;
  4048  0513  1207               	bcf	7,4	;volatile
  4049  0514                     l2647:
  4050                           
  4051                           ;mfrc522.c: 35:     ucAddr = ((address << 1) & 0x7E);
  4052  0514  0820               	movf	MFRC522_Wr@address,w
  4053  0515  00F4               	movwf	??_MFRC522_Wr
  4054  0516  0774               	addwf	??_MFRC522_Wr,w
  4055  0517  397E               	andlw	126
  4056  0518  00F5               	movwf	??_MFRC522_Wr+1
  4057  0519  0875               	movf	??_MFRC522_Wr+1,w
  4058  051A  00A1               	movwf	MFRC522_Wr@ucAddr
  4059  051B                     l2649:
  4060                           
  4061                           ;mfrc522.c: 37:     for(i=8; i>0; i--)
  4062  051B  3008               	movlw	8
  4063  051C  00F4               	movwf	??_MFRC522_Wr
  4064  051D  0874               	movf	??_MFRC522_Wr,w
  4065  051E  00A2               	movwf	MFRC522_Wr@i
  4066  051F                     l390:
  4067                           
  4068                           ;mfrc522.c: 38:     {;mfrc522.c: 39:         PORTCbits.RC5 = ((ucAddr&0x80) == 0x80);
  4069  051F  1BA1               	btfsc	MFRC522_Wr@ucAddr,7
  4070  0520  2D22               	goto	u1631
  4071  0521  2D26               	goto	u1630
  4072  0522                     u1631:
  4073  0522  1283               	bcf	3,5	;RP0=0, select bank0
  4074  0523  1303               	bcf	3,6	;RP1=0, select bank0
  4075  0524  1687               	bsf	7,5	;volatile
  4076  0525  2D29               	goto	u1644
  4077  0526                     u1630:
  4078  0526  1283               	bcf	3,5	;RP0=0, select bank0
  4079  0527  1303               	bcf	3,6	;RP1=0, select bank0
  4080  0528  1287               	bcf	7,5	;volatile
  4081  0529                     u1644:
  4082                           
  4083                           ;mfrc522.c: 40:         PORTCbits.RC3 = 1;
  4084  0529  1587               	bsf	7,3	;volatile
  4085  052A                     l2655:
  4086                           
  4087                           ;mfrc522.c: 41:         ucAddr <<= 1;
  4088  052A  1003               	clrc
  4089  052B  0DA1               	rlf	MFRC522_Wr@ucAddr,f
  4090  052C                     l2657:
  4091                           
  4092                           ;mfrc522.c: 42:         PORTCbits.RC3 = 0;
  4093  052C  1187               	bcf	7,3	;volatile
  4094  052D                     l2659:
  4095                           
  4096                           ;mfrc522.c: 43:     }
  4097  052D  3001               	movlw	1
  4098  052E  02A2               	subwf	MFRC522_Wr@i,f
  4099  052F                     l2661:
  4100  052F  0822               	movf	MFRC522_Wr@i,w
  4101  0530  1D03               	btfss	3,2
  4102  0531  2D33               	goto	u1651
  4103  0532  2D34               	goto	u1650
  4104  0533                     u1651:
  4105  0533  2D1F               	goto	l390
  4106  0534                     u1650:
  4107  0534                     l2663:
  4108                           
  4109                           ;mfrc522.c: 44:     for(i=8; i>0; i--)
  4110  0534  3008               	movlw	8
  4111  0535  00F4               	movwf	??_MFRC522_Wr
  4112  0536  0874               	movf	??_MFRC522_Wr,w
  4113  0537  00A2               	movwf	MFRC522_Wr@i
  4114  0538                     l392:
  4115                           
  4116                           ;mfrc522.c: 45:     {;mfrc522.c: 46:         PORTCbits.RC5 = ((value&0x80) == 0x80);
  4117  0538  1BF3               	btfsc	MFRC522_Wr@value,7
  4118  0539  2D3B               	goto	u1661
  4119  053A  2D3F               	goto	u1660
  4120  053B                     u1661:
  4121  053B  1283               	bcf	3,5	;RP0=0, select bank0
  4122  053C  1303               	bcf	3,6	;RP1=0, select bank0
  4123  053D  1687               	bsf	7,5	;volatile
  4124  053E  2D42               	goto	u1674
  4125  053F                     u1660:
  4126  053F  1283               	bcf	3,5	;RP0=0, select bank0
  4127  0540  1303               	bcf	3,6	;RP1=0, select bank0
  4128  0541  1287               	bcf	7,5	;volatile
  4129  0542                     u1674:
  4130                           
  4131                           ;mfrc522.c: 47:         PORTCbits.RC3 = 1;
  4132  0542  1587               	bsf	7,3	;volatile
  4133  0543                     l2669:
  4134                           
  4135                           ;mfrc522.c: 48:         value <<= 1;
  4136  0543  1003               	clrc
  4137  0544  0DF3               	rlf	MFRC522_Wr@value,f
  4138  0545                     l2671:
  4139                           
  4140                           ;mfrc522.c: 49:         PORTCbits.RC3 = 0;
  4141  0545  1187               	bcf	7,3	;volatile
  4142  0546                     l2673:
  4143                           
  4144                           ;mfrc522.c: 50:     }
  4145  0546  3001               	movlw	1
  4146  0547  02A2               	subwf	MFRC522_Wr@i,f
  4147  0548                     l2675:
  4148  0548  0822               	movf	MFRC522_Wr@i,w
  4149  0549  1D03               	btfss	3,2
  4150  054A  2D4C               	goto	u1681
  4151  054B  2D4D               	goto	u1680
  4152  054C                     u1681:
  4153  054C  2D38               	goto	l392
  4154  054D                     u1680:
  4155  054D                     l393:
  4156                           
  4157                           ;mfrc522.c: 51:     PORTCbits.RC4 = 1;
  4158  054D  1607               	bsf	7,4	;volatile
  4159                           
  4160                           ;mfrc522.c: 52:     PORTCbits.RC3 = 1;
  4161  054E  1587               	bsf	7,3	;volatile
  4162  054F                     l394:
  4163  054F  0008               	return
  4164  0550                     __end_of_MFRC522_Wr:
  4165                           
  4166                           	psect	text17
  4167  03E1                     __ptext17:	
  4168 ;; *************** function _MFRC522_Rd *****************
  4169 ;; Defined at:
  4170 ;;		line 3 in file "mfrc522.c"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;  address         1    wreg     unsigned char 
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;  address         1    0[BANK0 ] unsigned char 
  4175 ;;  i               2    5[BANK0 ] unsigned int 
  4176 ;;  ucResult        2    3[BANK0 ] unsigned int 
  4177 ;;  ucAddr          2    1[BANK0 ] unsigned int 
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  1    wreg      unsigned char 
  4180 ;; Registers used:
  4181 ;;		wreg, status,2, status,0
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4187 ;;      Params:         0       0       0       0       0
  4188 ;;      Locals:         0       7       0       0       0
  4189 ;;      Temps:          3       0       0       0       0
  4190 ;;      Totals:         3       7       0       0       0
  4191 ;;Total ram usage:       10 bytes
  4192 ;; Hardware stack levels used: 1
  4193 ;; Hardware stack levels required when called: 1
  4194 ;; This function calls:
  4195 ;;		Nothing
  4196 ;; This function is called by:
  4197 ;;		_MFRC522_Clear_Bit
  4198 ;;		_MFRC522_Set_Bit
  4199 ;;		_MFRC522_ToCard
  4200 ;;		_MFRC522_CRC
  4201 ;;		_MFRC522_AntennaOn
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205                           
  4206                           ;psect for function _MFRC522_Rd
  4207  03E1                     _MFRC522_Rd:
  4208                           
  4209                           ;incstack = 0
  4210                           ; Regs used in _MFRC522_Rd: [wreg+status,2+status,0]
  4211                           ;MFRC522_Rd@address stored from wreg
  4212  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  4213  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  4214  03E3  00A0               	movwf	MFRC522_Rd@address
  4215  03E4                     l1909:
  4216                           
  4217                           ;mfrc522.c: 3: unsigned char MFRC522_Rd(unsigned char address);mfrc522.c: 4: {;mfrc522.c
      +                          : 5:     unsigned int i, ucAddr;;mfrc522.c: 6:     unsigned int ucResult = 0;
  4218  03E4  01A3               	clrf	MFRC522_Rd@ucResult
  4219  03E5  01A4               	clrf	MFRC522_Rd@ucResult+1
  4220  03E6                     l1911:
  4221                           
  4222                           ;mfrc522.c: 7:     PORTCbits.RC3 = 0;
  4223  03E6  1187               	bcf	7,3	;volatile
  4224  03E7                     l1913:
  4225                           
  4226                           ;mfrc522.c: 8:     PORTCbits.RC4 = 0;
  4227  03E7  1207               	bcf	7,4	;volatile
  4228  03E8                     l1915:
  4229                           
  4230                           ;mfrc522.c: 9:     ucAddr = ((address << 1) & 0x7E) | 0x80;
  4231  03E8  0820               	movf	MFRC522_Rd@address,w
  4232  03E9  00F3               	movwf	??_MFRC522_Rd
  4233  03EA  3001               	movlw	1
  4234  03EB                     u905:
  4235  03EB  1003               	clrc
  4236  03EC  0DF3               	rlf	??_MFRC522_Rd,f
  4237  03ED  3EFF               	addlw	-1
  4238  03EE  1D03               	skipz
  4239  03EF  2BEB               	goto	u905
  4240  03F0  307E               	movlw	126
  4241  03F1  0573               	andwf	??_MFRC522_Rd,w
  4242  03F2  00F4               	movwf	??_MFRC522_Rd+1
  4243  03F3  3080               	movlw	128
  4244  03F4  0474               	iorwf	??_MFRC522_Rd+1,w
  4245  03F5  00A1               	movwf	MFRC522_Rd@ucAddr
  4246  03F6  3000               	movlw	0
  4247  03F7  00A2               	movwf	MFRC522_Rd@ucAddr+1
  4248  03F8                     l1917:
  4249                           
  4250                           ;mfrc522.c: 11:     for(i=8; i>0; i--)
  4251  03F8  3008               	movlw	8
  4252  03F9  00A5               	movwf	MFRC522_Rd@i
  4253  03FA  3000               	movlw	0
  4254  03FB  00A6               	movwf	MFRC522_Rd@i+1
  4255  03FC                     l383:
  4256                           
  4257                           ;mfrc522.c: 12:     {;mfrc522.c: 13:         PORTCbits.RC5 = ((ucAddr & 0x80) == 0x80);
  4258  03FC  1BA1               	btfsc	MFRC522_Rd@ucAddr,7
  4259  03FD  2BFF               	goto	u911
  4260  03FE  2C03               	goto	u910
  4261  03FF                     u911:
  4262  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  4263  0400  1303               	bcf	3,6	;RP1=0, select bank0
  4264  0401  1687               	bsf	7,5	;volatile
  4265  0402  2C06               	goto	u924
  4266  0403                     u910:
  4267  0403  1283               	bcf	3,5	;RP0=0, select bank0
  4268  0404  1303               	bcf	3,6	;RP1=0, select bank0
  4269  0405  1287               	bcf	7,5	;volatile
  4270  0406                     u924:
  4271                           
  4272                           ;mfrc522.c: 14:         PORTCbits.RC3 = 1;
  4273  0406  1587               	bsf	7,3	;volatile
  4274  0407                     l1923:
  4275                           
  4276                           ;mfrc522.c: 15:         ucAddr <<= 1;
  4277  0407  3001               	movlw	1
  4278  0408                     u935:
  4279  0408  1003               	clrc
  4280  0409  0DA1               	rlf	MFRC522_Rd@ucAddr,f
  4281  040A  0DA2               	rlf	MFRC522_Rd@ucAddr+1,f
  4282  040B  3EFF               	addlw	-1
  4283  040C  1D03               	skipz
  4284  040D  2C08               	goto	u935
  4285  040E                     l1925:
  4286                           
  4287                           ;mfrc522.c: 16:         PORTCbits.RC3 = 0;
  4288  040E  1187               	bcf	7,3	;volatile
  4289                           
  4290                           ;mfrc522.c: 17:     }
  4291  040F  3001               	movlw	1
  4292  0410  02A5               	subwf	MFRC522_Rd@i,f
  4293  0411  3000               	movlw	0
  4294  0412  1C03               	skipc
  4295  0413  03A6               	decf	MFRC522_Rd@i+1,f
  4296  0414  02A6               	subwf	MFRC522_Rd@i+1,f
  4297  0415                     l1927:
  4298  0415  0825               	movf	MFRC522_Rd@i,w
  4299  0416  0426               	iorwf	MFRC522_Rd@i+1,w
  4300  0417  1D03               	btfss	3,2
  4301  0418  2C1A               	goto	u941
  4302  0419  2C1B               	goto	u940
  4303  041A                     u941:
  4304  041A  2BFC               	goto	l383
  4305  041B                     u940:
  4306  041B                     l1929:
  4307                           
  4308                           ;mfrc522.c: 18:     for(i=8; i>0; i--)
  4309  041B  3008               	movlw	8
  4310  041C  00A5               	movwf	MFRC522_Rd@i
  4311  041D  3000               	movlw	0
  4312  041E  00A6               	movwf	MFRC522_Rd@i+1
  4313  041F                     l385:
  4314                           
  4315                           ;mfrc522.c: 19:     {;mfrc522.c: 20:         PORTCbits.RC3 = 1;
  4316  041F  1587               	bsf	7,3	;volatile
  4317  0420                     l1935:
  4318                           
  4319                           ;mfrc522.c: 21:         ucResult <<= 1;
  4320  0420  3001               	movlw	1
  4321  0421                     u955:
  4322  0421  1003               	clrc
  4323  0422  0DA3               	rlf	MFRC522_Rd@ucResult,f
  4324  0423  0DA4               	rlf	MFRC522_Rd@ucResult+1,f
  4325  0424  3EFF               	addlw	-1
  4326  0425  1D03               	skipz
  4327  0426  2C21               	goto	u955
  4328  0427                     l1937:
  4329                           
  4330                           ;mfrc522.c: 22:         ucResult |= (short)PORTDbits.RD2;
  4331  0427  0C08               	rrf	8,w	;volatile
  4332  0428  00F3               	movwf	??_MFRC522_Rd
  4333  0429  0C73               	rrf	??_MFRC522_Rd,w
  4334  042A  3901               	andlw	1
  4335  042B  00F4               	movwf	??_MFRC522_Rd+1
  4336  042C  01F5               	clrf	??_MFRC522_Rd+2
  4337  042D  0874               	movf	??_MFRC522_Rd+1,w
  4338  042E  04A3               	iorwf	MFRC522_Rd@ucResult,f
  4339  042F  0875               	movf	??_MFRC522_Rd+2,w
  4340  0430  04A4               	iorwf	MFRC522_Rd@ucResult+1,f
  4341  0431                     l1939:
  4342                           
  4343                           ;mfrc522.c: 23:         PORTCbits.RC3 = 0;
  4344  0431  1187               	bcf	7,3	;volatile
  4345  0432                     l1941:
  4346                           
  4347                           ;mfrc522.c: 24:     }
  4348  0432  3001               	movlw	1
  4349  0433  02A5               	subwf	MFRC522_Rd@i,f
  4350  0434  3000               	movlw	0
  4351  0435  1C03               	skipc
  4352  0436  03A6               	decf	MFRC522_Rd@i+1,f
  4353  0437  02A6               	subwf	MFRC522_Rd@i+1,f
  4354  0438  0825               	movf	MFRC522_Rd@i,w
  4355  0439  0426               	iorwf	MFRC522_Rd@i+1,w
  4356  043A  1D03               	btfss	3,2
  4357  043B  2C3D               	goto	u961
  4358  043C  2C3E               	goto	u960
  4359  043D                     u961:
  4360  043D  2C1F               	goto	l385
  4361  043E                     u960:
  4362  043E                     l386:
  4363                           
  4364                           ;mfrc522.c: 25:     PORTCbits.RC4 = 1;
  4365  043E  1607               	bsf	7,4	;volatile
  4366                           
  4367                           ;mfrc522.c: 26:     PORTCbits.RC3 = 1;
  4368  043F  1587               	bsf	7,3	;volatile
  4369  0440                     l1943:
  4370                           
  4371                           ;mfrc522.c: 27:     return ucResult;
  4372  0440  0823               	movf	MFRC522_Rd@ucResult,w
  4373  0441                     l387:
  4374  0441  0008               	return
  4375  0442                     __end_of_MFRC522_Rd:
  4376                           
  4377                           	psect	text18
  4378  0588                     __ptext18:	
  4379 ;; *************** function _appInit *****************
  4380 ;; Defined at:
  4381 ;;		line 26 in file "user.c"
  4382 ;; Parameters:    Size  Location     Type
  4383 ;;		None
  4384 ;; Auto vars:     Size  Location     Type
  4385 ;;		None
  4386 ;; Return value:  Size  Location     Type
  4387 ;;                  1    wreg      void 
  4388 ;; Registers used:
  4389 ;;		wreg, status,2, status,0, pclath, cstack
  4390 ;; Tracked objects:
  4391 ;;		On entry : 0/0
  4392 ;;		On exit  : 0/0
  4393 ;;		Unchanged: 0/0
  4394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4395 ;;      Params:         0       0       0       0       0
  4396 ;;      Locals:         0       0       0       0       0
  4397 ;;      Temps:          2       0       0       0       0
  4398 ;;      Totals:         2       0       0       0       0
  4399 ;;Total ram usage:        2 bytes
  4400 ;; Hardware stack levels used: 1
  4401 ;; Hardware stack levels required when called: 2
  4402 ;; This function calls:
  4403 ;;		_displaytInit
  4404 ;;		_uartInit
  4405 ;; This function is called by:
  4406 ;;		_main
  4407 ;; This function uses a non-reentrant model
  4408 ;;
  4409                           
  4410                           
  4411                           ;psect for function _appInit
  4412  0588                     _appInit:
  4413  0588                     l2311:	
  4414                           ;incstack = 0
  4415                           ; Regs used in _appInit: [wreg+status,2+status,0+pclath+cstack]
  4416                           
  4417                           
  4418                           ;user.c: 30:     ANSEL = 0;
  4419  0588  1683               	bsf	3,5	;RP0=1, select bank3
  4420  0589  1703               	bsf	3,6	;RP1=1, select bank3
  4421  058A  0188               	clrf	8	;volatile
  4422                           
  4423                           ;user.c: 31:     ANSELH = 0;
  4424  058B  0189               	clrf	9	;volatile
  4425  058C                     l2313:
  4426                           
  4427                           ;user.c: 32:     TRISEbits.TRISE2 = 0;
  4428  058C  1683               	bsf	3,5	;RP0=1, select bank1
  4429  058D  1303               	bcf	3,6	;RP1=0, select bank1
  4430  058E  1109               	bcf	9,2	;volatile
  4431  058F                     l2315:
  4432                           
  4433                           ;user.c: 33:     TRISAbits.TRISA1 = 1;
  4434  058F  1485               	bsf	5,1	;volatile
  4435  0590                     l2317:
  4436                           
  4437                           ;user.c: 34:     TRISAbits.TRISA2 = 1;
  4438  0590  1505               	bsf	5,2	;volatile
  4439  0591                     l2319:
  4440                           
  4441                           ;user.c: 35:     TRISBbits.TRISB1 = 0;
  4442  0591  1086               	bcf	6,1	;volatile
  4443  0592                     l2321:
  4444                           
  4445                           ;user.c: 36:     TRISCbits.TRISC0 = 0;
  4446  0592  1007               	bcf	7,0	;volatile
  4447  0593                     l2323:
  4448                           
  4449                           ;user.c: 37:     uartInit();
  4450  0593  120A  118A  266C  120A  118A  	fcall	_uartInit
  4451  0598                     l2325:
  4452                           
  4453                           ;user.c: 38:     displaytInit();
  4454  0598  120A  118A  26B9  120A  118A  	fcall	_displaytInit
  4455  059D                     l2327:
  4456                           
  4457                           ;user.c: 42:     TMR1CS = 0;
  4458  059D  1283               	bcf	3,5	;RP0=0, select bank0
  4459  059E  1303               	bcf	3,6	;RP1=0, select bank0
  4460  059F  1090               	bcf	16,1	;volatile
  4461  05A0                     l2329:
  4462                           
  4463                           ;user.c: 43:     T1CKPS1 = 0;
  4464  05A0  1290               	bcf	16,5	;volatile
  4465  05A1                     l2331:
  4466                           
  4467                           ;user.c: 44:     T1CKPS0 = 0;
  4468  05A1  1210               	bcf	16,4	;volatile
  4469  05A2                     l2333:
  4470                           
  4471                           ;user.c: 45:     TMR1ON = 1;
  4472  05A2  1410               	bsf	16,0	;volatile
  4473  05A3                     l2335:
  4474                           
  4475                           ;user.c: 49:     CCP1CON = 0b00001011;
  4476  05A3  300B               	movlw	11
  4477  05A4  0097               	movwf	23	;volatile
  4478  05A5                     l2337:
  4479                           
  4480                           ;user.c: 50:     CCPR1 = 1000;
  4481  05A5  3003               	movlw	3
  4482  05A6  0096               	movwf	22	;volatile
  4483  05A7  30E8               	movlw	232
  4484  05A8  0095               	movwf	21	;volatile
  4485  05A9                     l2339:
  4486                           
  4487                           ;user.c: 53:     T0CS = 0;
  4488  05A9  1683               	bsf	3,5	;RP0=1, select bank1
  4489  05AA  1303               	bcf	3,6	;RP1=0, select bank1
  4490  05AB  1281               	bcf	1,5	;volatile
  4491  05AC                     l2341:
  4492                           
  4493                           ;user.c: 54:     PSA = 0;
  4494  05AC  1181               	bcf	1,3	;volatile
  4495  05AD                     l2343:
  4496                           
  4497                           ;user.c: 55:     PS0 = 1;
  4498  05AD  1401               	bsf	1,0	;volatile
  4499  05AE                     l2345:
  4500                           
  4501                           ;user.c: 56:     PS1 = 0;
  4502  05AE  1081               	bcf	1,1	;volatile
  4503  05AF                     l2347:
  4504                           
  4505                           ;user.c: 57:     PS2 = 0;
  4506  05AF  1101               	bcf	1,2	;volatile
  4507  05B0                     l2349:
  4508                           
  4509                           ;user.c: 60:     _delay((unsigned long)((100)*(4000000L/4000.0)));
  4510  05B0  3082               	movlw	130
  4511  05B1  00F4               	movwf	??_appInit+1
  4512  05B2  30DD               	movlw	221
  4513  05B3  00F3               	movwf	??_appInit
  4514  05B4                     u2137:
  4515  05B4  0BF3               	decfsz	??_appInit,f
  4516  05B5  2DB4               	goto	u2137
  4517  05B6  0BF4               	decfsz	??_appInit+1,f
  4518  05B7  2DB4               	goto	u2137
  4519  05B8  2DB9               	nop2
  4520  05B9                     l2351:
  4521                           
  4522                           ;user.c: 63:     CCP1IE = 1;
  4523  05B9  1683               	bsf	3,5	;RP0=1, select bank1
  4524  05BA  1303               	bcf	3,6	;RP1=0, select bank1
  4525  05BB  150C               	bsf	12,2	;volatile
  4526  05BC                     l2353:
  4527                           
  4528                           ;user.c: 64:     PEIE = 1;
  4529  05BC  170B               	bsf	11,6	;volatile
  4530  05BD                     l2355:
  4531                           
  4532                           ;user.c: 65:     GIE = 1;
  4533  05BD  178B               	bsf	11,7	;volatile
  4534  05BE                     l53:
  4535  05BE  0008               	return
  4536  05BF                     __end_of_appInit:
  4537                           
  4538                           	psect	text19
  4539  066C                     __ptext19:	
  4540 ;; *************** function _uartInit *****************
  4541 ;; Defined at:
  4542 ;;		line 39 in file "uart.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;		None
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;		None
  4547 ;; Return value:  Size  Location     Type
  4548 ;;                  1    wreg      void 
  4549 ;; Registers used:
  4550 ;;		wreg
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4556 ;;      Params:         0       0       0       0       0
  4557 ;;      Locals:         0       0       0       0       0
  4558 ;;      Temps:          0       0       0       0       0
  4559 ;;      Totals:         0       0       0       0       0
  4560 ;;Total ram usage:        0 bytes
  4561 ;; Hardware stack levels used: 1
  4562 ;; Hardware stack levels required when called: 1
  4563 ;; This function calls:
  4564 ;;		Nothing
  4565 ;; This function is called by:
  4566 ;;		_appInit
  4567 ;;		_RFID_Init
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           
  4572                           ;psect for function _uartInit
  4573  066C                     _uartInit:
  4574  066C                     l2183:	
  4575                           ;incstack = 0
  4576                           ; Regs used in _uartInit: [wreg]
  4577                           
  4578                           
  4579                           ;uart.c: 47:     SPBRG = (4000000L - 9600 * 16L) / (9600 * 16L);
  4580  066C  3019               	movlw	25
  4581  066D  1683               	bsf	3,5	;RP0=1, select bank1
  4582  066E  1303               	bcf	3,6	;RP1=0, select bank1
  4583  066F  0099               	movwf	25	;volatile
  4584  0670                     l2185:
  4585                           
  4586                           ;uart.c: 48:     BRGH = 1;
  4587  0670  1518               	bsf	24,2	;volatile
  4588  0671                     l2187:
  4589                           
  4590                           ;uart.c: 50:     SYNC = 0;
  4591  0671  1218               	bcf	24,4	;volatile
  4592  0672                     l2189:
  4593                           
  4594                           ;uart.c: 51:     SPEN = 1;
  4595  0672  1283               	bcf	3,5	;RP0=0, select bank0
  4596  0673  1303               	bcf	3,6	;RP1=0, select bank0
  4597  0674  1798               	bsf	24,7	;volatile
  4598  0675                     l2191:
  4599                           
  4600                           ;uart.c: 52:     TRISC7 = 1;
  4601  0675  1683               	bsf	3,5	;RP0=1, select bank1
  4602  0676  1303               	bcf	3,6	;RP1=0, select bank1
  4603  0677  1787               	bsf	7,7	;volatile
  4604  0678                     l2193:
  4605                           
  4606                           ;uart.c: 53:     TRISC6 = 1;
  4607  0678  1707               	bsf	7,6	;volatile
  4608  0679                     l2195:
  4609                           
  4610                           ;uart.c: 54:     CREN = 1;
  4611  0679  1283               	bcf	3,5	;RP0=0, select bank0
  4612  067A  1303               	bcf	3,6	;RP1=0, select bank0
  4613  067B  1618               	bsf	24,4	;volatile
  4614  067C                     l2197:
  4615                           
  4616                           ;uart.c: 55:     TXEN = 1;
  4617  067C  1683               	bsf	3,5	;RP0=1, select bank1
  4618  067D  1303               	bcf	3,6	;RP1=0, select bank1
  4619  067E  1698               	bsf	24,5	;volatile
  4620  067F                     l278:
  4621  067F  0008               	return
  4622  0680                     __end_of_uartInit:
  4623                           
  4624                           	psect	text20
  4625  06B9                     __ptext20:	
  4626 ;; *************** function _displaytInit *****************
  4627 ;; Defined at:
  4628 ;;		line 39 in file "display.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;		None
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;		None
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  1    wreg      void 
  4635 ;; Registers used:
  4636 ;;		status,2
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4642 ;;      Params:         0       0       0       0       0
  4643 ;;      Locals:         0       0       0       0       0
  4644 ;;      Temps:          0       0       0       0       0
  4645 ;;      Totals:         0       0       0       0       0
  4646 ;;Total ram usage:        0 bytes
  4647 ;; Hardware stack levels used: 1
  4648 ;; Hardware stack levels required when called: 1
  4649 ;; This function calls:
  4650 ;;		Nothing
  4651 ;; This function is called by:
  4652 ;;		_appInit
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656                           
  4657                           ;psect for function _displaytInit
  4658  06B9                     _displaytInit:
  4659  06B9                     l2199:	
  4660                           ;incstack = 0
  4661                           ; Regs used in _displaytInit: [status,2]
  4662                           
  4663                           
  4664                           ;display.c: 40:     TRISD = 0;
  4665  06B9  1683               	bsf	3,5	;RP0=1, select bank1
  4666  06BA  1303               	bcf	3,6	;RP1=0, select bank1
  4667  06BB  0188               	clrf	8	;volatile
  4668                           
  4669                           ;display.c: 41:     PORTD = 0;
  4670  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  4671  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  4672  06BE  0188               	clrf	8	;volatile
  4673  06BF                     l244:
  4674  06BF  0008               	return
  4675  06C0                     __end_of_displaytInit:
  4676                           
  4677                           	psect	text21
  4678  06C2                     __ptext21:	
  4679 ;; *************** function _InicializarMEF *****************
  4680 ;; Defined at:
  4681 ;;		line 60 in file "main.c"
  4682 ;; Parameters:    Size  Location     Type
  4683 ;;		None
  4684 ;; Auto vars:     Size  Location     Type
  4685 ;;		None
  4686 ;; Return value:  Size  Location     Type
  4687 ;;                  1    wreg      void 
  4688 ;; Registers used:
  4689 ;;		None
  4690 ;; Tracked objects:
  4691 ;;		On entry : 0/0
  4692 ;;		On exit  : 0/0
  4693 ;;		Unchanged: 0/0
  4694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4695 ;;      Params:         0       0       0       0       0
  4696 ;;      Locals:         0       0       0       0       0
  4697 ;;      Temps:          0       0       0       0       0
  4698 ;;      Totals:         0       0       0       0       0
  4699 ;;Total ram usage:        0 bytes
  4700 ;; Hardware stack levels used: 1
  4701 ;; Hardware stack levels required when called: 1
  4702 ;; This function calls:
  4703 ;;		Nothing
  4704 ;; This function is called by:
  4705 ;;		_main
  4706 ;;		_ActualizarRONDA
  4707 ;;		_ActualizarGAT
  4708 ;; This function uses a non-reentrant model
  4709 ;;
  4710                           
  4711                           
  4712                           ;psect for function _InicializarMEF
  4713  06C2                     _InicializarMEF:
  4714  06C2                     l115:	
  4715                           ;incstack = 0
  4716                           ; Regs used in _InicializarMEF: []
  4717                           
  4718  06C2  0008               	return
  4719  06C3                     __end_of_InicializarMEF:
  4720                           
  4721                           	psect	text22
  4722  0680                     __ptext22:	
  4723 ;; *************** function _isr *****************
  4724 ;; Defined at:
  4725 ;;		line 31 in file "interrupts.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;		None
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;		None
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  1    wreg      void 
  4732 ;; Registers used:
  4733 ;;		wreg, status,2, status,0
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4739 ;;      Params:         0       0       0       0       0
  4740 ;;      Locals:         0       0       0       0       0
  4741 ;;      Temps:          3       0       0       0       0
  4742 ;;      Totals:         3       0       0       0       0
  4743 ;;Total ram usage:        3 bytes
  4744 ;; Hardware stack levels used: 1
  4745 ;; This function calls:
  4746 ;;		Nothing
  4747 ;; This function is called by:
  4748 ;;		Interrupt level 1
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752                           
  4753                           ;psect for function _isr
  4754  0680                     _isr:
  4755  0680                     i1l2543:
  4756                           
  4757                           ;interrupts.c: 39:     TMR0IF = 0;
  4758  0680  110B               	bcf	11,2	;volatile
  4759  0681                     i1l2545:
  4760                           
  4761                           ;interrupts.c: 40:     TMR0 += 7;
  4762  0681  3007               	movlw	7
  4763  0682  00F0               	movwf	??_isr
  4764  0683  0870               	movf	??_isr,w
  4765  0684  1283               	bcf	3,5	;RP0=0, select bank0
  4766  0685  1303               	bcf	3,6	;RP1=0, select bank0
  4767  0686  0781               	addwf	1,f	;volatile
  4768  0687                     i1l2547:
  4769                           
  4770                           ;interrupts.c: 41:     tickCounter++;
  4771  0687  3001               	movlw	1
  4772  0688  07CD               	addwf	_tickCounter,f	;volatile
  4773  0689  1803               	skipnc
  4774  068A  0ACE               	incf	_tickCounter+1,f	;volatile
  4775  068B  3000               	movlw	0
  4776  068C  07CE               	addwf	_tickCounter+1,f	;volatile
  4777  068D                     i1l216:
  4778  068D  0872               	movf	??_isr+2,w
  4779  068E  008A               	movwf	10
  4780  068F  0E71               	swapf	??_isr+1,w
  4781  0690  0083               	movwf	3
  4782  0691  0EFE               	swapf	btemp,f
  4783  0692  0E7E               	swapf	btemp,w
  4784  0693  0009               	retfie
  4785  0694                     __end_of_isr:
  4786  007E                     btemp	set	126	;btemp
  4787  007E                     wtemp0	set	126
  4788                           
  4789                           	psect	intentry
  4790  0004                     __pintentry:	
  4791                           ;incstack = 0
  4792                           ; Regs used in _isr: [wreg+status,2+status,0]
  4793                           
  4794  0004                     interrupt_function:
  4795  007E                     saved_w	set	btemp
  4796  0004  00FE               	movwf	btemp
  4797  0005  0E03               	swapf	3,w
  4798  0006  00F1               	movwf	??_isr+1
  4799  0007  080A               	movf	10,w
  4800  0008  00F2               	movwf	??_isr+2
  4801  0009  120A  118A  2E80   	ljmp	_isr
  4802                           
  4803                           	psect	config
  4804                           
  4805                           ;Config register CONFIG1 @ 0x2007
  4806                           ;	Oscillator Selection bits
  4807                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  4808                           ;	Watchdog Timer Enable bit
  4809                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4810                           ;	Power-up Timer Enable bit
  4811                           ;	PWRTE = OFF, PWRT disabled
  4812                           ;	RE3/MCLR pin function select bit
  4813                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  4814                           ;	Code Protection bit
  4815                           ;	CP = OFF, Program memory code protection is disabled
  4816                           ;	Data Code Protection bit
  4817                           ;	CPD = OFF, Data memory code protection is disabled
  4818                           ;	Brown Out Reset Selection bits
  4819                           ;	BOREN = OFF, BOR disabled
  4820                           ;	Internal External Switchover bit
  4821                           ;	IESO = ON, Internal/External Switchover mode is enabled
  4822                           ;	Fail-Safe Clock Monitor Enabled bit
  4823                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  4824                           ;	Low Voltage Programming Enable bit
  4825                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4826                           ;	In-Circuit Debugger Mode bit
  4827                           ;	DEBUG = 0x1, unprogrammed default
  4828  2007                     	org	8199
  4829  2007  2CF1               	dw	11505
  4830                           
  4831                           ;Config register CONFIG2 @ 0x2008
  4832                           ;	Brown-out Reset Selection bit
  4833                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  4834                           ;	Flash Program Memory Self Write Enable bits
  4835                           ;	WRT = OFF, Write protection off
  4836  2008                     	org	8200
  4837  2008  3EFF               	dw	16127

Data Sizes:
    Strings     24
    Constant    26
    Data        2
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     45      79
    BANK1            80      0       8
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    _doprnt$2	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMMON[1]), 

    _doprnt$1	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_1(CODE[4]), 

    _doprnt$0	PTR struct __prbuf size(1) Largest target is 3
		 -> printf@pb(COMMON[2]), 

    S1113__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> putch(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> putch(), 

    S1113__prbuf$ptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
		 -> buf(BANK0[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    MFRC522_ReadCardSerial@str	PTR unsigned char  size(1) Largest target is 8
		 -> UID(BANK1[8]), 

    MFRC522_IsCard@TagType	PTR unsigned char  size(1) Largest target is 1
		 -> TagType(BANK0[1]), 

    MFRC522_AntiColl@serNum	PTR unsigned char  size(1) Largest target is 8
		 -> UID(BANK1[8]), 

    MFRC522_CRC@dataOut	PTR unsigned char  size(1) Largest target is 9
		 -> MFRC522_Halt@buff(BANK0[4]), MFRC522_SelectTag@buffer(COMMON[9]), 

    MFRC522_CRC@dataIn	PTR unsigned char  size(1) Largest target is 9
		 -> MFRC522_Halt@buff(BANK0[4]), MFRC522_SelectTag@buffer(COMMON[9]), 

    MFRC522_Request@TagType	PTR unsigned char  size(1) Largest target is 1
		 -> TagType(BANK0[1]), 

    MFRC522_ToCard@backData	PTR unsigned char  size(1) Largest target is 9
		 -> MFRC522_Halt@buff(BANK0[4]), MFRC522_SelectTag@buffer(COMMON[9]), UID(BANK1[8]), TagType(BANK0[1]), 

    MFRC522_ToCard@backLen	PTR unsigned int  size(1) Largest target is 2
		 -> MFRC522_AntiColl@unLen(BANK0[2]), MFRC522_Halt@unLen(BANK0[2]), MFRC522_SelectTag@recvBits(COMMON[2]), MFRC522_Request@backBits(BANK0[2]), 

    MFRC522_ToCard@sendData	PTR unsigned char  size(1) Largest target is 9
		 -> MFRC522_Halt@buff(BANK0[4]), MFRC522_SelectTag@buffer(COMMON[9]), UID(BANK1[8]), TagType(BANK0[1]), 

    SendBuff@buf	PTR unsigned char  size(1) Largest target is 4
		 -> buf(BANK0[4]), 

    uartReadByte@receivedByte	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 


Critical Paths under _main in COMMON

    _sprintf->___lwdiv
    _SendBuff->_uartReadByte
    _MFRC522_AntiColl->_MFRC522_Clear_Bit
    _MFRC522_Halt->_MFRC522_Clear_Bit
    _MFRC522_ToCard->_MFRC522_Clear_Bit
    _MFRC522_ToCard->_MFRC522_Set_Bit
    _MFRC522_CRC->_MFRC522_Clear_Bit
    _MFRC522_CRC->_MFRC522_Set_Bit
    _MFRC522_Set_Bit->_MFRC522_Rd
    _MFRC522_Set_Bit->_MFRC522_Wr
    _MFRC522_Clear_Bit->_MFRC522_Rd
    _MFRC522_Clear_Bit->_MFRC522_Wr

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_main_RFID_Reader
    _main_RFID_Reader->_MFRC522_ReadCardSerial
    _sprintf->___lwdiv
    _MFRC522_ReadCardSerial->_MFRC522_AntiColl
    _MFRC522_AntiColl->_MFRC522_ToCard
    _MFRC522_IsCard->_MFRC522_Request
    _MFRC522_Request->_MFRC522_ToCard
    _MFRC522_Halt->_MFRC522_ToCard
    _MFRC522_ToCard->_MFRC522_Clear_Bit
    _MFRC522_ToCard->_MFRC522_Set_Bit
    _MFRC522_CRC->_MFRC522_Clear_Bit
    _MFRC522_CRC->_MFRC522_Set_Bit
    _MFRC522_Set_Bit->_MFRC522_Rd
    _MFRC522_Clear_Bit->_MFRC522_Rd

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   46616
                     _InicializarMEF
                            _appInit
                   _main_RFID_Reader
                           _tickRead
 ---------------------------------------------------------------------------------
 (1) _main_RFID_Reader                                     4     4      0   46593
                                             41 BANK0      4     4      0
                       _MFRC522_Halt
                     _MFRC522_IsCard
             _MFRC522_ReadCardSerial
                           _SendBuff
                            _sprintf
                           _tickRead
 ---------------------------------------------------------------------------------
 (1) _tickRead                                             4     2      2      23
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    19      3    1144
                                              3 BANK0     13    10      3
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _SendBuff                                             6     5      1     357
                                              6 COMMON     1     0      1
                                              0 BANK0      5     5      0
                       _uartReadByte
 ---------------------------------------------------------------------------------
 (3) _uartReadByte                                         3     1      2      98
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _MFRC522_ReadCardSerial                               3     3      0   14117
                                             38 BANK0      3     3      0
                   _MFRC522_AntiColl
 ---------------------------------------------------------------------------------
 (3) _MFRC522_AntiColl                                    11    11      0   13985
                                             27 BANK0     11    11      0
                  _MFRC522_Clear_Bit
                     _MFRC522_ToCard
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_IsCard                                       2     2      0   11338
                                             36 BANK0      2     2      0
                    _MFRC522_Request
 ---------------------------------------------------------------------------------
 (3) _MFRC522_Request                                      9     8      1   11271
                                             27 BANK0      9     8      1
                     _MFRC522_ToCard
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Halt                                        10    10      0   19515
                                             27 BANK0     10    10      0
                        _MFRC522_CRC
                  _MFRC522_Clear_Bit
                     _MFRC522_ToCard
 ---------------------------------------------------------------------------------
 (4) _MFRC522_ToCard                                      18    14      4    9237
                                              9 BANK0     18    14      4
                  _MFRC522_Clear_Bit
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (3) _MFRC522_CRC                                          6     4      2    7440
                                              9 BANK0      6     4      2
                  _MFRC522_Clear_Bit
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (5) _MFRC522_Set_Bit                                      4     3      1    2331
                                              6 COMMON     2     1      1
                                              7 BANK0      2     2      0
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (5) _MFRC522_Clear_Bit                                    4     3      1    2601
                                              6 COMMON     2     1      1
                                              7 BANK0      2     2      0
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Wr                                           6     5      1    1678
                                              3 COMMON     3     2      1
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) _MFRC522_Rd                                          10    10      0     163
                                              3 COMMON     3     3      0
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (1) _appInit                                              2     2      0       0
                                              3 COMMON     2     2      0
                       _displaytInit
                           _uartInit
 ---------------------------------------------------------------------------------
 (2) _uartInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _displaytInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicializarMEF                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InicializarMEF
   _appInit
     _displaytInit
     _uartInit
   _main_RFID_Reader
     _MFRC522_Halt
       _MFRC522_CRC
         _MFRC522_Clear_Bit
           _MFRC522_Rd
           _MFRC522_Wr
         _MFRC522_Rd
         _MFRC522_Set_Bit
           _MFRC522_Rd
           _MFRC522_Wr
         _MFRC522_Wr
       _MFRC522_Clear_Bit
       _MFRC522_ToCard
         _MFRC522_Clear_Bit
         _MFRC522_Rd
         _MFRC522_Set_Bit
         _MFRC522_Wr
     _MFRC522_IsCard
       _MFRC522_Request
         _MFRC522_ToCard
         _MFRC522_Wr
     _MFRC522_ReadCardSerial
       _MFRC522_AntiColl
         _MFRC522_Clear_Bit
         _MFRC522_ToCard
         _MFRC522_Wr
     _SendBuff
       _uartReadByte
     _sprintf
       ___lwdiv
     _tickRead
   _tickRead

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       8       7       10.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2D      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      62      12        0.0%
ABS                  0      0      62       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Nov 15 10:45:33 2024

                              pc 0002                      MFRC522_Rd@i 0025                     MFRC522_CRC@i 002E  
                   MFRC522_CRC@n 002C                      MFRC522_Wr@i 0022                               l53 05BE  
                             fsr 0004                              l115 06C2                              l300 06A3  
                            l400 063B                              l234 06B0                              l315 05E3  
                            l244 06BF                              l440 050D                              l425 01BF  
                            l370 0376                              l443 050E                              l453 0304  
                            l437 01C0                              l278 067F                              l390 051F  
                            l470 03E0                              l383 03FC                              l463 04CD  
                            l392 0538                              l385 041F                              l393 054D  
                            l386 043E                              l394 054F                              l474 066B  
                            l466 03DF                              l387 0441                              l397 0655  
                            l479 0621                              l594 0287                              l870 0487  
                            _GIE 005F                              _PS0 0408                              _PS1 0409  
                            _PS2 040A                              u910 0403                              u911 03FF  
                            _PSA 040B                              u905 03EB                              _UID 00A0  
                            u940 041B                              u924 0406                              u941 041A  
                            u935 0408                              u960 043E                              u961 043D  
                            u955 0421                    ?_displaytInit 0070                              _buf 0068  
                            _isr 0680                              fsr0 0004                              indf 0000  
                 ??_MFRC522_Halt 003B                             l2201 06A4                             l2203 06A5  
                           l3011 05F1                             l2205 06AB                             l3013 05F2  
                           l3005 05E4                             l2311 0588                             l3015 05FD  
                           l3007 05E9                             l2321 0592                             l2313 058C  
                           l2081 069A                             l3009 05EE                             l2331 05A1  
                           l2323 0593                             l2315 058F                             l3107 01ED  
                           l2341 05AC                             l2333 05A2                             l2325 0598  
                           l2317 0590                             l3109 0057                             l2191 0675  
                           l2183 066C                             l2351 05B9                             l2343 05AD  
                           l2335 05A3                             l2327 059D                             l2319 0591  
                           l2079 0694                             l2193 0678                             l2185 0670  
                           l2353 05BC                             l2345 05AE                             l2337 05A5  
                           l2329 05A0                             l2195 0679                             l2187 0671  
                           l2355 05BD                             l2347 05AF                             l2339 05A9  
                           l2197 067C                             l2189 0672                             l2349 05B0  
                           l2701 004F                             l2199 06B9                             l1911 03E6  
                           l2711 00A6                             l2703 005F                             l1913 03E7  
                           l2801 02BC                             l2721 00D5                             l2713 00B3  
                           l2705 0089                             l1923 0407                             l1915 03E8  
                           l2811 02DF                             l2803 02C2                             l2731 0100  
                           l2723 00E6                             l2715 00BD                             l2707 008E  
                           l1941 0432                             l1925 040E                             l1917 03F8  
                           l1909 03E4                             l2661 052F                             l2645 0512  
                           l2813 02E4                             l2805 02CC                             l2741 011F  
                           l2733 0108                             l2725 00EC                             l2717 00C5  
                           l2709 009E                             l2821 0382                             l2901 061E  
                           l1943 0440                             l1935 0420                             l1927 0415  
                           l2671 0545                             l2663 0534                             l2655 052A  
                           l2647 0514                             l2815 02E8                             l2807 02D2  
                           l2751 017A                             l2743 0125                             l2735 0113  
                           l2727 00F0                             l2719 00CF                             l2831 03BD  
                           l2823 038B                             l2911 01C4                             l1937 0427  
                           l1929 041B                             l2673 0546                             l2657 052C  
                           l2649 051B                             l2681 064A                             l2809 02DD  
                           l2761 018E                             l2753 017F                             l2745 013C  
                           l2737 0116                             l2729 00F6                             l2841 03CC  
                           l2825 0391                             l2817 037A                             l2913 01C9  
                           l1939 0431                             l2675 0548                             l2659 052D  
                           l2683 0625                             l2763 019F                             l2755 0181  
                           l2747 0141                             l2739 011D                             l2691 003A  
                           l2843 03D2                             l2827 039B                             l2819 037B  
                           l2907 0620                             l2851 0446                             l2923 01DB  
                           l2915 01CF                             l2669 0543                             l2677 063F  
                           l2685 0625                             l2765 01A5                             l2757 0187  
                           l2749 0166                             l2693 003B                             l2781 04E4  
                           l2845 03DB                             l2837 03BE                             l2829 03B8  
                           l2861 045E                             l2853 044C                             l2941 022C  
                           l2925 01F8                             l2917 01D6                             l2679 063F  
                           l2687 0630                             l2791 028B                             l2767 01B2  
                           l2759 018B                             l2695 003D                             l2783 04FD  
                           l2839 03C8                             l2863 046F                             l2855 044F  
                           l2871 0483                             l2943 0231                             l2951 0268  
                           l2935 0206                             l2927 0200                             l2919 01DB  
                           l2793 02A1                             l2769 01B9                             l2697 0046  
                           l2689 0036                             l2785 0502                             l2777 04D1  
                           l2881 05DD                             l2865 0475                             l2857 0456  
                           l2849 0442                             l2945 0252                             l2929 0204  
                           l2953 0271                             l2795 02A5                             l2971 04A9  
                           l2963 0488                             l2787 0509                             l2779 04DB  
                           l2891 066A                             l2883 0659                             l2875 05C2  
                           l2867 0476                             l2859 045A                             l2947 025D  
                           l2939 0222                             l2955 0283                             l2797 02B2  
                           l2973 04C1                             l2965 048E                             l2885 0668  
                           l2877 05C5                             l2869 047D                             l2949 0264  
                           l2981 0328                             l2799 02B8                             l2967 048F  
                           l2895 0609                             l2879 05D7                             l2991 034B  
                           l2983 0333                             l2975 0305                             l2969 049D  
                           l2897 0614                             l2993 0357                             l2899 0619  
                           l2995 035D                             l2979 031D                             l2997 0363  
                           l2989 0336                             l2999 0371                             ?_isr 0070  
                           STR_1 0581                             STR_2 0585                             STR_3 0570  
                           _BRGH 04C2                             _T0IF 005A                             _CREN 00C4  
                           _T0CS 040D                             u2000 01CF                             u2001 01CE  
                           u2010 0221                             u2011 0220                             u2020 022C  
                           u2021 022B                             u2030 0271                             u2031 0270  
                           u2015 021D                             u1160 069A                             u2040 0283  
                           u1161 0699                             u2041 0282                             u2050 031D  
                           u2051 031C                             u2060 0328                             u2061 0327  
                           u2070 0333                             u2127 036B                             u2071 0332  
                           u2080 0363                             u2137 05B4                             u2081 0362  
                           u1700 00C5                             u1701 00C4                             u1630 0526  
                           u1710 00EC                             u1631 0522                             u1711 00EB  
                           u1800 0187                             u1720 00F0                             u1801 0186  
                           u1721 00EF                             u1650 0534                             u1810 01B2  
                           u1730 00F6                             u1651 0533                             u1811 01B1  
                           u1731 00F5                             u1660 053F                             u1644 0529  
                           u1740 0108                             u1820 0502                             u1900 044C  
                           u1661 053B                             u1741 0107                             u1821 0501  
                           u1901 044B                             u1750 0113                             u1830 0509  
                           u1815 01AE                             u1751 0112                             u1831 0508  
                           u1680 054D                             u1840 02C2                             u1760 011D  
                           u1920 045E                             u1681 054C                             u1841 02C1  
                           u1761 011C                             u1921 045D                             u1674 0542  
                           u1850 02E4                             u1770 0125                             u1690 00B3  
                           u1851 02E3                             u1771 0124                             u1691 00B2  
                           u1915 0450                             u1860 02E8                             u1780 0141  
                           u1940 046F                             u1861 02E7                             u1781 0140  
                           u1941 046E                             u1790 017F                             u1870 03BD  
                           u1791 017E                             u1695 00AF                             u1871 03BC  
                           u1935 045F                             u1880 03D2                             u1960 0483  
                           u1881 03D1                             u1961 0482                             u1945 046B  
                           u1890 03DB                             u1970 05E3                             u1891 03DA  
                           u1971 05E2                             u1955 0477                             _PEIE 005E  
                           u1980 0668                             u1981 0667                             u1990 061E  
                           u1991 061D                             _RCIF 0065                             _RFID 005B  
                           _TMR0 0001                             _SPEN 00C7                             _TXEN 04C5  
                           _TXIF 0064                             _SYNC 04C4                   _InicializarMEF 06C2  
                           _main 05E4            MFRC522_AntiColl@unLen 0041                             btemp 007E  
                           start 000C                 _MFRC522_AntiColl 0377                            ??_isr 0070  
                          ?_main 0070                   ??_displaytInit 0073          ?_MFRC522_ReadCardSerial 0070  
                          _CCPR1 0015                            _ANSEL 0188                  __end_of___lwdiv 0488  
                          i1l216 068D                            _RCREG 001A                            _VIDAS 0057  
                          _SPBRG 0099                            _PORTD 0008                            _TRISD 0088  
                          _TXREG 0019                  __end_of_appInit 05BF              __size_of_MFRC522_Rd 0061  
            __size_of_MFRC522_Wr 0041                            _tRFID 004F           __end_of_InicializarMEF 06C3  
         MFRC522_AntiColl@serNum 0045                            _putch 0000                            pclath 000A  
              _MFRC522_Clear_Bit 063C                            status 0003                            wtemp0 007E  
                __end_of_sprintf 0288               ?_MFRC522_Clear_Bit 0076                  __initialization 000F  
                   __end_of_main 0606              ??_MFRC522_Clear_Bit 0077                 ??_MFRC522_IsCard 0044  
      MFRC522_ReadCardSerial@str 0048   __end_of_MFRC522_ReadCardSerial 0622                 ??_MFRC522_ToCard 002D  
       __size_of_MFRC522_Set_Bit 001A         __size_of_MFRC522_Request 0041                 __end_of_SendBuff 05E4  
                         ??_main 0078                  MFRC522_ToCard@i 0038                  MFRC522_ToCard@n 003A  
          MFRC522_ToCard@backLen 002C               MFRC522_Rd@ucResult 0023                  MFRC522_Wr@value 0073  
                         _CCP1IE 0462        __end_of_MFRC522_Clear_Bit 0656            MFRC522_ToCard@_status 0034  
          MFRC522_ToCard@command 0037                  ?_InicializarMEF 0070                           _ANSELH 0189  
                         i1l2543 0680                           i1l2545 0681                           i1l2547 0687  
          MFRC522_ToCard@sendLen 002A                           _TMR0IE 005D                           _TMR0IF 005A  
                         _TMR1CS 0081            MFRC522_ToCard@waitIRq 0033                           _TMR1ON 0080  
                         _TRISC6 043E                           _TRISC7 043F             __size_of_MFRC522_CRC 007D  
       uartReadByte@receivedByte 0073             __end_of_MFRC522_Halt 04CE          MFRC522_AntiColl@_status 0043  
                      ??___lwdiv 0077                        ??_appInit 0073                 __end_of_tickRead 06B1  
               __end_of_uartInit 0680                           saved_w 007E                        ??_sprintf 0026  
                    SendBuff@buf 0023                      SendBuff@len 0076          __end_of__initialization 002F  
              ?_main_RFID_Reader 0070             __end_of_displaytInit 06C0           MFRC522_Request@TagType 003B  
                   ??_MFRC522_Rd 0073                     ??_MFRC522_Wr 0074               ??_main_RFID_Reader 0049  
                 __pcstackCOMMON 0070                     __pidataBANK0 06C0                 MFRC522_Halt@buff 003F  
         MFRC522_Request@_status 0041                 MFRC522_Rd@ucAddr 0021           MFRC522_Request@reqMode 0040  
                 _OPTION_REGbits 0081         __end_of_MFRC522_AntiColl 03E1                ??_MFRC522_Set_Bit 0077  
             __end_of_MFRC522_Rd 0442               __end_of_MFRC522_Wr 0550                ??_MFRC522_Request 003C  
     __size_of_MFRC522_Clear_Bit 001A                       __pbssBANK0 004D                       __pbssBANK1 00A0  
              main_RFID_Reader@i 004C           MFRC522_ToCard@backData 002B                        ?_SendBuff 0076  
              MFRC522_CRC@dataIn 002D                       __pmaintext 05E4               MFRC522_Set_Bit@tmp 0027  
              MFRC522_CRC@length 0029                 MFRC522_Wr@ucAddr 0021                       __pintentry 0004  
                        _CCP1CON 0017                   _Mostrar_Tiempo 005A                       _tInicioGAT 0053  
         MFRC522_ToCard@lastBits 0035    __end_ofdisplayWrite@tabla7seg 0560                          _T1CKPS0 0084  
                        _T1CKPS1 0085           MFRC522_ToCard@sendData 0029                       _cont_balas 006D  
                    tickRead@aux 0075                       __stringtab 0550                     _tInicioBALAS 0051  
                     ??_SendBuff 0020            __size_of_MFRC522_Halt 0046                          _TagType 006C  
                      ?_tickRead 0073                          _Tiempo0 005D                          _Tiempo1 005C  
                   _tInicioRonda 007A                        ?_uartInit 0070             MFRC522_Clear_Bit@tmp 0027  
                  ?_uartReadByte 0073                          ___lwdiv 0442                          _appInit 0588  
                        __ptext1 0305                          __ptext2 06A4                          __ptext3 01C1  
                        __ptext4 0442                          __ptext5 05BF                          __ptext6 0694  
                        __ptext7 0606                          __ptext8 0377                          __ptext9 0656  
                        _comando 0055                __end_of_hexpowers 0568                 ??_InicializarMEF 0073  
                   __size_of_isr 0014                          _sprintf 01C1                          clrloop0 06B2  
                   _MFRC522_Halt 0488            __size_of_displaytInit 0007             end_of_initialization 002F  
                     ??_tickRead 0075    MFRC522_ReadCardSerial@_status 0047                       ??_uartInit 0073  
                 ??_uartReadByte 0075                        _PORTAbits 0005                        _PORTBbits 0006  
                      _PORTCbits 0007                        _PORTDbits 0008                        _PORTEbits 0009  
                   _displaytInit 06B9                __end_of_usuario_1 0570                __end_of_usuario_2 056C  
                      _TRISAbits 0085                        _TRISBbits 0086                        _TRISCbits 0087  
                      _TRISDbits 0088                        _TRISEbits 0089                _estadoActualRONDA 0078  
                  ??_MFRC522_CRC 002B                  _MFRC522_Set_Bit 0622          MFRC522_Request@backBits 0042  
            MFRC522_ToCard@irqEn 0036                  _MFRC522_Request 04CE        __size_of_main_RFID_Reader 0072  
                      SendBuff@i 0024              start_initialization 000F                MFRC522_Halt@unLen 0043  
              ?_MFRC522_AntiColl 0070                MFRC522_Rd@address 0020                MFRC522_AntiColl@i 0044  
        __size_of_MFRC522_IsCard 0016                      __end_of_isr 0694          __size_of_MFRC522_ToCard 018E  
             ??_MFRC522_AntiColl 003B         ??_MFRC522_ReadCardSerial 0046              __end_of_MFRC522_CRC 0305  
              __size_of_SendBuff 0025                      __pdataBANK0 006D                      __pbssCOMMON 0078  
                      ___latbits 0002                    __pcstackBANK0 0020             __end_of_uartReadByte 06A4  
                    sprintf@prec 002D          __end_of_MFRC522_Set_Bit 063C               MFRC522_CRC@dataOut 002A  
        __end_of_MFRC522_Request 050F                 ___lwdiv@dividend 0075              MFRC522_Set_Bit@addr 0028  
              MFRC522_Wr@address 0020              MFRC522_Set_Bit@mask 0076                __size_of_tickRead 000D  
                       ?___lwdiv 0073                __size_of_uartInit 0014                         ?_appInit 0070  
                      __pstrings 0550            displayWrite@tabla7seg 0556                        _hexpowers 0560  
               ___lwdiv@quotient 0021                         ?_sprintf 0023                         _DISPAROS 006E  
              interrupt_function 0004                      _MFRC522_CRC 0288                         _INMORTAL 0058  
                      clear_ram0 06B1  __size_of_MFRC522_ReadCardSerial 001C                 _main_RFID_Reader 0305  
                    __stringbase 0555                   _MFRC522_IsCard 0656                   _MFRC522_ToCard 0033  
                      _usuario_1 056C                        _usuario_2 0568                     _Resta_Tiempo 0059  
                       _SendBuff 05BF                         _Send_buf 005E                 ?_MFRC522_Set_Bit 0076  
          MFRC522_Clear_Bit@addr 0028                 ?_MFRC522_Request 003B            MFRC522_Clear_Bit@mask 0076  
               __size_of___lwdiv 0046               __end_of__stringtab 0556                 __size_of_appInit 0037  
         __end_of_MFRC522_IsCard 066C            __size_of_uartReadByte 0010                       sprintf@idx 0029  
                     sprintf@val 002B           __end_of_MFRC522_ToCard 01C1           _MFRC522_ReadCardSerial 0606  
                ___lwdiv@divisor 0073                  ___lwdiv@counter 0020                         __ptext10 04CE  
                       __ptext11 0488                         __ptext20 06B9                         __ptext12 0033  
                       __ptext21 06C2                         __ptext13 0288                         __ptext22 0680  
                       __ptext14 0622                         __ptext15 063C                         __ptext16 050F  
                       __ptext17 03E1                         __ptext18 0588                         __ptext19 066C  
    MFRC522_AntiColl@serNumCheck 0040                 __size_of_sprintf 00C7          __size_of_InicializarMEF 0001  
                  __size_of_main 0022                       _MFRC522_Rd 03E1                       _MFRC522_Wr 050F  
      __size_of_MFRC522_AntiColl 006A                         _tickRead 06A4                         _uartInit 066C  
                   _uartReadByte 0694                  _estadoActualGAT 0079                      _VALOR_TIMER 0056  
                ?_MFRC522_IsCard 0070                  ?_MFRC522_ToCard 0029                      _tickCounter 004D  
                       intlevel1 0000                        sprintf@ap 002A                        sprintf@sp 002E  
          MFRC522_IsCard@TagType 0045                        stringcode 0550                         sprintf@c 002F  
                       sprintf@f 0023                         stringdir 0550                         stringtab 0550  
                  ?_MFRC522_Halt 0070         __end_of_main_RFID_Reader 0377                     ?_MFRC522_CRC 0029  
                    ?_MFRC522_Rd 0070                      ?_MFRC522_Wr 0073  
